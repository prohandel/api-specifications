{
  "openapi": "3.0.1",
  "info": {
    "title": "prohandel API",
    "description": "# Versioning\r\n\r\nThe prohandel API adheres to Semantic Versioning guidelines.\r\n\r\nEach version number consists of three parts: `MAJOR`, `MINOR`, and `PATCH`. These components serve the following purposes:\r\n\r\n- `MAJOR` version indicates significant changes to the API that are not backwards compatible.\r\n- `MINOR` version denotes the addition of new features while maintaining backwards compatibility. This includes the addition of fields to existing models.\r\n- `PATCH` version signifies bug fixes that preserve backwards compatibility.\r\n\r\nThe `MAJOR` version is reflected in the API's base URL */api/v3*.\r\n\r\n# Paging\r\n\r\nEndpoints that return multiple entities use a paging mechanism in almost all cases. Per default only 10 entities are returned in the response. The number of returned entities can be modified by setting the `ResultsPerPage` parameter in the request. This value is capped for most endpoints between `1` and `100` results per page.\r\n\r\n```http\r\nGET https://prohandel.cloud/api/v3/article?resultsPerPage=25\r\n```\r\n\r\nIf there are more results on following pages a request always returns a continuation token. This token can be passed - as is - to the parameter `ContinuationToken` to request the next page. If `ContinuationToken` is returning as `null`, no more pages exist.\r\n\r\nIn contrast to api version 2 this version uses an efficient keyset pagination in the background.\r\n\r\n# Correlation ID\r\n\r\nA correlation ID is a unique identifier assigned to a specific request or transaction as it moves through different components of a distributed system. It helps in tracking and correlating related events or logs across these components.\r\n\r\n1. **Generate a Correlation ID (optional)**: When you initiate a request to the API, generate a unique correlation ID. This can be a UUID (Universally Unique Identifier) or any other unique identifier format suitable for your system.\r\n    \r\n2. **Include Correlation ID in Requests**: Add the generated correlation ID to the X-Correlation-ID header of the API request. This header will travel along with the request as it moves through different services. In case no correlation ID is provided the API will generate one.\r\n    \r\n3. **Logging and Tracing**: Make sure to log the correlation ID along with other relevant information such as timestamps, request parameters, and any errors encountered.\r\n    \r\n4. **Debugging and Troubleshooting**: When you are investigating issues or tracing a request make sure to **always include the correlation ID in support tickets**. This helps in quickly identifying the path taken by the request through different services and pinpointing any issues encountered along the way.\r\n\r\n# Common usage examples\r\n\r\nOver the past years we have identified three main scenarios how customers use our api. There is a high probability you can adopt one of these workflows when developing a new app.\r\n\r\n## On-demand requests\r\n\r\nFor applications that only use a small subset of the available data it may be enough to query the prohandel api without any persistence layer for the returned data.\r\n\r\nFor example an application that allows customers to see the opening times and contact data of different branches could query the branch endpoint and display the information.\r\n\r\n**It is very important to acknowledge that API credentials must always be maintained securely within an environment under your control (server-side) and must never be integrated into any client-side executed code.**\r\n\r\nAchieving this objective may involve deploying a proxy to authenticate and forward client requests to the Prohandel API.\r\n\r\n## Data mirroring\r\n\r\nData mirroring entails the process of retrieving data from the API either periodically or in near real-time and storing it within a local database. This methodology proves advantageous when greater control over the data is needed.\r\n\r\n### Periodical updates\r\n\r\nThe API offers the functionality to generate periodic full exports of a particular entity. This strategy is advantageous when finer control over the data is required, albeit the necessity for near real-time updates is not critical. A full export can be initiated daily and subsequently be retrieved in CSV format. For detailed instructions on how to implement this feature, please refer to the section *Exports*.\r\n\r\n### Continuous updates\r\n\r\nTo ensure near real-time information, such as stock values in a web shop, the API offers a feature to deliver changed data for a specific endpoint. That means that in the background changes are tracked and then incrementally shipped to you when querying the api. For this to work the entity has to have the `change/<from>/<to>` endpoint.\r\n\r\nHere's the workflow:\r\n\r\n1. Trigger an export and use the returned data to initialize the local database. Keep the continueWithChangeId from the export metadata.\r\n\r\n```http\r\nPOST https://prohandel.cloud/api/v3/article/export\r\nRETURNS id: 8f959fb9-b416-4758-8573-3c91ee63259b, continueWithChangeId: 420\r\n...\r\nGET /api/v3/article/export/8f959fb9-b416-4758-8573-3c91ee63259b/download\r\n```\r\n\r\n2. Retrieve the current changeid from the system and persist the value.\r\n   \r\n```http\r\nGET https://prohandel.cloud/api/v3/changeid/current\r\nRETURNS currentChangeId: 1337\r\n```\r\n\r\n3. Utilize `continueWithChangeId` as the `from` parameter and the change ID from *step 2* as the `to` parameter to acquire incremental data updates.\r\n   \r\n```http\r\nGET https://prohandel.cloud/api/v3/article/changed/420/1337\r\n```\r\n\r\n4. Conduct a merge operation in the local database, incorporating newly created or updated data while removing deleted rows.\r\n5. Wait a few minutes.\r\n6. Fetch the current changeid from the system.\r\n   \r\n```http\r\nGET https://prohandel.cloud/api/v3/changeid/current\r\nRETURNS currentChangeId: 2183\r\n```\r\n\r\n7. Employ the persisted change ID from the previous run (*step 2*) as the `from` parameter and the change ID from *step 6* as the `to` parameter for further incremental data retrieval.\r\n   \r\n```http\r\nGET https://prohandel.cloud/api/v3/article/changed/1337/2183\r\n```\r\n\r\n8. Perform another merge operation in the local database, handling new additions or updates, and purging deleted rows.\r\n9. Wait a few minutes before continuing the loop from *step 6*.\r\n\r\nBy adhering to this workflow, you can maintain an updated and synchronized local database with the latest data from the API, ensuring the timely availability of information for your web shop or other applications.\r\n\r\n### Hybrid approach\r\n\r\nThe integration of these strategies can be tailored to specific requirements, allowing for a nuanced approach that accounts for varying data update frequencies across different entities. This flexibility enables the optimization of data synchronization processes to ensure efficient and timely updates.\r\n\r\n# Entities\r\n\r\nThis API adheres to predefined structural guidelines governing the organization and composition of entities.\r\n\r\n## Entity keys\r\n\r\nThe methods for uniquely identifying an entity within the system.\r\n\r\n### Numeric\r\n\r\nThe majority of entities within the system are equipped with a numeric identifier, consistently accessible via the `number` field. However, certain scenarios may demand a compound identification mechanism, where the numeric identifier must be combined with another field value to establish uniqueness. In such instances, the entity may either lack a 'Get by number' endpoint or necessitate additional parameters for retrieval.\r\n\r\n### Globally unique ID (GUID)\r\n\r\nThe Global Unique Identifier (GUID) serves as the exclusive identifier for an entity, alone ensuring its unique identification within the system. This identifier is consistently accessible through the `id` field.\r\n\r\n### References\r\n\r\nReferences to other entities are identified by their respective field names, structured as follows: for GUID references, the format is *entity name + id* (e.g., articleSizeId, customerId), while for numeric identifier references, it is *entity name + number* (e.g., articleNumber, customerNumber).\r\n\r\n## Instructions\r\n\r\nInstructions represent a distinct entity type within the system, requiring explicit booking by the system to enact their effects. For instance, upon creation of a transfer instruction, the actual transfer of the article does not occur instantly; instead, it awaits processing in the system's booking queue until the next operational cycle. Once the cycle completes, the article's stock diminishes in the source branch while increasing in the target branch.\r\n\r\nInstructions can encounter failures during booking. These booking errors necessitate resolution within the primary ERP (prohandel Warenwirtschaft).\r\n\r\n## Exports\r\n\r\nExports serve as a powerful feature designed for the efficient extraction of substantial datasets. \r\n\r\nTriggering an export is facilitated through the 'Create export' endpoint of an entity. It is important to note that exports can only be initiated once per day, with a minimum interval of 23 hours between triggers. Upon triggering an export, the system schedules the creation of the export file, typically completing within 15 minutes. However, factors such as system load or user-defined export disablement during specific periods may cause delays of several hours. \r\n\r\nTo monitor the progress of an export, developers can periodically check its status using the 'Get export by id' endpoint. In cases where multiple exports are triggered simultaneously, monitoring the status of the most recently triggered export may suffice. Once the status transitions to `ready`, indicating completion, the export becomes available for download. \r\n\r\nThe download endpoint returns a 303 redirection. Please ensure that client applications either automatically follow redirects or manually retrieve the referenced file from the location header.\r\n\r\nThe exported file is gzip compressed and requires decompression before accessing the contained CSV data.\r\n\r\n# Status codes\r\n\r\nThe API employs distinct status codes to communicate the success or failure of a request, as well as to provide guidance on the expected contents of the response body.\r\n\r\n- `200`: The request was successful, and the entity data is provided in the response body.\r\n- `201`: The request was successful, and no entity data is returned. However, the URL to retrieve the created entity is available in the location header.\r\n- `204`: The request was successful, but no data is returned.\r\n- `303`: The request results in a redirection to another URL specified in the location header, typically used for export data download.\r\n- `400`: Format errors or issues with submitted data, such as referencing a nonexistent or ineligible entity. Resolution lies with the client, requiring a retry with modified data.\r\n- `401`: Authentication failure. See authentication section.\r\n- `403`: Authenticated but no permission to access entity. See authentication section.\r\n- `404`: The requested entity could not be found.\r\n- `405`: The HTTP method used in the request is not allowed. Ensure the correct HTTP method (GET, POST, PUT, DELETE) is utilized.\r\n- `409`: An update conflict occurred, indicating that the entity may have been concurrently updated from another source. Refetch the entity and attempt to apply changes again.\r\n- `429`: Too many requests. Certain endpoints may enforce rate-limiting measures, restricting the frequency of requests. If wait instructions are provided in the headers, follow them; otherwise, significantly reduce the request rate.\r\n- `500`: The server encountered an error. If this issue persists, please initiate a support ticket for further assistance.\r\n- `502`: A service relied upon by the API failed to function as expected. Retry the request at a later time.\r\n- `503`: The service is currently unavailable. Please attempt the request again later.\r\n\r\n# Migration\r\n\r\nAs new concepts and behaviour of version 3 have been described before, this will focus solely on the migration at endpoint level and therefore creating a map of which endpoint in V2 is represented by which endpoint in V3.\r\n\r\nSome endpoints have been removed due to either being a custom endpoint or not being used while alternatives exist to still retrieve the resulting data (this may require client-side filtering). Custom endpoints were programmed for specific audiences in the beginning. This proved to be an anti-pattern resulting in API clutter and had performance implications and will therefore not be supported in future releases.\r\n\r\nExport endpoints have been added to all relevant entities. These are not listed explicitly.\r\n\r\n| Endpoint in V2                                                                  | Endpoint in V3                                                                                                                                                                                                                                                                                                                                          |\r\n| ------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\r\n| /api/v2/article | /api/v3/article |\r\n| /api/v2/article/supplier/{supplierNumber} | /api/v3/article/supplierNumber/{supplierNumber} |\r\n| /api/v2/article/category/{categoryNumber} | /api/v3/article/categoryNumber/{categoryNumber} |\r\n| /api/v2/article/firstPurchase/{firstPurchase} | /api/v3/article/firstPurchase/{firstPurchase} |\r\n| /api/v2/article/lastSale/{lastSale} | /api/v3/article/lastSale/{lastSale} |\r\n| /api/v2/article/{id} | /api/v3/article/{id} |\r\n| /api/v2/article/number/{number} | /api/v3/article/{number} |\r\n| /api/v2/article/changed/{since} | /api/v3/article/changed/{from}/{to} |\r\n| /api/v2/articlesize/{id} | /api/v3/articleSize/{id} |\r\n| /api/v2/articlesize/ean/{ean} | /api/v3/articleSize/ean/{ean} |\r\n| /api/v2/articlesize/branch/{branchNumber}/number/{number} | /api/v3/articleSize/branchNumber/{branchNumber}/number/{number} |\r\n| /api/v2/articlesize/branch/{branchNumber} | /api/v3/articleSize/branchNumber/{branchNumber} |\r\n| /api/v2/articlesize/branch/{branchNumber}/changed/{since} | /api/v3/articleSize/branchNumber/{branchNumber}/changed/{from}/{to} |\r\n| /api/v2/articlesize | /api/v3/articleSize |\r\n| /api/v2/articlesize/branch/{branchNumber}/articleNumber/{articleNumber} | /api/v3/articleSize/branchNumber/{branchNumber}/articleNumber/{articleNumber} |\r\n| /api/v2/articlesize/articleNumber/{articleNumber} | /api/v3/articleSize/articleNumber/{articleNumber} |\r\n| /api/v2/articlesize/changed/{since} | /api/v3/articleSize/changed/{from}/{to} |\r\n| /api/v2/articlesize/firstPurchase/{firstPurchase} | /api/v3/articleSize/firstPurchaseDate/{firstPurchaseDate} |\r\n| /api/v2/articlesize/lastSale/{lastSale} | /api/v3/articleSize/lastSaleDate/{lastSaleDate} |\r\n| /api/v2/articlesize/minimumStock/{minStock} | /api/v3/articleSize/minimumStock/{minimumStock} |\r\n| /api/v2/articlesize/EAN | /api/v3/articleSize/ean |\r\n| /api/v2/articlesize/EAN/changed/{since} | /api/v3/articleSize/ean/changed/{from}/{to} |\r\n| /api/v2/branch/{id} | /api/v3/branch/{id} |\r\n| /api/v2/branch/number/{number} | /api/v3/branch/{number} |\r\n| /api/v2/branch | /api/v3/branch |\r\n| /api/v2/branch/changed/{since} | /api/v3/branch/changed/{from}/{to} |\r\n| /api/v2/cashRegisterPaymentOption/{id} | /api/v3/paymentOption/{id} |\r\n| /api/v2/cashRegisterPaymentOption/number/{number} | /api/v3/paymentOption/{number} |\r\n| /api/v2/cashRegisterPaymentOption | /api/v3/paymentOption |\r\n| /api/v2/cashRegisterPaymentOption/changed/{since} | /api/v3/paymentOption/changed/{from}/{to} |\r\n| /api/v2/category/{id} | /api/v3/category/{id} |\r\n| /api/v2/category/number/{number} | /api/v3/category/{number} |\r\n| /api/v2/category | /api/v3/category |\r\n| /api/v2/category/changed/{since} | /api/v3/category/changed/{from}/{to} |\r\n| /api/v2/color/{id} | /api/v3/color/{id} |\r\n| /api/v2/color/number/{number} | /api/v3/color/{number} |\r\n| /api/v2/color | /api/v3/color |\r\n| /api/v2/color/changed/{since} | /api/v3/color/changed/{from}/{to} |\r\n| /api/v2/country/{id} | /api/v3/country/{id} |\r\n| /api/v2/country/number/{number} | /api/v3/country/key/{key} |\r\n| /api/v2/country/isoalpha2/{code} | `REMOVED` |\r\n| /api/v2/country/isoalpha3/{code} | `REMOVED` |\r\n| /api/v2/country | /api/v3/country |\r\n| /api/v2/country/changed/{since} | /api/v3/country/changed/{from}/{to} |\r\n| /api/v2/credit/{id} | /api/v3/credit/{id} |\r\n| /api/v2/credit/number/{number} | /api/v3/credit/{number} |\r\n| /api/v2/credit | /api/v3/credit |\r\n| /api/v2/credit/customer/{customerNumber}/status/{status} | /api/v3/credit/customerNumber/{customerNumber}/status/{status} |\r\n| /api/v2/credit/status/{status} | /api/v3/credit/status/{status} |\r\n| /api/v2/credit/changed/{since} | /api/v3/credit/changed/{from}/{to} |\r\n| /api/v2/credit/redemption/{id} | `REMOVED` |\r\n| /api/v2/credit/redemption/number/{number} | `REMOVED` |\r\n| /api/v2/credit/redemption | `REMOVED` |\r\n| /api/v2/credit/redemption/changed/{since} | `REMOVED` |\r\n| /api/v2/credit/redemption/customer/{customerNumber}/status/{status} | `REMOVED` |\r\n| /api/v2/credit/redemption/status/{status} | `REMOVED` |\r\n| /api/v2/currency/{id} | /api/v3/currency/{id} |\r\n| /api/v2/currency/number/{number} | /api/v3/currency/key/{key} |\r\n| /api/v2/currency | /api/v3/currency |\r\n| /api/v2/currency/changed/{since} | /api/v3/currency/changed/{from}/{to} |\r\n| /api/v2/customer/{id} | /api/v3/customer/{id} |\r\n| /api/v2/customer/number/{number} | /api/v3/customer/{number} |\r\n| /api/v2/customer | /api/v3/customer |\r\n| /api/v2/customer/changed/{since} | /api/v3/customer/changed/{from}/{to} |\r\n| /api/v2/customer/city/{city} | `REMOVED` |\r\n| /api/v2/customer/email/{email} | /api/v3/customer/email/{email} |\r\n| /api/v2/customer/customerCard/{customerCard} | /api/v3/customer/customerCard/{customerCardNumber} |\r\n| /api/v2/customerCard/{id} | /api/v3/customerCard/{id} |\r\n| /api/v2/customerCard/customer/{customerNumber} | /api/v3/customerCard/customer/{customerNumber} |\r\n| /api/v2/customerCard | /api/v3/customerCard |\r\n| /api/v2/customerCard/changed/{since} | /api/v3/customerCard/changed/{from}/{to} |\r\n| /api/v2/customerOrder | /api/v3/customerOrder |\r\n| /api/v2/customerOrder/changed/{since} | /api/v3/customerOrder/changed/{from}/{to} |\r\n| /api/v2/customerOrder/{id} | /api/v3/customerOrder/{id} |\r\n| /api/v2/customerOrder/number/{number} | /api/v3/customerOrder/externalOrderNumber/{number} |\r\n| /api/v2/customerOrder/customerNumber/{customerNumber} | `REMOVED` |\r\n| /api/v2/department/{id} | /api/v3/department/{id} |\r\n| /api/v2/department/number/{number} | /api/v3/department/{number} |\r\n| /api/v2/department | /api/v3/department |\r\n| /api/v2/department/changed/{since} | /api/v3/department/changed/{from}/{to} |\r\n| /api/v2/deposit/{id} | /api/v3/deposit/{id} |\r\n| /api/v2/deposit/number/{number} | /api/v3/deposit/{number} |\r\n| /api/v2/deposit | /api/v3/deposit |\r\n| /api/v2/deposit/customer/{customerNumber}/status/{status} | /api/v3/deposit/customerNumber/{customerNumber}/status/{status} |\r\n| /api/v2/deposit/status/{status} | /api/v3/deposit/status/{status} |\r\n| /api/v2/deposit/changed/{since} | /api/v3/deposit/changed/{from}/{to} |\r\n| /api/v2/deposit/redemption/{id} | `REMOVED` |\r\n| /api/v2/deposit/redemption/number/{number} | `REMOVED` |\r\n| /api/v2/deposit/redemption | `REMOVED` |\r\n| /api/v2/deposit/redemption/changed/{since} | `REMOVED` |\r\n| /api/v2/deposit/redemption/customer/{customerNumber}/status/{status} | `REMOVED` |\r\n| /api/v2/deposit/redemption/status/{status} | `REMOVED` |\r\n| /api/v2/directdebit/customer/{customerNumber}/date/{dateFrom}/{dateUntil} | `REMOVED` |\r\n| /api/v2/action/branch/{branch}/externalCustomerReturn | `REMOVED` |\r\n| /api/v2/desadv | /api/v3/dispatchAdvice |\r\n| /api/v2/desadv/check | /api/v3/dispatchAdviceCheckInstruction |\r\n| /api/v2/action/externalInventoryDiscrepancy | /api/v3/inventoryDiscrepancyInstruction |\r\n| /api/v2/action/externalOrder | /api/v3/purchaseOrderInstruction |\r\n| /api/v2/action/branch/{branch}/externalPayment | /api/v3/saleInstruction |\r\n| /api/v2/action/branch/{branch}/externalPaymentReturn | /api/v3/customerReturnInstruction |\r\n| /api/v2/action/branch/{branch}/externalPaymentCancelation | /api/v3/saleCancellationInstruction |\r\n| /api/v2/action/externalPriceReduction | /api/v3/priceReductionInstruction |\r\n| /api/v2/action/externalStocktaking | /api/v3/stocktakingInstruction |\r\n| /api/v2/action/branch/{branch}/externalSupplierReturn | /api/v3/supplierReturnInstruction |\r\n| /api/v2/action/externalTransfer | /api/v3/transferInstruction |\r\n| /api/v2/function/{id} | /api/v3/function/{id} |\r\n| /api/v2/function/number/{number} | /api/v3/function/{number} |\r\n| /api/v2/function | /api/v3/function |\r\n| /api/v2/function/changed/{since} | /api/v3/function/changed/{from}/{to} |\r\n| /api/v2/generalcategory/{id} | /api/v3/generalCategory/{id} |\r\n| /api/v2/generalcategory/number/{number} | /api/v3/generalCategory/{number} |\r\n| /api/v2/generalcategory | /api/v3/generalCategory |\r\n| /api/v2/generalcategory/changed/{since} | /api/v3/generalCategory/changed/{from}/{to} |\r\n| /api/v2/inventory/{id} | /api/v3/inventory/{id} |\r\n| /api/v2/inventory | /api/v3/inventory |\r\n| /api/v2/inventory/active | /api/v3/inventory/active/{active} |\r\n| /api/v2/inventory/changed/{since} | /api/v3/inventory/changed/{from}/{to} |\r\n| /api/v2/invoice/{id} | /api/v3/invoice/{id} |\r\n| /api/v2/invoice/number/{number} | /api/v3/invoice/{number} |\r\n| /api/v2/invoice | /api/v3/invoice |\r\n| /api/v2/invoice/changed/{since} | /api/v3/invoice/changed/{from}/{to} |\r\n| /api/v2/label/{id} | /api/v3/brand/{id} |\r\n| /api/v2/label/number/{number} | /api/v3/brand/{number} |\r\n| /api/v2/label | /api/v3/brand |\r\n| /api/v2/label/changed/{since} | /api/v3/brand/changed/{from}/{to} |\r\n| /api/v2/labelType/{id} | /api/v3/labelType/{id} |\r\n| /api/v2/labelType/number/{number} | /api/v3/labelType/{number} |\r\n| /api/v2/labelType | /api/v3/labelType |\r\n| /api/v2/labelType/changed/{since} | /api/v3/labelType/changed/{from}/{to} |\r\n| /api/v2/maincategory/{id} | /api/v3/mainCategory/{id} |\r\n| /api/v2/maincategory/number/{number} | /api/v3/mainCategory/{number} |\r\n| /api/v2/maincategory | /api/v3/mainCategory |\r\n| /api/v2/maincategory/changed/{since} | /api/v3/mainCategory/changed/{from}/{to} |\r\n| /api/v2/maindepartment/{id} | /api/v3/mainDepartment/{id} |\r\n| /api/v2/maindepartment/number/{number} | /api/v3/mainDepartment/{number} |\r\n| /api/v2/maindepartment | /api/v3/mainDepartment |\r\n| /api/v2/maindepartment/changed/{since} | /api/v3/mainDepartment/changed/{from}/{to} |\r\n| /api/v2/material/{id} | /api/v3/material/{id} |\r\n| /api/v2/material/number/{number} | /api/v3/material/{number} |\r\n| /api/v2/material | /api/v3/material |\r\n| /api/v2/material/changed/{since} | /api/v3/material/changed/{from}/{to} |\r\n| /api/v2/minimumInventory | /api/v3/minimumStock |\r\n| /api/v2/minimumInventory/changed/{since} | /api/v3/minimumStock/changed/{from}/{to} |\r\n| /api/v2/order | /api/v3/purchaseOrder<br>/api/v3/purchaseOrderPosition<br>/api/v3/purchaseOrderPositionSize |\r\n| /api/v2/order/changed/{since} | /api/v3/purchaseOrder/changed/{from}/{to}<br>/api/v3/purchaseOrderPosition/changed/{from}/{to}<br> |\r\n| /api/v2/outbound/supplierreturn | /api/v3/outboundSupplierReturn<br>/api/v3/outboundSupplierReturn/{id}<br>/api/v3/outboundSupplierReturn/receiptNumber/{receiptNumber} |\r\n| /api/v2/outbound/supplierreturn/changed/{since} | /api/v3/outboundSupplierReturn/changed/{from}/{to} |\r\n| /api/v2/outbound/transfer | /api/v3/outboundTransfer<br>/api/v3/outboundTransfer/{id}<br>/api/v3/outboundTransfer/receiptNumber/{receiptNumber} |\r\n| /api/v2/outbound/transfer/changed/{since} | /api/v3/outboundTransfer/changed/{from}/{to} |\r\n| /api/v2/outbound/misc | /api/v3/outboundMisc<br>/api/v3/outboundMisc/{id}<br>/api/v3/outboundMisc/receiptNumber/{receiptNumber} |\r\n| /api/v2/outbound/misc/changed/{since} | /api/v3/outboundMisc/changed/{from}/{to} |\r\n| /api/v2/outbound/inventory | /api/v3/outboundInventoryDifference<br>/api/v3/outboundInventoryDifference/{id}<br>/api/v3/outboundInventoryDifference/receiptNumber/{receiptNumber} |\r\n| /api/v2/outbound/inventory/changed/{since} | /api/v3/outboundInventoryDifference/changed/{from}/{to} |\r\n| /api/v2/packinglist/{id} | /api/v3/inboundIntake/{id}<br>/api/v3/inboundMisc/{id}<br>/api/v3/inboundTransfer/{id} |\r\n| /api/v2/packinglist/receipt/{receiptNumber} | /api/v3/inboundIntake/receiptNumber/{receiptNumber}<br>/api/v3/inboundMisc/receiptNumber/{receiptNumber}<br>/api/v3/inboundTransfer/receiptNumber/{receiptNumber} |\r\n| /api/v2/packinglist | /api/v3/inboundIntake<br>/api/v3/inboundMisc<br>/api/v3/inboundTransfer |\r\n| /api/v2/packinglist/changed/{since} | /api/v3/inboundIntake/changed/{from}/{to}<br>/api/v3/inboundMisc/changed/{from}/{to}<br>/api/v3/inboundTransfer/changed/{from}/{to} |\r\n| /api/v2/packinglist/type/{type} | `REMOVED` |\r\n| /api/v2/pattern/{id} | /api/v3/pattern/{id} |\r\n| /api/v2/pattern/number/{number} | /api/v3/pattern/{number} |\r\n| /api/v2/pattern | /api/v3/pattern |\r\n| /api/v2/pattern/changed/{since} | /api/v3/pattern/changed/{from}/{to} |\r\n| /api/v2/payment/{id} | /api/v3/payment/{id} |\r\n| /api/v2/payment/number/{number} | /api/v3/payment/invoiceNumber/{invoiceNumber} |\r\n| /api/v2/payment | /api/v3/payment |\r\n| /api/v2/payment/changed/{since} | /api/v3/payment/changed/{from}/{to} |\r\n| /api/v2/paymentOption/{id} | /api/v3/webPaymentOption/{id} |\r\n| /api/v2/paymentOption/number/{number} | /api/v3/webPaymentOption/{number} |\r\n| /api/v2/paymentOption | /api/v3/webPaymentOption |\r\n| /api/v2/paymentOption/changed/{since} | /api/v3/webPaymentOption/changed/{from}/{to} |\r\n| /api/v2/promotion/{id} | `REMOVED` |\r\n| /api/v2/promotion/number/{number} | `REMOVED` |\r\n| /api/v2/promotion | `REMOVED` |\r\n| /api/v2/promotion/changed/{since} | `REMOVED` |\r\n| /api/v2/promotion/redemption/{id} | `REMOVED` |\r\n| /api/v2/promotion/redemption/receipt/{receiptNumber} | `REMOVED` |\r\n| /api/v2/promotion/redemption | `REMOVED` |\r\n| /api/v2/promotion/redemption/changed/{since} | `REMOVED` |\r\n| /api/v2/promotion/custom/redemption | `REMOVED` |\r\n| /api/v2/promotion/custom/redemption/changed/{since} | `REMOVED` |\r\n| /api/v2/promotion/custom/redemption/customer/{customerNumber} | `REMOVED` |\r\n| /api/v2/promotionSelection | `REMOVED` |\r\n| /api/v2/promotionSelection/changed/{since} | `REMOVED` |\r\n| /api/v2/promotionSelection/number/{number} | `REMOVED` |\r\n| /api/v2/receipt/number/{number} | /api/v3/receipt/{number}<br>/api/v3/receiptPosition/{number}<br>/api/v3/receiptInformation/{number}<br>/api/v3/receiptPaymentMethod/{number} |\r\n| /api/v2/receipt | /api/v3/receipt<br>/api/v3/receiptPosition<br>/api/v3/receiptInformation<br>/api/v3/receiptPaymentMethod |\r\n| /api/v2/receipt/KeysetPaging | `REMOVED` |\r\n| /api/v2/receipt/changed/{since} | /api/v3/receipt/changed/{from}/{to}<br>/api/v3/receiptPosition/changed/{from}/{to}<br>/api/v3/receiptInformation/changed/{from}/{to}<br>/api/v3/receiptPaymentMethod/changed/{from}/{to} |\r\n| /api/v2/receipt/customer/{customerNumber} | /api/v3/receipt/customer/{customerNumber} |\r\n| /api/v2/receipt/customer | `REMOVED` |\r\n| /api/v2/sale/{id} | /api/v3/sale/{id}<br>/api/v3/customerReturn/{id} |\r\n| /api/v2/sale/receipt/{receiptNumber} | /api/v3/sale/{receiptNumber}<br>/api/v3/customerReturn/{receiptNumber} |\r\n| /api/v2/sale | /api/v3/sale<br>/api/v3/customerReturn |\r\n| /api/v2/sale/changed/{since} | /api/v3/sale/changed/{from}/{to}<br>/api/v3/customerReturn/changed/{from}/{to} |\r\n| /api/v2/sale/customer/{customerNumber} | /api/v3/sale/customer/{customerNumber} |\r\n| /api/v2/sale/customer/{customerNumber}/date/{date} | `REMOVED` |\r\n| /api/v2/sale/customer/{customerNumber}/date/range/{dateFrom}/{dateUntil} | `REMOVED` |\r\n| /api/v2/sale/date/{date} | `REMOVED` |\r\n| /api/v2/sale/date/range/{dateFrom}/{dateUntil} | `REMOVED` |\r\n| /api/v2/sale/customer/{customerNumber}/type/{type} | `REMOVED` |\r\n| /api/v2/sale/type/{type} | `REMOVED` |\r\n| /api/v2/sale/custom/{id} | `REMOVED` |\r\n| /api/v2/sale/custom/receipt/{receiptNumber} | `REMOVED` |\r\n| /api/v2/sale/custom | `REMOVED` |\r\n| /api/v2/sale/custom/changed/{since} | `REMOVED` |\r\n| /api/v2/sale/custom/customer/{customerNumber} | `REMOVED` |\r\n| /api/v2/sale/custom/customer/{customerNumber}/changed/{since} | `REMOVED` |\r\n| /api/v2/sale/custom/customer/{customerNumber}/date/{date} | `REMOVED` |\r\n| /api/v2/sale/custom/customer/{customerNumber}/date/range/{dateFrom}/{dateUntil} | `REMOVED` |\r\n| /api/v2/sale/custom/date/{date} | `REMOVED` |\r\n| /api/v2/sale/custom/date/range/{dateFrom}/{dateUntil} | `REMOVED` |\r\n| /api/v2/season/{id} | /api/v3/season/{id} |\r\n| /api/v2/season/number/{number} | /api/v3/season/{number} |\r\n| /api/v2/season | /api/v3/season |\r\n| /api/v2/season/changed/{since} | /api/v3/season/changed/{from}/{to} |\r\n| /api/v2/selection/{id} | /api/v3/selection/{id} |\r\n| /api/v2/selection/receipt/{receiptNumber} | `REMOVED` |\r\n| /api/v2/selection/status/{status}/EAN/{ean} | /api/v3/selection/status/{status}/articleSizeNumber/{articleSizeNumber} |\r\n| /api/v2/selection | /api/v3/selection |\r\n| /api/v2/selection/changed/{since} | /api/v3/selection/changed/{from}/{to} |\r\n| /api/v2/selection/custom/{id} | `REMOVED` |\r\n| /api/v2/selection/custom/receipt/{receiptNumber} | `REMOVED` |\r\n| /api/v2/selection/custom | `REMOVED` |\r\n| /api/v2/selection/custom/changed/{since} | `REMOVED` |\r\n| /api/v2/shape/{id} | /api/v3/shape/{id} |\r\n| /api/v2/shape/number/{number} | /api/v3/shape/{number} |\r\n| /api/v2/shape | /api/v3/shape |\r\n| /api/v2/shape/changed/{since} | /api/v3/shape/changed/{from}/{to} |\r\n| /api/v2/shipmentOption/{id} | /api/v3/shipmentOption/{id} |\r\n| /api/v2/shipmentOption/number/{number} | /api/v3/shipmentOption/{number} |\r\n| /api/v2/shipmentOption | /api/v3/shipmentOption |\r\n| /api/v2/shipmentOption/changed/{since} | /api/v3/shipmentOption/changed/{from}/{to} |\r\n| /api/v2/shop/{id} | /api/v3/shop/{id} |\r\n| /api/v2/shop/number/{number} | /api/v3/shop/{number} |\r\n| /api/v2/shop | /api/v3/shop |\r\n| /api/v2/shop/changed/{since} | /api/v3/shop/changed/{from}/{to} |\r\n| /api/v2/shoppingCart/{id} | `INTERNAL` |\r\n| /api/v2/shoppingCart/customer/{customerNumber} | `INTERNAL` |\r\n| /api/v2/shoppingCart/staff/{staffNumber} | `INTERNAL` |\r\n| /api/v2/shoppingCart | `INTERNAL` |\r\n| /api/v2/shoppingCart/changed/{since} | `INTERNAL` |\r\n| /api/v2/shoppingCart/{shoppingCartId} | `INTERNAL` |\r\n| /api/v2/size/{id} | /api/v3/size/{id} |\r\n| /api/v2/size/sizeGroupNumber/{sizeGroupNumber} | /api/v3/size/sizeRangeNumber/{sizeRangeNumber} |\r\n| /api/v2/size | /api/v3/size |\r\n| /api/v2/size/changed/{since} | /api/v3/size/changed/{from}/{to} |\r\n| /api/v2/sizeClass/{id} | /api/v3/sizeRange/{id} |\r\n| /api/v2/sizeClass/number/{number} | /api/v3/sizeRange/{number} |\r\n| /api/v2/sizeClass | /api/v3/sizeRange |\r\n| /api/v2/sizeClass/changed/{since} | /api/v3/sizeRange/changed/{from}/{to} |\r\n| /api/v2/sizeGroup/{id} | /api/v3/sizeGroup/{id} |\r\n| /api/v2/sizeGroup/number/{number} | /api/v3/sizeGroup/{number} |\r\n| /api/v2/sizeGroup | /api/v3/sizeGroup |\r\n| /api/v2/sizeGroup/changed/{since} | /api/v3/sizeGroup/changed/{from}/{to} |\r\n| /api/v2/specialPrice/{id} | /api/v3/specialPrice/{id} |\r\n| /api/v2/specialPrice/type/{type} | /api/v3/specialPrice |\r\n| /api/v2/specialPrice/type/{type}/changed/{since} | /api/v3/specialPrice/changed/{from}/{to} |\r\n| /api/v2/specialPrice/type/{type}/validity/changed/{since} | `REMOVED` |\r\n| /api/v2/specialPrice/type/{type}/productVariant/{productVariantId} | /api/v3/specialPrice/webArticleSize/{WebArticleSizeId} |\r\n| /api/v2/specialPrice/type/{type}/product/{productId} | /api/v3/specialPrice/webArticle/{webArticleId} |\r\n| /api/v2/specialPrice/type/{type}/articleSize/{articleSizeId} | /api/v3/specialPrice/articleSize/{articleSizeId} |\r\n| /api/v2/specialPrice/type/{type}/articleSize/number/{articleSizeNumber} | /api/v3/specialPrice/articleSize/{articleSizeNumber} |\r\n| /api/v2/specialPrice/branch/{branchNumber}/type/{type} | /api/v3/specialPrice/branch/{branch} |\r\n| /api/v2/specialPrice/branch/{branchNumber}/type/{type}/changed/{since} | `REMOVED` |\r\n| /api/v2/specialPrice/branch/{branchNumber}/type/{type}/validity/changed/{since} | `REMOVED` |\r\n| /api/v2/staff/{id} | /api/v3/staff/{id} |\r\n| /api/v2/staff/number/{number} | /api/v3/staff/{number} |\r\n| /api/v2/staff | /api/v3/staff |\r\n| /api/v2/staff/changed/{since} | /api/v3/staff/changed/{from}/{to} |\r\n| /api/v2/status/synchronization | `REMOVED` |\r\n| /api/v2/supplier/{id} | /api/v3/supplier/{id} |\r\n| /api/v2/supplier/number/{number} | /api/v3/supplier/{number} |\r\n| /api/v2/supplier | /api/v3/supplier |\r\n| /api/v2/supplier/changed/{since} | /api/v3/supplier/changed/{from}/{to} |\r\n| /api/v2/supplierreturn | /api/v3/supplierReturn |\r\n| /api/v2/supplierreturn/changed/{since} | /api/v3/supplierReturn/changed/{from}/{to} |\r\n| /api/v2/targetGroup/{id} | /api/v3/targetGroup/{id} |\r\n| /api/v2/targetGroup/number/{number} | /api/v3/targetGroup/{number} |\r\n| /api/v2/targetGroup | /api/v3/targetGroup |\r\n| /api/v2/targetGroup/changed/{since} | /api/v3/targetGroup/changed/{from}/{to} |\r\n| /api/v2/text/{id} | /api/v3/supplierReturnReason/{id}<br>/api/v3/customerReturnReason/{id} |\r\n| /api/v2/text/type/{type}/number/{number} | /api/v3/supplierReturnReason/{number}<br>/api/v3/customerReturnReason/{number} |\r\n| /api/v2/text | `REMOVED` |\r\n| /api/v2/text/changed/{since} | /api/v3/supplierReturnReason/changed/{from}/{to}<br>/api/v3/customerReturnReason/changed/{from}/{to} |\r\n| /api/v2/text/type/{type} | /api/v3/supplierReturnReason<br>/api/v3/customerReturnReason |\r\n| /api/v2/voucher/{id} | /api/v3/voucher/{id}<br>/api/v3/coupon/{id} |\r\n| /api/v2/voucher/number/{number} | /api/v3/voucher/{number}<br>/api/v3/coupon/{number} |\r\n| /api/v2/voucher/code/{code} | /api/v3/voucher/code/{internetCode}<br>/api/v3/coupon/code/{internetCode} |\r\n| /api/v2/voucher | /api/v3/voucher<br>/api/v3/coupon |\r\n| /api/v2/voucher/customer/{customerNumber}/status/{status} | /api/v3/voucher/customerNumber/{customerNumber}/status/{status}<br>/api/v3/coupon/customerNumber/{customerNumber}/status/{status} |\r\n| /api/v2/voucher/status/{status} | /api/v3/voucher/status/{status}<br>/api/v3/coupon/status/{status} |\r\n| /api/v2/voucher/changed/{since} | /api/v3/voucher/changed/{from}/{to}<br>/api/v3/coupon/changed/{from}/{to} |\r\n| /api/v2/voucher/redemption/{id} | /api/v3/redeemedVoucher/{id}<br>/api/v3/redeemedCoupon/{id} |\r\n| /api/v2/voucher/redemption/number/{number} | /api/v3/redeemedVoucher/{number}<br>/api/v3/redeemedCoupon/{number} |\r\n| /api/v2/voucher/redemption | /api/v3/redeemedVoucher<br>/api/v3/redeemedCoupon |\r\n| /api/v2/voucher/redemption/changed/{since} | /api/v3/redeemedVoucher/changed/{from}/{to}<br>/api/v3/redeemedCoupon/changed/{from}/{to} |\r\n| /api/v2/voucher/redemption/customer/{customerNumber}/status/{status} | /api/v3/redeemedVoucher/customerNumber/{customerNumber}/status/{status}<br>/api/v3/redeemedCoupon/customerNumber/{customerNumber}/status/{status} |\r\n| /api/v2/voucher/redemption/status/{status} | /api/v3/redeemedVoucher/status/{status}<br>/api/v3/redeemedCoupon/status/{status} |\r\n| /api/v2/voucher/redeem/{voucherId} | /api/v3/redeemedVoucher |\r\n| /api/v2/voucher/reserve | /api/v3/voucher/{voucherId}/reserve |\r\n| /api/v2/voucher/reservation/{id} | /api/v3/voucherReservation/{id} |\r\n| /api/v2/voucher/reservation/{id}/cancel | /api/v3/voucherReservation/{id} |\r\n| /api/v2/voucher/{id}/reservations | /api/v3/voucher/{voucherId}/reservation |\r\n| /api/v2/webshop/branch | /api/v3/branch |\r\n| /api/v2/webshop/branch/changed/{since} | /api/v3/branch/changed/{from}/{to} |\r\n| /api/v2/webshop/branch/{id} | /api/v3/branch/{id} |\r\n| /api/v2/webshop/branch/number/{number} | /api/v3/branch/{number} |\r\n| /api/v2/webshop/{webshop}/order | /api/v3/webOrder/branch/{id} |\r\n| /api/v2/webshop/{webshop}/order/changed/{since} | /api/v3/webOrder/changed/{from}/{to}<br>/api/v3/webOrderPosition/changed/{from}/{to} |\r\n| /api/v2/webshop/{webshop}/order/{id} | /api/v3/webOrder/{id}<br>/api/v3/webOrderPosition/{id}<br>/api/v3/webOrderPosition/webOrder/{webOrderId}<br>/api/v3/webOrder/{webOrderId}/webOrderpositions |\r\n| /api/v2/webshop/{webshop}/order/number/{number} | /api/v3/webOrder/externalOrderNumber/{number} |\r\n| /api/v2/webshop/{webshop}/order/customerNumber/{customerNumber} | `REMOVED` |\r\n| /api/v2/webshop/payment | /api/v3/webPaymentOption/{id} |\r\n| /api/v2/webshop/payment/changed/{since} | /api/v3/webPaymentOption/{number} |\r\n| /api/v2/webshop/payment/{id} | /api/v3/webPaymentOption |\r\n| /api/v2/webshop/payment/number/{number} | /api/v3/webPaymentOption/changed/{from}/{to} |\r\n| /api/v2/webshop/{webshop}/product | /api/v3/webArticle/branch/{branchNumber}<br>/api/v3/webArticleImage/branch/{branchNumber}<br>/api/v3/webArticleProperty/branch/{branchNumber}<br>/api/v3/webArticlePropertyDefinition/branch/{branchNumber}<br>/api/v3/webArticleSize/branch/{branchNumber} |\r\n| /api/v2/webshop/{webshop}/product/changed/{since} | /api/v3/webArticle/branch/{branchNumber}/changed/{from}/{to}<br>/api/v3/webArticleImage/branch/{branchNumber}/changed/{from}/{to}<br>/api/v3/webArticleProperty/branch/{branchNumber}/changed/{from}/{to}<br>/api/v3/webArticlePropertyDefinition/branch/{branchNumber}/changed/{from}/{to}<br>/api/v3/webArticleSize/branch/{branchNumber}/changed/{from}/{to} |\r\n| /api/v2/webshop/{webshop}/product/{id} | /api/v3/webArticle/{id}<br>/api/v3/webArticle/{webArticleId}/webArticleSizes<br>/api/v3/webArticleSize/webArticle/{webArticleId}<br>/api/v3/webArticle/{webArticleId}/webArticleImages<br>/api/v3/webArticleImage/webArticle/{webArticleId}<br>/api/v3/webArticle/{webArticleId}/webArticleProperties<br>/api/v3/webArticleProperty/webArticle/{webArticleId} |\r\n| /api/v2/webshop/shipment | /api/v3/shipment |\r\n| /api/v2/webshop/shipment/changed/{since} | /api/v3/shipment/changed/{from}/{to} |\r\n| /api/v2/webshop/shipment/{id} | /api/v3/shipment/{id} |\r\n| /api/v2/webshop/shipment/number/{number} | /api/v3/shipment/externalOrderNumber/{externalOrderNumber} |\r\n| /api/v2/webshop/{webshop}/stock | /api/v3/webStock/branch/{branchNumber} |\r\n| /api/v2/webshop/{webshop}/stock/{id} | /api/v3/webStock/webArticle/{id} |\r\n| /api/v2/webshop/{webshop}/stock/product/{id} | /api/v3/webStock/webArticleSize/{id} |\r\n| /api/v2/webshop/{webshop}/stock/changed/{since} | /api/v3/webStock/branch/{branchNumber}/changed/{from}/{to} |\r\n| `NEW` | /api/v3/changeId/current |\r\n| `NEW` | /api/v3/customerOrder/branch/{id} |\r\n| `NEW` | /api/v3/minimumStock/{id} |\r\n| `NEW` | /api/v3/purchaseOrder/{id} |\r\n| `NEW` | /api/v3/purchaseOrder/{number} |\r\n| `NEW` | /api/v3/purchaseOrderPositionSize/purchaseOrderPosition/{purchaseOrderPositionId} |\r\n| `NEW` | /api/v3/purchaseOrderPosition/{purchaseOrderPositionId}/sizes |\r\n| `NEW` | /api/v3/purchaseOrderPosition/{id} |\r\n| `NEW` | /api/v3/purchaseOrderPosition/purchaseOrder/{purchaseOrderId} |\r\n| `NEW` | /api/v3/purchaseOrder/{purchaseOrderId}/positions |\r\n| `NEW` | /api/v3/purchaseOrderPosition/purchaseOrder/{purchaseOrderNumber} |\r\n| `NEW` | /api/v3/purchaseOrder/{purchaseOrderNumber}/positions |\r\n| `NEW` | /api/v3/purchaseOrderPosition |\r\n| `NEW` | /api/v3/purchaseOrderPositionSize/{id} |\r\n| `NEW` | /api/v3/purchaseOrderPositionSize |\r\n| `NEW` | /api/v3/supplierReturn/{id} |\r\n| `NEW` | /api/v3/webArticleImage/{id} |\r\n| `NEW` | /api/v3/webArticleProperty/{id} |\r\n| `NEW` | /api/v3/webArticlePropertyDefinition/{id} |\r\n| `NEW` | /api/v3/webArticleSize/{id} |\r\n| `NEW` | /api/v3/webOrder |\r\n| `NEW` | /api/v3/webOrderPosition |\r\n| `NEW` | /api/v3/webOrderPosition/{webOrderNumber} |\r\n| `NEW` | /api/v3/webOrder/{webOrderNumber}/webOrderPositions |\r\n| `NEW` | /api/v3/customerOrderPosition |\r\n| `NEW` | /api/v3/customerOrderPosition/{customerOrderNumber} |\r\n| `NEW` | /api/v3/customerOrder/{customerOrderNumber}/customerOrderPositions |\r\n",
    "version": "v3"
  },
  "paths": {
    "/api/v3/article/export": {
      "post": {
        "tags": [
          "Article"
        ],
        "summary": "Trigger generation of an export for articles",
        "description": "The status of the generation can be checked on the GET article/export endpoint.",
        "operationId": "8f959fb9-b416-4758-8573-3c91ee63259b",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get exports for articles",
        "description": "Returns all exports for articles.",
        "operationId": "b5b451d5-acc3-408d-b43b-7a10b9d67027",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/category/{categoryNumber}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get articles by category",
        "description": "Returns all articles from the provided category, ordered by their article number.",
        "operationId": "b799ff99-487f-4bec-8863-535e3cf02445",
        "parameters": [
          {
            "name": "categoryNumber",
            "in": "path",
            "description": "The category to filter articles by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The category to filter articles by.",
              "format": "int32"
            }
          },
          {
            "name": "includeNonSupplierArticles",
            "in": "query",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "schema": {
              "type": "boolean",
              "description": "Set to true, if you want the results to include articles without a linked supplier.",
              "nullable": true
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/firstPurchase/{firstPurchase}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get articles by date of first purchase",
        "description": "Returns all articles from the provided date of first purchase, ordered by their article number.",
        "operationId": "fc5c3adc-f2b7-4196-b3cb-47ec3a09358f",
        "parameters": [
          {
            "name": "firstPurchase",
            "in": "path",
            "description": "The date of first purchase to filter articles by.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The date of first purchase to filter articles by.",
              "format": "date"
            }
          },
          {
            "name": "includeNonSupplierArticles",
            "in": "query",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "schema": {
              "type": "boolean",
              "description": "Set to true, if you want the results to include articles without a linked supplier.",
              "nullable": true
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/{id}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get article by ID",
        "description": "Returns a article by its unique GUID. If no article exists with that GUID this returns 404 - Not found.",
        "operationId": "1a5a567a-4d51-4ae3-83d1-924dd77fddf5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the article to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the article to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Article not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning article",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/lastSale/{lastSale}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get articles by date of last sale",
        "description": "Returns all articles from the provided date of last sale, ordered by their article number.",
        "operationId": "680e2afd-f490-436c-8900-addd2ffda168",
        "parameters": [
          {
            "name": "lastSale",
            "in": "path",
            "description": "The date of last sale to filter articles by.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The date of last sale to filter articles by.",
              "format": "date"
            }
          },
          {
            "name": "includeNonSupplierArticles",
            "in": "query",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "schema": {
              "type": "boolean",
              "description": "Set to true, if you want the results to include articles without a linked supplier.",
              "nullable": true
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/{number}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get article by number",
        "description": "Retrieves the article by its primary key. The primary key of a article is its number field.",
        "operationId": "114bf937-bcf2-4a02-986e-28fd7fe79db4",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the article. Can be found as number field in a article object or as articleNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the article. Can be found as number field in a article object or as articleNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/supplier/{supplierNumber}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get articles by supplier",
        "description": "Returns all articles from the provided supplier, ordered by their article number.",
        "operationId": "e5bac5eb-0c1d-4f08-9939-f659c9fbd91f",
        "parameters": [
          {
            "name": "supplierNumber",
            "in": "path",
            "description": "The supplier to filter articles by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The supplier to filter articles by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get changed articles",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get articles endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "0e08403a-e8f6-46cb-8387-c79af2945d50",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get articles",
        "description": "Returns all articles ordered by their article number.",
        "operationId": "a0c7cc74-c24c-4be4-8639-9bc40421ecee",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/export/{id}": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Get article export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a2019a13-3a1a-486e-b0ef-cac9680c60b4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/article/export/{id}/download": {
      "get": {
        "tags": [
          "Article"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43153",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/export": {
      "post": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Trigger generation of an export for article sizes",
        "description": "The status of the generation can be checked on the GET articleSize/export endpoint.",
        "operationId": "0e5221f5-b257-41eb-844f-fb8456e31af0",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get exports for article sizes",
        "description": "Returns all exports for article sizes.",
        "operationId": "6cbc0234-b3c7-4815-910a-a8a632f8fbc8",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/article/{articleNumber}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by article number",
        "description": "Retrieves article sizes by their article number.",
        "operationId": "b8371e94-f3f8-4610-99ce-5847f889d1a8",
        "parameters": [
          {
            "name": "articleNumber",
            "in": "path",
            "description": "The article number of the article size.",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The article number of the article size.",
              "format": "double"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/branch/{branchNumber}/article/{articleNumber}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by branch number and article number",
        "description": "Retrieves article sizes by their branch number and article number.",
        "operationId": "653def48-401e-4d35-b11d-8f63423bc759",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "The branch number of the article size.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The branch number of the article size.",
              "format": "int32"
            }
          },
          {
            "name": "articleNumber",
            "in": "path",
            "description": "The article number of the article size.",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The article number of the article size.",
              "format": "double"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/branch/{branchNumber}/number/{number}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article size by branch number and number",
        "description": "Returns a article size by its branch number and number. If no article size exists with that branch number and number this returns 404 - Not found.",
        "operationId": "6d864b96-2e68-4aa0-9c83-8856c44b9ba5",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "The branch number of the article size to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The branch number of the article size to return.",
              "format": "int32"
            }
          },
          {
            "name": "number",
            "in": "path",
            "description": "The number of the article size to return.",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The number of the article size to return.",
              "format": "double"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Article size not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning article size",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/branch/{branchNumber}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by branch number",
        "description": "Retrieves article sizes by their branch number.",
        "operationId": "e310c70b-6da6-47c4-8af9-96d45c512313",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "The branch number of the article size.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The branch number of the article size.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/ean/{ean}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by ean",
        "description": "Retrieves article sizes by their ean.",
        "operationId": "f2e1ae41-4086-4642-9443-d33a76161cef",
        "parameters": [
          {
            "name": "eAN",
            "in": "path",
            "description": "The EAN of the article size.",
            "required": true,
            "schema": {
              "maximum": 999999999999999,
              "minimum": 111111111111,
              "type": "number",
              "description": "The EAN of the article size.",
              "format": "double"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/firstPurchaseDate/{firstPurchaseDate}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by first purchase date",
        "description": "Retrieves article sizes by their first purchase date.",
        "operationId": "a8e47449-c065-4eff-bf35-5f1da5f73928",
        "parameters": [
          {
            "name": "firstPurchaseDate",
            "in": "path",
            "description": "The first purchase date of the article size.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The first purchase date of the article size.",
              "format": "date"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/{id}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article size by ID",
        "description": "Returns a article size by its unique GUID. If no article size exists with that GUID this returns 404 - Not found.",
        "operationId": "51b2c3c0-41b2-4117-bb59-4c383e11d89a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the article size to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the article size to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Article size not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning article size",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/lastSaleDate/{lastSaleDate}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes by last sale date",
        "description": "Retrieves article sizes by their last sale date.",
        "operationId": "44cec7e8-d9fd-4475-9ee9-32ab0267d1e8",
        "parameters": [
          {
            "name": "lastSaleDate",
            "in": "path",
            "description": "The last sale date of the article size.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The last sale date of the article size.",
              "format": "date"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get changed article sizes by branch number",
        "description": "Retrieves all changes within the provided change ID range and branch number.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get article sizes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "4967f019-504c-49c2-88ee-35d1fc0c167e",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "The branch number of the article size.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The branch number of the article size.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get changed article sizes",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get article sizes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "159e80c9-e240-4bf5-a0d4-8c9951eebcc5",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/ean/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get changed article sizes grouped by ean",
        "description": "Retrieves all changes grouped by ean within the provided change ID range.\r\n\r\nThis endpoint assumes the same conventions as the 'Get article sizes grouped by ean' endpoint. \r\nYou can only use this endpoint if the conventions do not conflict with your use-case.\r\n\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get article sizes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "6c85e3ec-7714-4193-a174-79abdf95cd83",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes",
        "description": "Returns all article sizes ordered by their articleSize number.",
        "operationId": "26e41010-b983-4678-99d1-f5dcf579dfe8",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/export/{id}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get articlesize export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "fc484975-3261-464c-9e55-450fdbc2ab13",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/export/{id}/download": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "1c639000-a6fc-44e7-84d9-3fffe3ca9473",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/ean": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes grouped by ean",
        "description": "This endpoint serves as a convenience feature, consolidating article data based on their EAN. \r\nIn order to align the returned data with the format utilized by other endpoints within this grouping, certain conventions are applied:\r\n- Initially, the article data is organized by the EAN.\r\n- The fields StockQuantity and SelectionQuantity are summed up accross the respective groupings.\r\n- Any remaining fields are populated from the singular row within the group that possesses the most recent purchase date.\r\n\r\nThis implies that any fields beyond EAN, StockQuantity, or SelectionQuantity are susceptible to sourcing from different article sizes \r\nover time, due to updates to the last purchase date. If this or any other of the conventions impose\r\nan issue to your use case, you can not use this endpoint.",
        "operationId": "5909b60b-fa18-4a88-9d3d-a7df638ad442",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/articleSize/minimumStock/{minimumStock}": {
      "get": {
        "tags": [
          "ArticleSize"
        ],
        "summary": "Get article sizes with minimum stock",
        "description": "Retrieves article sizes with a minimum stock greater or equal of the parameter.",
        "operationId": "f9ab4cae-a8cd-4413-93d2-b2b419334322",
        "parameters": [
          {
            "name": "minimumStock",
            "in": "path",
            "description": "The minimum stock the article size has to have.",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The minimum stock the article size has to have.",
              "format": "double"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:id"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/export": {
      "post": {
        "tags": [
          "Branch"
        ],
        "summary": "Trigger generation of an export for branches",
        "description": "The status of the generation can be checked on the GET branch/export endpoint.",
        "operationId": "897c7a8e-ed69-4a32-8985-ba3c9ed45b1b",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get exports for branches",
        "description": "Returns all exports for branches.",
        "operationId": "74b3426f-8673-44bd-a39e-1e118206fa30",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/{id}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch by ID",
        "description": "Returns a branch by its unique GUID. If no branch exists with that GUID this returns 404 - Not found.",
        "operationId": "a51d50c6-3c30-4cbc-99ec-11162949e5c8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the branch to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the branch to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Branch not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning branch",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/{number}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch by number",
        "description": "Retrieves the branch by its primary key. The primary key of a branch is its number field.",
        "operationId": "5fc4d385-1dd0-44bc-a173-984e8033a6a5",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the branch. Can be found as number field in a branch object or as branchNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the branch. Can be found as number field in a branch object or as branchNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get changed branches",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get branches endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "2136b13a-70ac-4d81-9e14-8eb60cbfc7de",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branches",
        "description": "Returns all branches ordered by their branch number.",
        "operationId": "995c5ed2-d8e5-4375-8759-ff1cf07a1586",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/export/{id}": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Get branch export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "c462b043-5c9a-45f3-9eca-498cc68b9ce1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/branch/export/{id}/download": {
      "get": {
        "tags": [
          "Branch"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "ee1b58b4-96f3-400f-a0e2-39b750ef4a6e",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:fil"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/export": {
      "post": {
        "tags": [
          "Brand"
        ],
        "summary": "Trigger generation of an export for brands",
        "description": "The status of the generation can be checked on the GET brand/export endpoint.",
        "operationId": "9bb014de-f868-4bf8-8ef8-741c0c4405f3",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get exports for articles",
        "description": "Returns all exports for articles.",
        "operationId": "e2df9c06-f9eb-4a4f-869f-6f085ec673af",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brand by ID",
        "description": "Returns a brand by its unique GUID. If no brand exists with that GUID this returns 404 - Not found.",
        "operationId": "ddb6ab9b-5bdf-4100-acbb-4c47ac469cce",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the brand to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the brand to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Brand not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning brand",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/{number}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brand by number",
        "description": "Retrieves the brand by its primary key. The primary key of a brand is its number field.",
        "operationId": "381f3603-e113-4717-8c91-860d2c1f2d51",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the brand. Can be found as number field in a brand object or as BrandNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the brand. Can be found as number field in a brand object or as BrandNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get changed brands",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get brands endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "e85657bd-e9e8-449e-be9d-dcf358e955bf",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brands",
        "description": "Returns all brands ordered by their brand number.",
        "operationId": "df626678-db02-454f-b201-2b772abf678d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/export/{id}": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Get brand export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "4fa0050e-e4d5-4e7b-a625-1efcc7a9cee9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/brand/export/{id}/download": {
      "get": {
        "tags": [
          "Brand"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "234c1e71-8e94-46ac-8578-0b7d0ee12d73",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lbl"
            ]
          }
        ]
      }
    },
    "/api/v3/category/export": {
      "post": {
        "tags": [
          "Category"
        ],
        "summary": "Trigger generation of an export for categories",
        "description": "The status of the generation can be checked on the GET category/export endpoint.",
        "operationId": "98659955-c3c5-45e0-a523-7215136df322",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get exports for categories",
        "description": "Returns all exports for categories.",
        "operationId": "f9f30082-2de1-4a6d-894b-9e21deac6382",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category by ID",
        "description": "Returns a category by its unique GUID. If no category exists with that GUID this returns 404 - Not found.",
        "operationId": "7d1f5c1e-06f3-4a53-9b19-0189ff444efd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the category to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the category to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Category not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning category",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category/{number}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category by number",
        "description": "Retrieves the category by its primary key. The primary key of a category is its number field.",
        "operationId": "8c4ce372-a46b-4fda-bb8e-f3529a139aa9",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the category. Can be found as number field in a category object or as CategoryNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the category. Can be found as number field in a category object or as CategoryNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get changed categories",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get categories endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "84573d02-224c-4db7-b494-e0c3f7f1cef8",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get categories",
        "description": "Returns all categories ordered by their category number.",
        "operationId": "1c9f09fa-c40a-4388-bb9d-89b47470bbaf",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category/export/{id}": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get category export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "d8980c35-983b-45bb-9912-6d0af26b53e0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/category/export/{id}/download": {
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "9c49ca19-3d13-4802-8ea8-27fbe2ff9fd1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:wgr"
            ]
          }
        ]
      }
    },
    "/api/v3/changeId/current": {
      "get": {
        "tags": [
          "ChangeId"
        ],
        "summary": "Get current change id",
        "description": "Returns the lastest change id for usage as To Parameter on changed endpoints.",
        "operationId": "d279ee77-0e91-4975-bced-b7617a05d130",
        "parameters": [
          {
            "name": "request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/api.Module.Entities.ChangeId.GetEndpoint+RequestModel"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "ChangeId not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning change id",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ChangeId.ChangeIdDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ChangeId.ChangeIdDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ChangeId.ChangeIdDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        }
      }
    },
    "/api/v3/color/export": {
      "post": {
        "tags": [
          "Color"
        ],
        "summary": "Trigger generation of an export for colors",
        "description": "The status of the generation can be checked on the GET color/export endpoint.",
        "operationId": "7fba5790-2939-44e9-8ed6-ad30cd4179f6",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get exports for colors",
        "description": "Returns all exports for colors.",
        "operationId": "c2684cd2-2bce-483a-aaf4-bf2c3627bf9b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color/{id}": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get color by ID",
        "description": "Returns a color by its unique GUID. If no color exists with that GUID this returns 404 - Not found.",
        "operationId": "21ca39ee-c36c-453f-8318-a6cec8cb78c4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the color to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the color to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Color not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning color",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color/{number}": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get color by number",
        "description": "Retrieves the color by its primary key. The primary key of a color is its number field.",
        "operationId": "d70fb246-46c7-42d5-93ed-9e43136c9fe2",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the color. Can be found as number field in a color object or as colorNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the color. Can be found as number field in a color object or as colorNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get changed colors",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get colors endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "7c6100e1-4e65-4106-b727-64f4185d18d6",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get colors",
        "description": "Returns all colors ordered by their color number.",
        "operationId": "dbe03e4b-e7b8-4f23-bf15-766d548bae51",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color/export/{id}": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Get color export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "8eb6f91b-831c-454c-b041-b374f2d07d0d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/color/export/{id}/download": {
      "get": {
        "tags": [
          "Color"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "632da99f-ecc9-4d5c-9444-fb673ce9c429",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:farb"
            ]
          }
        ]
      }
    },
    "/api/v3/country/export": {
      "post": {
        "tags": [
          "Country"
        ],
        "summary": "Trigger generation of an export for countries",
        "description": "The status of the generation can be checked on the GET country/export endpoint.",
        "operationId": "9d115ef9-92a7-4274-8525-135f1995a0e4",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get exports for countries",
        "description": "Returns all exports for countries.",
        "operationId": "ca3dd9a1-f689-4c82-86d1-5a663ec674fb",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get country by ID",
        "description": "Returns a country by its unique GUID. If no country exists with that GUID this returns 404 - Not found.",
        "operationId": "44ac5ec1-18d1-42c3-a2fc-309e1a1a1c8d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the country to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the country to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Country not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning country",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country/key/{key}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get country by key",
        "description": "Retrieves the country by its primary key. The primary key of a country is its key field.",
        "operationId": "ea899178-9fe3-4edf-af4c-17b9516b9338",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the country. Can be found as key field in a country object or as CountryKey if referenced from another entity.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The key of the country. Can be found as key field in a country object or as CountryKey if referenced from another entity."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get changed countries",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get countries endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "0071547d-3da1-40cc-94c4-092e94b7c988",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get countrys",
        "description": "Returns all countries ordered by their country key.",
        "operationId": "0ba5d2d1-1c2a-4295-a532-1f55ee3db741",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country/export/{id}": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Get country export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "929534f4-be12-4d71-82ed-eef9585df8cb",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/country/export/{id}/download": {
      "get": {
        "tags": [
          "Country"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "77dac5d5-5bbf-4d97-bedd-0afec1c8edf6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:land"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/export": {
      "post": {
        "tags": [
          "Coupon"
        ],
        "summary": "Trigger generation of an export for coupons",
        "description": "The status of the generation can be checked on the GET coupon/export endpoint.",
        "operationId": "e79464f5-2484-48df-ba53-e5b30576b0c8",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get exports for coupons",
        "description": "Returns all exports for coupons.",
        "operationId": "53b49e91-3b4a-4b93-973a-a547519c7359",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon by customer number and status",
        "description": "Retrieves all charges of the coupon with the provided status and customer number.",
        "operationId": "89630cf3-bf4e-4c82-adc3-186ad60d549a",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the coupon.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the coupon.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the coupon.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the coupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon by ID",
        "description": "Returns a charge of a coupon by its unique GUID. If no coupon exists with that GUID this returns 404 - Not found.",
        "operationId": "3600c1e3-e4b6-4c6c-a671-c9f15383de02",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the coupon charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the coupon charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning coupon",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/code/{internetCode}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon by internet code",
        "description": "Returns a charge of a coupon by its internet code. If no coupon exists with that internet code this returns 404 - Not found.",
        "operationId": "41d44eb3-6a8c-4f9a-bedb-3ae927a6dfa0",
        "parameters": [
          {
            "name": "internetCode",
            "in": "path",
            "description": "The redeemable code of the coupon charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The redeemable code of the coupon charge to return."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Coupon not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning coupon",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/{number}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon by number",
        "description": "Retrieves all charges of the coupon with the provided number.",
        "operationId": "4b45b39b-b3e9-4950-a79c-9231207ba881",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the coupon.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the coupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/status/{status}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon by status",
        "description": "Retrieves all charges of coupons with the provided status.",
        "operationId": "a1c0bb89-61ed-4e69-9e2a-0c9fcc971228",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the coupon.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the coupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get changed coupons",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get coupons endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "2f657237-bfd5-4775-b68c-28ae46fa71f1",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupons",
        "description": "Returns all charges of coupons, ordered by their coupon number.",
        "operationId": "2342b0c7-b535-4ddc-a466-34b1f4c6c0d3",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/export/{id}": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Get coupon export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "5cbed487-aeb7-424b-b6ab-be9c4a0fed9b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/coupon/export/{id}/download": {
      "get": {
        "tags": [
          "Coupon"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "be371fc4-db0b-42b6-b235-1065ac36f810",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_4"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/export": {
      "post": {
        "tags": [
          "Credit"
        ],
        "summary": "Trigger generation of an export for credits",
        "description": "The status of the generation can be checked on the GET credit/export endpoint.",
        "operationId": "89eb99d5-d60f-4239-829f-437216cefa91",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get exports for credits",
        "description": "Returns all exports for credits.",
        "operationId": "865f6e4a-02d4-40a7-868e-d09f55d2d6cb",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credits by customer number and status",
        "description": "Retrieves all charges of the credit with the provided status and customer number.",
        "operationId": "244967e4-28e4-4fbb-8090-1e2117564ba2",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the credit.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the credit.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the credit.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the credit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/{id}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credit by ID",
        "description": "Returns a charge of a credit by its unique GUID. If no credit exists with that GUID this returns 404 - Not found.",
        "operationId": "30c6d648-094a-4e53-8363-4eb72fe79830",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the credit charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the credit charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Credit not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning credit",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/{number}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credits by number",
        "description": "Retrieves all charges of the credit with the provided number.",
        "operationId": "ff65c7d6-0749-4927-a6ed-e95aae40b1b9",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the credit.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the credit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/status/{status}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credits by status",
        "description": "Retrieves all charges of credits with the provided status.",
        "operationId": "64bd849d-6440-4eac-8522-6ae03df32dd8",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the credit.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the credit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get changed credits",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get credits endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "a04a91a3-b687-43fb-a245-0a331af60cf8",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credits",
        "description": "Returns all charges of credits, ordered by their credit number.",
        "operationId": "3fba27c0-3836-419c-8bfa-1a6e19abb94d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/export/{id}": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Get credit export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "1f66f043-7e1e-4b0e-b918-cf0a2508bc4f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/credit/export/{id}/download": {
      "get": {
        "tags": [
          "Credit"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "0a167c27-b0d3-41f0-b845-2b3702c9a6e8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_2"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/export": {
      "post": {
        "tags": [
          "Currency"
        ],
        "summary": "Trigger generation of an export for currencies",
        "description": "The status of the generation can be checked on the GET currency/export endpoint.",
        "operationId": "de9659d9-953b-4779-bb6b-7cdb3b2b2169",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get exports for currencies",
        "description": "Returns all exports for currencies.",
        "operationId": "a2aa0008-12e6-4ee2-b29f-9c66f701cdc4",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get currency by ID",
        "description": "Returns a currency by its unique GUID. If no currency exists with that GUID this returns 404 - Not found.",
        "operationId": "fa16d74a-7674-462a-86a2-754de3910e3f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the currency to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the currency to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Currency not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning currency",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/key/{key}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get currency by key",
        "description": "Retrieves the currency by its primary key. The primary key of a currency is its key field.",
        "operationId": "16ff6040-5fd7-42d6-992d-5c16c0cfea71",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key of the currency. Can be found as key field in a currency object or as CurrencyKey if referenced from another entity.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The key of the currency. Can be found as key field in a currency object or as CurrencyKey if referenced from another entity."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get changed currencies",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get currencies endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "5a53a197-5861-4497-afe1-8e7a59c5a966",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get currencies",
        "description": "Returns all currencies ordered by their currency key.",
        "operationId": "89b3a8ce-63d3-436a-91ad-8342008c388a",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/export/{id}": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Get currency export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "f2da3bd8-c8c0-40b3-b580-16b507cda419",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/currency/export/{id}/download": {
      "get": {
        "tags": [
          "Currency"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6e420a70-d7dc-4434-a818-87335e2b6920",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kurs"
            ]
          }
        ]
      }
    },
    "/api/v3/customer": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Create customer",
        "description": "Creates a new customer and returns it in the response.",
        "operationId": "0f30ad4e-1b4a-41c8-845a-dfe285a5effb",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "create:kd"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customers",
        "description": "Returns all customers ordered by their customer number.",
        "operationId": "ae89bc65-9dac-4206-b84b-8a4a1ef87bcd",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/export": {
      "post": {
        "tags": [
          "Customer"
        ],
        "summary": "Trigger generation of an export for customers",
        "description": "The status of the generation can be checked on the GET customer/export endpoint.",
        "operationId": "df9923e5-bdad-4ab8-94dd-ec1f4002f255",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get exports for customers",
        "description": "Returns all exports for customers.",
        "operationId": "0194d549-e841-4d0d-8c9f-e74913cca8b7",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/{id}": {
      "delete": {
        "tags": [
          "Customer"
        ],
        "summary": "Delete customer",
        "description": "Deletes a new customer.",
        "operationId": "acf5fac7-798d-4200-abde-1a631a90951a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the customer",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Unique id of the customer",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": [
              "delete:kd"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer by ID",
        "description": "Returns a customer by its unique GUID. If no customer exists with that GUID this returns 404 - Not found.",
        "operationId": "44cb9658-c77f-45bc-b31c-45eadc182343",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Customer not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "Customer"
        ],
        "summary": "Update customer",
        "description": "Updates a new customer and returns it in the response.",
        "operationId": "b7d9c158-7193-449b-a9e6-2aa33f8bdce3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerUpdateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerUpdateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.Customer.CustomerUpdateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": [
              "update:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/customerCard/{customerCardNumber}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customers by customer card",
        "description": "Get all customers that use the provided customer card.",
        "operationId": "76344afc-62d3-4b38-8608-a76a91b32da1",
        "parameters": [
          {
            "name": "customerCardNumber",
            "in": "path",
            "description": "The customer card number to filter customers by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The customer card number to filter customers by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/email/{email}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customers by email",
        "description": "Get all customers that use the provided email address.",
        "operationId": "e570d734-04f5-425c-ac19-dee02f10e1fa",
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "The email address to filter customers by.",
            "required": true,
            "schema": {
              "maxLength": 60,
              "minLength": 1,
              "type": "string",
              "description": "The email address to filter customers by."
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/{number}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer by number",
        "description": "Retrieves the customer by its primary key. The primary key of a customer is its number field.",
        "operationId": "c52848af-9fde-44c4-841b-18e11904a303",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the customer. Can be found as number field in a customer object or as customerNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the customer. Can be found as number field in a customer object or as customerNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get changed customers",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get customers endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "d14ab828-9748-43e3-aa7a-4f7114ee9bc6",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/export/{id}": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Get customer export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "6c3b2c66-2f27-4d2b-b28e-5aabaca0190d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customer/export/{id}/download": {
      "get": {
        "tags": [
          "Customer"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "df36c0a1-8537-4609-9601-dab79d847f81",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/export": {
      "post": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Trigger generation of an export for customer cards",
        "description": "The status of the generation can be checked on the GET customerCard/export endpoint.",
        "operationId": "4626cbee-a474-4275-996d-1340b8254583",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get exports for customer cards",
        "description": "Returns all exports for customer cards.",
        "operationId": "c3cc466c-c931-41e9-9131-079c2de6fcaf",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/customer/{customerNumber}": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get customer card by customer number",
        "description": "Retrieves the customer cars by customer number.",
        "operationId": "c570a987-1426-456a-8006-0490b90d2b08",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the customer card.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the customer card.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/{id}": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get customer card by ID",
        "description": "Returns a customer card by its unique GUID. If no customer card exists with that GUID this returns 404 - Not found.",
        "operationId": "a4dd28a8-2dac-485f-a183-72198ffda8d7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer card to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer card to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Customer card not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customerCard",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/changed/{from}/{to}": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get changed customer cards",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get customer cards endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "ba7f2d57-a414-4737-9c0f-081401286ba2",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get customer cards",
        "description": "Returns all customer cards ordered by their customer number and customer card number.",
        "operationId": "f792a139-f8de-46c6-ab1a-6425f35c1395",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/export/{id}": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Get customercard export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "cbae643a-1edd-45b9-81b5-75359676ecb2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerCard/export/{id}/download": {
      "get": {
        "tags": [
          "CustomerCard"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f7885b57-1369-41a0-ad1e-98d273524ffa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdcrd"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Create CustomerOrder",
        "description": "Creates a new CustomerOrder and returns it in the response.",
        "operationId": "5b48a7ed-fafd-4900-ae7b-eed11070d62a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:ak_ka"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get customer order",
        "description": "Returns all customer order ordered by their customer order number.",
        "operationId": "40efc230-39f7-47a7-bf34-f83c033a613e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/export": {
      "post": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Trigger generation of an export for customer orders",
        "description": "The status of the generation can be checked on the GET customerOrder/export endpoint.",
        "operationId": "8efccb22-3a27-43dc-9ed5-98ae49af753c",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get exports for customer orders",
        "description": "Returns all exports for customer orders.",
        "operationId": "112db132-9c32-482a-9ffc-a28ed741d502",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/branch/{id}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get customer order by ID",
        "description": "Returns all customer orders for the selected branch.",
        "operationId": "782e78d9-3b9e-45e7-b758-fc374de1dccc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The number of the branch to return customer orders for.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "The number of the branch to return customer orders for.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer order",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "404": {
            "description": "Web order not found"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/externalOrderNumber/{number}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get customer order by external order number",
        "description": "Retrieves the customer order by its external customer order number. The primary key of a customer order is its number field.",
        "operationId": "3bfaf477-d35b-4a33-8490-11e43ecb9225",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the customer order. Can be found as number field in a customer order object or as CustomerOrderNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The number of the customer order. Can be found as number field in a customer order object or as CustomerOrderNumber if referenced from another entity."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/{id}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get customer order by ID",
        "description": "Returns a customer order by its unique GUID. If no customer order exists with that GUID this returns 404 - Not found.",
        "operationId": "ca368b6c-7804-4e86-ba86-e32c823d1e02",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer order to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer order to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web order not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer order",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/changed/{from}/{to}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get changed customer order",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "33e53e23-0e26-4dfa-a470-e9823f5dc436",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 1000,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/export/{id}": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Get customer order export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "214518f6-b58d-45e5-b729-0b4ad7c877df",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/export/{id}/download": {
      "get": {
        "tags": [
          "CustomerOrder"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "0ddd50ab-213c-49c6-9b45-783e6e0ff5cc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/export": {
      "post": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Trigger generation of an export for customer order positions",
        "description": "The status of the generation can be checked on the GET customerOrderPosition/export endpoint.",
        "operationId": "be7ab6c4-45a1-4636-abd2-76f93c8b20bc",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get exports for customer order positions",
        "description": "Returns all exports for customer order positions.",
        "operationId": "e1b33a9e-0178-47b2-a648-4c45715446dc",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/customerOrder/{customerOrderId}": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order positions by customer order id",
        "description": "Retrieves the customer order position by customer order id.",
        "operationId": "68c91635-fc19-48bc-b2d7-259ccd50273d",
        "parameters": [
          {
            "name": "customerOrderId",
            "in": "path",
            "description": "Id of the customer order.",
            "schema": {
              "type": "string",
              "description": "Id of the customer order.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/{customerOrderId}/customerOrderpositions": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order positions by customer order id",
        "description": "Retrieves the customer order position by customer order id.",
        "operationId": "68c91635-fc19-48bc-b2d7-259ccd50273d",
        "parameters": [
          {
            "name": "customerOrderId",
            "in": "path",
            "description": "Id of the customer order.",
            "schema": {
              "type": "string",
              "description": "Id of the customer order.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/{customerOrderNumber}": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order positions by customer order number",
        "description": "Retrieves the customer order position by its primary key. The primary key of a customer order position is its number field.",
        "operationId": "800d198a-29d6-4dc5-9fef-0e1b573c5c9b",
        "parameters": [
          {
            "name": "customerOrderNumber",
            "in": "path",
            "description": "Number of the customer order.",
            "schema": {
              "type": "integer",
              "description": "Number of the customer order.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrder/{customerOrderNumber}/customerOrderPositions": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order positions by customer order number",
        "description": "Retrieves the customer order position by its primary key. The primary key of a customer order position is its number field.",
        "operationId": "800d198a-29d6-4dc5-9fef-0e1b573c5c9b",
        "parameters": [
          {
            "name": "customerOrderNumber",
            "in": "path",
            "description": "Number of the customer order.",
            "schema": {
              "type": "integer",
              "description": "Number of the customer order.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/{id}": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order position by ID",
        "description": "Returns a customer order position by its unique GUID. If no customer order position exists with that GUID this returns 404 - Not found.",
        "operationId": "02f0961d-a5d6-4c02-80ac-2faf13d8d985",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer order position to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer order position to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Customer order position not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer order position",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/changed/{from}/{to}": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get changed customer order position",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "5090616c-5d51-45b3-97ef-47f6c2c320a0",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order position",
        "description": "Returns all customer order position ordered by their customer order position number.",
        "operationId": "128c47de-943b-4745-adee-e96d28bc2682",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/export/{id}": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Get customer order position export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "d72f26aa-c63e-4bf3-a510-e506e73a6283",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerOrderPosition/export/{id}/download": {
      "get": {
        "tags": [
          "CustomerOrderPosition"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "0a795c2c-8574-43b2-b638-5c31e227a631",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap_ka"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/export": {
      "post": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Trigger generation of an export for customer returns",
        "description": "The status of the generation can be checked on the GET customerReturn/export endpoint.",
        "operationId": "4fe61180-9f28-4fae-8cfd-d364562900c0",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get exports for customer returns",
        "description": "Returns all exports for customer returns.",
        "operationId": "f4a37fa2-243d-4ba1-a880-a50698e67269",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/customer/{customerNumber}": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get customer returns by customer number",
        "description": "Retrieves customer returns with provided customer number.",
        "operationId": "00605c18-041e-4a30-bd6f-45ce90513bb7",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customer number to filter customer returns by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The customer number to filter customer returns by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/{id}": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get customer return by ID",
        "description": "Returns a customer return by its unique GUID. If no customer return exists with that GUID this returns 404 - Not found.",
        "operationId": "60ea84f2-6d6b-43e0-bac8-48db61c450bf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer return to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer return to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "customer return not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer return",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/receipt/{receiptNumber}": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get customer returns by receipt number",
        "description": "Retrieves customer returns with provided receipt number.",
        "operationId": "39175fab-9063-4cba-81a4-1018d0bf99c7",
        "parameters": [
          {
            "name": "receiptNumber",
            "in": "path",
            "description": "The receipt number to filter customer returns by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The receipt number to filter customer returns by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/changed/{from}/{to}": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get changed customer returns",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get customer returns endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "f5487f43-0d6d-4cf7-a526-136c7cbf2e8a",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get customer returns",
        "description": "Returns all customer returns ordered by their receipt number and position.",
        "operationId": "b27aea6d-70ee-4e95-bbe1-9fdab68bd119",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/export/{id}": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Get customerreturn export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9c0469c6-2d13-4a0b-970f-1dbfad139da5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturn/export/{id}/download": {
      "get": {
        "tags": [
          "CustomerReturn"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "ca066c37-9670-4515-bd29-8497aa0d0b82",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnInstruction": {
      "post": {
        "tags": [
          "CustomerReturnInstruction"
        ],
        "summary": "Create customer return instruction",
        "description": "Creates a new customer return instruction.",
        "operationId": "031cd8cb-41fb-4cbe-abe0-30e7ea51534b",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.CustomerReturnInstruction.CustomerReturnInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.CustomerReturnInstruction.CustomerReturnInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.CustomerReturnInstruction.CustomerReturnInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_wvk_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/export": {
      "post": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Trigger generation of an export for customer return reasons",
        "description": "The status of the generation can be checked on the GET customerReturnReason/export endpoint.",
        "operationId": "e89c0779-e166-4c27-9e76-0450ddcb7d79",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get exports for customer return reasons",
        "description": "Returns all exports for customer return reasons.",
        "operationId": "645b0b80-c142-4bde-87d7-22d522d804f5",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/{id}": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get customer return reason by ID",
        "description": "Returns a customer return reason by its unique GUID. If no customer return reason exists with that GUID this returns 404 - Not found.",
        "operationId": "f2d266e3-b3fb-48d7-b5f1-1ab3b989a930",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the customer return reason to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the customer return reason to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Customer return reason not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning customer return reason",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/{number}": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get customer return reason by number",
        "description": "Retrieves the customer return reason by its primary key. The primary key of a customer return reason is its number field.",
        "operationId": "5e78a274-054a-4682-b1ee-0d0f19a02e91",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the customer return reason. Can be found as number field in a customer return reason object or as customerReturnReasonNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the customer return reason. Can be found as number field in a customer return reason object or as customerReturnReasonNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/changed/{from}/{to}": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get changed customer return reasons",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get customerReturnReasons endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "1e93dca0-7276-4a29-95ec-e785445fc878",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get customer return reasons",
        "description": "Returns all customer return reasons ordered by their number.",
        "operationId": "0fd17e95-a85d-4cad-8a5e-0938dee10be5",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/export/{id}": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Get customerreturnreason export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "63af72b0-c202-4e6f-8177-989f97016ced",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/customerReturnReason/export/{id}/download": {
      "get": {
        "tags": [
          "CustomerReturnReason"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f26db966-aa93-4867-bb9d-b0c73dbacf2f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_ret_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/department/export": {
      "post": {
        "tags": [
          "Department"
        ],
        "summary": "Trigger generation of an export for departments",
        "description": "The status of the generation can be checked on the GET department/export endpoint.",
        "operationId": "37218e4a-fb81-49f5-9155-fe9951d7ceed",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get exports for departments",
        "description": "Returns all exports for departments.",
        "operationId": "1d3de6a3-85d2-4f30-abae-c160499baec5",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get department by ID",
        "description": "Returns a department by its unique GUID. If no department exists with that GUID this returns 404 - Not found.",
        "operationId": "535e5e61-7f83-47c7-999c-74bff897de5d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the department to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the department to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Department not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning department",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department/{number}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get department by number",
        "description": "Retrieves the department by its primary key. The primary key of a department is its number field.",
        "operationId": "0b2b2a2e-ab59-4f1c-a467-7b4787d19020",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the department. Can be found as number field in a department object or as departmentNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the department. Can be found as number field in a department object or as departmentNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get changed departments",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get departments endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "5203c265-24a5-481a-a3ea-a99a2cd29c9d",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get departments",
        "description": "Returns all departments ordered by their department number.",
        "operationId": "9803ac07-1a9e-47e1-85f6-ec3702dcae0d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department/export/{id}": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Get department export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "46e0ad4e-2a58-48fa-8259-a172d70bf889",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/department/export/{id}/download": {
      "get": {
        "tags": [
          "Department"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "adf3fdc3-8d72-4d32-9867-9103c8227db6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:abt"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/export": {
      "post": {
        "tags": [
          "Deposit"
        ],
        "summary": "Trigger generation of an export for deposits",
        "description": "The status of the generation can be checked on the GET deposit/export endpoint.",
        "operationId": "2f2fe05b-f0d0-40ac-96ad-6c5595991838",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get exports for deposits",
        "description": "Returns all exports for deposits.",
        "operationId": "7607ac04-91c0-4e6e-a6b6-38405fa0cac1",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposits by customer number and status",
        "description": "Retrieves all charges of the deposit with the provided status and customer number.",
        "operationId": "94808205-dd45-4839-9272-83eb100b913b",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the deposit.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the deposit.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the deposit.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the deposit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposit by ID",
        "description": "Returns a charge of a deposit by its unique GUID. If no deposit exists with that GUID this returns 404 - Not found.",
        "operationId": "75c268d0-f9f3-4f02-96d4-4f104a6a12f4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the deposit charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the deposit charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Deposit not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning deposit",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/{number}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposits by number",
        "description": "Retrieves all charges of the deposit with the provided number.",
        "operationId": "955cbbd6-02fe-4f52-a2d0-d141aa8d38ee",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the deposit.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the deposit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/status/{status}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposits by status",
        "description": "Retrieves all charges of deposits with the provided status.",
        "operationId": "2f6b1b59-519b-4fb7-aefd-ce544dedbed9",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the deposit.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the deposit.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get changed deposits",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get deposits endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "d339c527-129e-4916-944c-3f613c58af74",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposits",
        "description": "Returns all charges of deposits, ordered by their deposit number.",
        "operationId": "184f1a44-f296-4531-8958-b2bcd9c13ada",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/export/{id}": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Get deposit export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "b1cccba5-7560-40d0-bf0c-9e048c3434a2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/deposit/export/{id}/download": {
      "get": {
        "tags": [
          "Deposit"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f185b4c7-4160-4ad9-abba-09489b0fa5f0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_8"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice/export": {
      "post": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Trigger generation of an export for dispatch advices",
        "description": "The status of the generation can be checked on the GET dispatchAdvice/export endpoint.",
        "operationId": "36d65bc6-0b18-4a8c-b0b7-7e3e4e239a72",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Get exports for dispatch advices",
        "description": "Returns all exports for dispatch advices.",
        "operationId": "852537b9-15d8-4acf-bc4f-937a2fba6267",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice/{id}": {
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Get dispatch advice by ID",
        "description": "Returns a dispatch advice by its unique GUID. If no dispatch advice exists with that GUID this returns 404 - Not found.",
        "operationId": "fc284006-1e08-420b-884d-184c891a4438",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the dispatch advice to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the dispatch advice to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Dispatch advice not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning dispatch advice",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice/changed/{from}/{to}": {
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Get changed dispatch advice",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "5e2c3276-02be-4086-abdd-24e9bf6e3046",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice": {
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Get dispatch advice",
        "description": "Returns all dispatch advice.",
        "operationId": "b17a1df5-cdd5-4e2b-9dcd-f0cdeaeb6516",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice/export/{id}": {
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Get dispatch advice export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "f76de2e2-0d08-477e-82c9-e71c81d521bd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdvice/export/{id}/download": {
      "get": {
        "tags": [
          "DispatchAdvice"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "1e86d351-5b3c-4274-a72a-014db35d0529",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_desadv"
            ]
          }
        ]
      }
    },
    "/api/v3/dispatchAdviceCheckInstruction": {
      "post": {
        "tags": [
          "DispatchAdviceCheckInstruction"
        ],
        "summary": "Create dispatch advice check instruction",
        "description": "Creates a new dispatch advice check instruction.",
        "operationId": "f9751430-c3fd-4d75-9d69-afe2047e7fe9",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_wes"
            ]
          }
        ]
      }
    },
    "/api/v3/function/export": {
      "post": {
        "tags": [
          "Function"
        ],
        "summary": "Trigger generation of an export for functions",
        "description": "The status of the generation can be checked on the GET function/export endpoint.",
        "operationId": "03e5308a-8b36-4451-9a70-bdd939d3a9a6",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get exports for functions",
        "description": "Returns all exports for functions.",
        "operationId": "a5ae9251-f837-4de0-8a0f-13f9db3f3a01",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function/{id}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get function by ID",
        "description": "Returns a function by its unique GUID. If no function exists with that GUID this returns 404 - Not found.",
        "operationId": "ef1e2282-5fd6-4c6d-beaf-9225ed62a7a7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the function to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the function to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Function not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning function",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function/{number}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get function by number",
        "description": "Retrieves the function by its primary key. The primary key of a function is its number field.",
        "operationId": "c3433ae5-e3ba-44da-b0e2-3377595031c0",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the function. Can be found as number field in a function object or as functionNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the function. Can be found as number field in a function object or as functionNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get changed functions",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get functions endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "2db5c1e7-3e0e-4370-b7f6-c06f9585d3bb",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get functions",
        "description": "Returns all functions ordered by their function number.",
        "operationId": "033ae7f1-3722-4743-9781-164f7bbab8ce",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function/export/{id}": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Get function export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9c38d920-c22c-441e-9421-56e43c6751c2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/function/export/{id}/download": {
      "get": {
        "tags": [
          "Function"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f43166df-e925-4565-911e-42573a785f2a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:funk"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/export": {
      "post": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Trigger generation of an export for general categories",
        "description": "The status of the generation can be checked on the GET generalCategory/export endpoint.",
        "operationId": "f6a0d93f-500d-430f-ab76-7b54ee07d6f0",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get exports for general categories",
        "description": "Returns all exports for general categories.",
        "operationId": "9e6d9bb7-d11a-4bc0-934e-d52e474ee1e0",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/{id}": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get general category by ID",
        "description": "Returns a general category by its unique GUID. If no general category exists with that GUID this returns 404 - Not found.",
        "operationId": "78461d1e-1899-4853-b88c-0a1305c8bf6b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the general category to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the general category to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "General category not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning general category",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/{number}": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get general category by number",
        "description": "Retrieves the general category by its primary key. The primary key of a general category is its number field.",
        "operationId": "ea142793-f434-486d-b8a6-b3f2f6fe93ac",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the general category. Can be found as number field in a general category object or as GeneralCategoryNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the general category. Can be found as number field in a general category object or as GeneralCategoryNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/changed/{from}/{to}": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get changed general categories",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get general categories endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "df74a345-b9d9-41c4-b7d9-0bb08383b52a",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get general categories",
        "description": "Returns all general categories ordered by their general category number.",
        "operationId": "01ff57b3-b69e-4774-b6af-c0063029484f",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/export/{id}": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Get generalcategory export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "127e5f7c-b830-4d7a-9ce2-289b8432aeeb",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/generalCategory/export/{id}/download": {
      "get": {
        "tags": [
          "GeneralCategory"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "3717405f-0af6-4c29-9c61-38bd15654a35",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:owgr"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/export": {
      "post": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Trigger generation of an export for inbound intakes",
        "description": "The status of the generation can be checked on the GET inboundIntake/export endpoint.",
        "operationId": "1fbf2dad-011d-40b8-84f9-59c6f8455720",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get exports for inbound intakes",
        "description": "Returns all exports for inbound intakes.",
        "operationId": "d01a4982-8959-41a7-a3cf-edecb1a7960c",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/{id}": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get inbound intake by ID",
        "description": "Returns a inbound intake by its unique GUID. If no inbound intake exists with that GUID this returns 404 - Not found.",
        "operationId": "d7a6fbe2-cbc8-4ada-b134-c5d6ad919c0b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the inbound intake to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the inbound intake to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Inbound intake not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning inbound intake",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/{number}": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get inbound intake by number",
        "description": "Retrieves all inbound intakes by their number.",
        "operationId": "11ae6f11-249b-4500-9ccf-1e3ff79c0c53",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the inbound intake.",
            "schema": {
              "type": "integer",
              "description": "Number of the inbound intake.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/changed/{from}/{to}": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get changed inbound intake",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "76d3d4cc-695c-4f40-9279-cc953a2ef144",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get inbound intake",
        "description": "Returns all inbound intake ordered by their inbound intake number.",
        "operationId": "6b5fc1ae-3ca1-49eb-af70-f097b67e2f04",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/export/{id}": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Get inboundintake export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "4e523bb2-6e62-4946-b1ca-74081c643616",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundIntake/export/{id}/download": {
      "get": {
        "tags": [
          "InboundIntake"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43153",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_0"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/export": {
      "post": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Trigger generation of an export for inbound misc",
        "description": "The status of the generation can be checked on the GET inboundMisc/export endpoint.",
        "operationId": "d3a53a0a-9f6a-4efc-9928-a1ecb12096de",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get exports for inbound misc",
        "description": "Returns all exports for inbound misc.",
        "operationId": "1dce40a1-36a9-4bb0-bbd0-c2312770cf47",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/{id}": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get inbound misc by ID",
        "description": "Returns a inbound misc by its unique GUID. If no inbound misc exists with that GUID this returns 404 - Not found.",
        "operationId": "a189b1dd-4470-40f5-8905-3bd5a2adf967",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the inbound misc to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the inbound misc to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Inbound misc not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning inbound misc",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/{number}": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get inbound misc by number",
        "description": "Retrieves the inbound misc by its primary key. The primary key of a inbound misc is its number field.",
        "operationId": "91b73823-775f-4272-95ce-9f45cbe77c64",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the inbound misc.",
            "schema": {
              "type": "integer",
              "description": "Number of the inbound misc.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/changed/{from}/{to}": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get changed inbound misc",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "e648ab77-faf0-40b5-8768-ee793ebbc8fe",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get inbound misc",
        "description": "Returns all inbound misc ordered by their inbound misc number.",
        "operationId": "5473368a-b781-438d-9f9e-079b65b232bb",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/export/{id}": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Get inboundmisc export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "0c302fac-2a38-4dd3-b354-9812bf431e60",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundMisc/export/{id}/download": {
      "get": {
        "tags": [
          "InboundMisc"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "1f722f11-a805-4dab-9233-3dd85a7f28d3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_1"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/export": {
      "post": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Trigger generation of an export for inbound transfers",
        "description": "The status of the generation can be checked on the GET inboundTransfer/export endpoint.",
        "operationId": "dc3c24b3-0c49-4491-bcaa-7299a3f3ba35",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get exports for inbound transfers",
        "description": "Returns all exports for inbound transfers.",
        "operationId": "e0319871-3774-4710-a40b-39c0448343d7",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/{id}": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get inbound transfer by ID",
        "description": "Returns a inbound transfer by its unique GUID. If no inbound transfer exists with that GUID this returns 404 - Not found.",
        "operationId": "862d1482-e127-45c9-bc2d-61f60d928ce2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the inbound transfer to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the inbound transfer to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Inbound transfer not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning inbound transfer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/{number}": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get inbound transfer by number",
        "description": "Retrieves all inbound transfers by their number.",
        "operationId": "ca5058ef-3d8b-4547-86b5-23d9e0b1b6fa",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the inbound transfer.",
            "schema": {
              "type": "integer",
              "description": "Number of the inbound transfer.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/changed/{from}/{to}": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get changed inbound transfer",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "8d65a7f4-2be6-43e8-9533-14a9acc664c6",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get inbound transfer",
        "description": "Returns all inbound transfer ordered by their inbound transfer number.",
        "operationId": "7a3b0f99-393c-49a6-ad49-88689fdc66fd",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/export/{id}": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Get inboundtransfer export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "e8dcc1af-f930-4a49-a375-c2b7a8c066c9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inboundTransfer/export/{id}/download": {
      "get": {
        "tags": [
          "InboundTransfer"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "2dcb571f-abd7-4d73-87e5-20018848ceab",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:we_2"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/export": {
      "post": {
        "tags": [
          "Inventory"
        ],
        "summary": "Trigger generation of an export for inventories",
        "description": "The status of the generation can be checked on the GET inventory/export endpoint.",
        "operationId": "9c465edf-b318-4ee2-b172-be9a50d8b35e",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get exports for inventories",
        "description": "Returns all exports for inventories.",
        "operationId": "69f7ac66-bc6c-4bd9-92af-4e8fe11977c9",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/active/{active}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventories by active flag",
        "description": "Retrieves all inventories filtered by the active flag.",
        "operationId": "1f92bfe3-45ce-4123-8e96-61d3b4d210e4",
        "parameters": [
          {
            "name": "active",
            "in": "path",
            "description": "Active flag value to be filtered by.",
            "schema": {
              "type": "boolean",
              "description": "Active flag value to be filtered by."
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventory by ID",
        "description": "Returns a inventory by its unique GUID. If no inventory exists with that GUID this returns 404 - Not found.",
        "operationId": "2fb13f9b-bc57-4650-ae5f-b6212553b1c2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the inventory to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the inventory to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Inventory not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning inventory",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get changed inventories",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "4c32d909-932b-43c8-8970-a2c79486e659",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventories",
        "description": "Returns all inventory ordered by their inventory number.",
        "operationId": "a984c1eb-a7ad-4aa9-9134-73426f4b9268",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/export/{id}": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Get inventory export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a613b091-4700-4fca-ba2d-ca0156ca7cad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventory/export/{id}/download": {
      "get": {
        "tags": [
          "Inventory"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "40b657b6-7bec-4363-98dc-9f47b8d3c673",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:inv"
            ]
          }
        ]
      }
    },
    "/api/v3/inventoryDiscrepancyInstruction": {
      "post": {
        "tags": [
          "InventoryDiscrepancyInstruction"
        ],
        "summary": "Create inventory discrepancy instruction",
        "description": "Creates a new inventory discrepancy instruction.",
        "operationId": "81fd895f-3c98-44ce-964f-effb11166569",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_dif"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/export": {
      "post": {
        "tags": [
          "Invoice"
        ],
        "summary": "Trigger generation of an export for invoices",
        "description": "The status of the generation can be checked on the GET invoice/export endpoint.",
        "operationId": "2323d95c-a884-4030-af74-de37c9a8988a",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get exports for invoices",
        "description": "Returns all exports for invoices.",
        "operationId": "c13e2494-c0a7-404c-a0bf-0183e69032e6",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by ID",
        "description": "Returns a invoice by its unique GUID. If no invoice exists with that GUID this returns 404 - Not found.",
        "operationId": "4d53c8b0-bf94-4bed-99f9-1887dc657ab3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the invoice to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the invoice to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning invoice",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/{number}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice by number",
        "description": "Retrieves the invoice by its primary key. The primary key of a invoice is its number field.",
        "operationId": "82325463-e8cb-4f0b-b506-e316f4d70079",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the invoice. Can be found as number field in a invoice object or as InvoiceNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the invoice. Can be found as number field in a invoice object or as InvoiceNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get changed invoices",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get invoices endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "6ac4ce24-6e75-43df-a97c-ad15b7368d6c",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoices",
        "description": "Returns all invoices ordered by their invoice number.",
        "operationId": "a1645c62-3fbe-4e0d-9692-10cac69e1c0a",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/export/{id}": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Get invoice export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "fb120f08-578b-4d72-9fc0-17ed05367858",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/invoice/export/{id}/download": {
      "get": {
        "tags": [
          "Invoice"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "ced9a4ab-a510-4f69-a233-79f4d90fbaa8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:rech"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/export": {
      "post": {
        "tags": [
          "LabelType"
        ],
        "summary": "Trigger generation of an export for label types",
        "description": "The status of the generation can be checked on the GET labelType/export endpoint.",
        "operationId": "51a9c816-fe64-4db0-a8b8-1f3fec0f82d3",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get exports for label types",
        "description": "Returns all exports for label types.",
        "operationId": "cbb4f9c1-a5ad-470b-8325-6f70cd3e0a05",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/{id}": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get labelType by ID",
        "description": "Returns a labelType by its unique GUID. If no labelType exists with that GUID this returns 404 - Not found.",
        "operationId": "893bc629-3075-4978-984c-660e459571ad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the labelType to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the labelType to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "LabelType not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning labelType",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/{number}": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get labelType by number",
        "description": "Retrieves the labelType by its primary key. The primary key of a labelType is its number field.",
        "operationId": "a01ce091-51f0-4f59-9b67-d51912e6bf8c",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the labelType. Can be found as number field in a labelType object or as labelTypeNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the labelType. Can be found as number field in a labelType object or as labelTypeNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/changed/{from}/{to}": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get changed labelTypes",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get labelTypes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "80b87125-7096-4495-91e7-611d1e712993",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get labelTypes",
        "description": "Returns all labelTypes ordered by their labelType number.",
        "operationId": "4d615b43-3a6b-4f58-9ce7-38d96c556f9b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/export/{id}": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Get labeltype export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "3d7e70cf-c684-4b53-a97b-fb172eba9a36",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/labelType/export/{id}/download": {
      "get": {
        "tags": [
          "LabelType"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "2eabb863-c705-4ea5-bd90-a674835357a5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:etyp"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/export": {
      "post": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Trigger generation of an export for main categories",
        "description": "The status of the generation can be checked on the GET mainCategory/export endpoint.",
        "operationId": "1a1292bb-f423-4c0f-8d7e-e6058e6e393c",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get exports for main categories",
        "description": "Returns all exports for main categories.",
        "operationId": "4ef6a974-5f8c-4634-9056-6fe58158cafc",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/{id}": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get main category by ID",
        "description": "Returns a main category by its unique GUID. If no main category exists with that GUID this returns 404 - Not found.",
        "operationId": "4f26c78a-0fc2-464b-ba48-1b675d62634a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the main category to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the main category to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Main category not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning category",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/{number}": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get main category by number",
        "description": "Retrieves the main category by its primary key. The primary key of a main category is its number field.",
        "operationId": "f7439e53-80bf-486e-b23b-a720cb7d7a2f",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the category. Can be found as number field in a category object or as MainCategoryNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the category. Can be found as number field in a category object or as MainCategoryNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/changed/{from}/{to}": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get changed main categories",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get main categories endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "8249095b-6ec5-4070-b916-48f3d1f5788c",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get main categories",
        "description": "Returns all main categories ordered by their category number.",
        "operationId": "11f6f2f7-7c43-4f9a-8463-9f7eea72c8c0",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/export/{id}": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Get maincategory export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "4611d477-d526-40ce-ba4e-9022fcc62caa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainCategory/export/{id}/download": {
      "get": {
        "tags": [
          "MainCategory"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "2c3ba53f-f744-4447-bbf7-7b665aa53ed8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:hwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/export": {
      "post": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Trigger generation of an export for main departments",
        "description": "The status of the generation can be checked on the GET mainDepartment/export endpoint.",
        "operationId": "4e95d0ca-56ce-444c-b3e1-cb79ed239918",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get exports for main departments",
        "description": "Returns all exports for main departments.",
        "operationId": "58f78fb3-73bb-4f47-bef7-751fc295ac86",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/{id}": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get main department by ID",
        "description": "Returns a main department by its unique GUID. If no main department exists with that GUID this returns 404 - Not found.",
        "operationId": "7634fe93-91d1-4af8-bfd5-42c8616b1a7d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the main department to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the main department to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Main department not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning main department",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/{number}": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get main department by number",
        "description": "Retrieves the main department by its primary key. The primary key of a main department is its number field.",
        "operationId": "4189f07c-ed16-4315-8cbc-42be2af3b947",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the main department. Can be found as number field in a main department object or as MainDepartmentNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the main department. Can be found as number field in a main department object or as MainDepartmentNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/changed/{from}/{to}": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get changed main departments",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get main departments endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "0e44820f-0e0d-4466-9ba7-ad6d9f544792",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get main departments",
        "description": "Returns all main departments ordered by their main department number.",
        "operationId": "9f5f2439-671a-4e42-92cf-5294f0fcbd5d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/export/{id}": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Get maindepartment export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "d58dcb96-1ddb-4fd5-bc5e-161433f6eac4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/mainDepartment/export/{id}/download": {
      "get": {
        "tags": [
          "MainDepartment"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6f0bbc31-724b-4115-bab8-843889cdd23c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:habt"
            ]
          }
        ]
      }
    },
    "/api/v3/material/export": {
      "post": {
        "tags": [
          "Material"
        ],
        "summary": "Trigger generation of an export for materials",
        "description": "The status of the generation can be checked on the GET material/export endpoint.",
        "operationId": "c4fab4c6-cc2e-4fee-9be0-caa1261cd25b",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get exports for materials",
        "description": "Returns all exports for materials.",
        "operationId": "3ac99822-18cf-4ec6-afd8-4d9cd5bbc408",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material/{id}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get material by ID",
        "description": "Returns a material by its unique GUID. If no material exists with that GUID this returns 404 - Not found.",
        "operationId": "7064a4d4-ea8c-4e51-adfe-140244429544",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the material to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the material to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Material not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning material",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material/{number}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get material by number",
        "description": "Retrieves the material by its primary key. The primary key of a material is its number field.",
        "operationId": "7191458a-1d90-4132-83d5-57cc576f6974",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the material. Can be found as number field in a material object or as MaterialNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the material. Can be found as number field in a material object or as MaterialNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get changed materials",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get materials endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "bb31b04a-7ee6-4d2b-a768-deacf4a5c2a9",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get materials",
        "description": "Returns all materials ordered by their material number.",
        "operationId": "7191458a-1d90-4132-83d5-57cc576f6974",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material/export/{id}": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Get material export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "37678a6b-8bc3-4d1c-b017-a65d4fbacc4c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/material/export/{id}/download": {
      "get": {
        "tags": [
          "Material"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "82e670ef-c0ba-4f78-abf5-03ef9cd0b20f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mat"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock/export": {
      "post": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Trigger generation of an export for minimum stock",
        "description": "The status of the generation can be checked on the GET minimumStock/export endpoint.",
        "operationId": "2d34fb7d-c691-4492-b602-99b098389fb9",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Get exports for minimum stocks",
        "description": "Returns all exports for minimum stocks.",
        "operationId": "3ac99822-18cf-4ec6-afd8-4d9cd5bbc408",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock/{id}": {
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Get minimum stock by ID",
        "description": "Returns a minimum stock by its unique GUID. If no minimum stock exists with that GUID this returns 404 - Not found.",
        "operationId": "c877b975-9e35-4000-85d0-cb0ef7d62c89",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the minimum stock to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the minimum stock to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Minimum stock not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning minimum stock",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock/changed/{from}/{to}": {
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Get changed minimum stock",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "4e97f40c-64af-43e9-8ac2-c6379aed9868",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock": {
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Get minimum stock",
        "description": "Returns all minimum stock.",
        "operationId": "8c7c3554-3786-4e94-a9bb-60c441137804",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock/export/{id}": {
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Get minimum stock export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9b82482e-42fa-4f80-ab1b-e8e1d0ac87c1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/minimumStock/export/{id}/download": {
      "get": {
        "tags": [
          "MinimumStock"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "b4db4d77-298f-4c9d-8829-4ae29192e830",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:mb"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/export": {
      "post": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Trigger generation of an export for outbound inventory differences",
        "description": "The status of the generation can be checked on the GET outboundInventoryDifference/export endpoint.",
        "operationId": "1031b8d2-d6ec-4f19-8bdf-5dae776c6bdb",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get exports for outbound inventory differences",
        "description": "Returns all exports for outbound inventory differences.",
        "operationId": "64c866bb-2321-47f3-8bfd-439738ad88b6",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/{id}": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get outbound inventory difference by ID",
        "description": "Returns a outbound inventory difference by its unique GUID. If no outbound inventory difference exists with that GUID this returns 404 - Not found.",
        "operationId": "3231abb7-3a41-473a-afef-9026f244838a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the outbound inventory difference to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the outbound inventory difference to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Outbound inventory difference not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning outbound inventory difference",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/{number}": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get outbound inventory difference by number",
        "description": "Retrieves the outbound inventory difference by their number.",
        "operationId": "c8e2595c-1520-47ae-abcd-0a66dc7fef62",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the outbound inventory difference.",
            "schema": {
              "type": "integer",
              "description": "Number of the outbound inventory difference.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/changed/{from}/{to}": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get changed outbound inventory difference",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "fb4017c2-8536-41f9-b5b6-e8fe68a699b3",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get outbound inventory difference",
        "description": "Returns all outbound inventory difference ordered by their outbound inventory difference number.",
        "operationId": "a211d705-9915-485d-8c22-3d079b575f2b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/export/{id}": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Get outboundinventorydifference export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9a3a7b5c-dea9-440b-bdbd-ba6b999eddcc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundInventoryDifference/export/{id}/download": {
      "get": {
        "tags": [
          "OutboundInventoryDifference"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "13c2b161-9a1e-44db-a199-9c2d4246ddc2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_3"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/export": {
      "post": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Trigger generation of an export for outbound misc",
        "description": "The status of the generation can be checked on the GET outboundMisc/export endpoint.",
        "operationId": "7210d633-b68b-418e-9e80-60461d240ba4",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get exports for outbound misc",
        "description": "Returns all exports for outbound misc.",
        "operationId": "f5508f0f-4424-4ff0-9756-8625b4863aca",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/{id}": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get outbound misc by ID",
        "description": "Returns a outbound misc by its unique GUID. If no outbound misc exists with that GUID this returns 404 - Not found.",
        "operationId": "1c75ca7c-4e73-4a31-96cd-27865c3875d5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the outbound misc to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the outbound misc to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Outbound misc not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning outbound misc",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/{number}": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get outbound misc by number",
        "description": "Retrieves the outbound misc by their number.",
        "operationId": "4b301335-82c1-4bca-92fd-d30bd096df01",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the outbound misc.",
            "schema": {
              "type": "integer",
              "description": "Number of the outbound misc.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/changed/{from}/{to}": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get changed outbound misc",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "4d54af3e-cf72-4499-8ae4-3351ba78dac1",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get outbound misc",
        "description": "Returns all outbound misc ordered by their outbound misc number.",
        "operationId": "621d65b2-d981-4a00-9d26-7a3682da3709",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/export/{id}": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Get outboundmisc export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "5cc501f7-45e9-4501-827d-dcbbdba9b499",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundMisc/export/{id}/download": {
      "get": {
        "tags": [
          "OutboundMisc"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "74b09a89-8800-4746-9c9d-ccf7b6bc1cce",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_2"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/export": {
      "post": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Trigger generation of an export for outbound supplier returns",
        "description": "The status of the generation can be checked on the GET outboundSupplierReturn/export endpoint.",
        "operationId": "928965cf-80c1-40cc-8ae4-87ddd6904fe4",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get exports for outbound supplier returns",
        "description": "Returns all exports for outbound supplier returns.",
        "operationId": "beb738d8-56d2-461b-9f21-e45d3c530e58",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/{id}": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get outbound supplier return by ID",
        "description": "Returns a outbound supplier return by its unique GUID. If no outbound supplier return exists with that GUID this returns 404 - Not found.",
        "operationId": "9294a530-3386-4476-abdb-31019a3bee38",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the outbound supplier return to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the outbound supplier return to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Outbound supplier return not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning outbound supplier return",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/{number}": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get outbound supplier return by number",
        "description": "Retrieves the outbound supplier return by their number.",
        "operationId": "55f52b48-86ea-415e-b45f-fec1274bc970",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the outbound supplier return.",
            "schema": {
              "type": "integer",
              "description": "Number of the outbound supplier return.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/changed/{from}/{to}": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get changed outbound supplier return",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "f2f40aa4-f867-4baa-9020-39c1a01172e6",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get outbound supplier return",
        "description": "Returns all outbound supplier return ordered by their outbound supplier return number.",
        "operationId": "7a545c56-c3b7-4cec-864d-eb8919c31593",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/export/{id}": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Get outboundsupplierreturn export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "2676f758-6ba0-4be6-8231-25171f3c453e",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundSupplierReturn/export/{id}/download": {
      "get": {
        "tags": [
          "OutboundSupplierReturn"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "0ff3e0f5-46c1-49f7-9489-3aa9091042ee",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_0"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/export": {
      "post": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Trigger generation of an export for outbound transfers",
        "description": "The status of the generation can be checked on the GET outboundTransfer/export endpoint.",
        "operationId": "09a05520-f26b-46b3-a849-0d917c75a976",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get exports for outbound transfers",
        "description": "Returns all exports for outbound transfers.",
        "operationId": "f39e82d5-581f-4801-9e60-cef74b50ea21",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/{id}": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get outbound transfer by ID",
        "description": "Returns a outbound transfer by its unique GUID. If no outbound transfer exists with that GUID this returns 404 - Not found.",
        "operationId": "95a6602f-869f-48b9-8682-8cb1dd844e93",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the outbound transfer to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the outbound transfer to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Outbound transfer not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning outbound transfer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/{number}": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get outbound transfer by number",
        "description": "Retrieves the outbound transfer by their number.",
        "operationId": "4955aa39-9422-4fd8-a150-cc7ca2b3e04e",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Number of the outbound transfer.",
            "schema": {
              "type": "integer",
              "description": "Number of the outbound transfer.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/changed/{from}/{to}": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get changed outbound transfer",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "07f65a93-708d-4c3c-aced-6bd5129a9ab5",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get outbound transfer",
        "description": "Returns all outbound transfer ordered by their outbound transfer number.",
        "operationId": "3ec9cdf4-4d45-4c94-bff2-c8b6a303a8aa",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/export/{id}": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Get outboundtransfer export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "0d980bef-72d1-441a-9d4e-16dc33e078fa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/outboundTransfer/export/{id}/download": {
      "get": {
        "tags": [
          "OutboundTransfer"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "735c947b-3ed6-47b0-9953-f002f3a32894",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ab_1"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn/export": {
      "post": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Trigger generation of an export for parked supplier returns",
        "description": "The status of the generation can be checked on the GET parkedSupplierReturn/export endpoint.",
        "operationId": "a9da6801-6be6-4a42-9107-02f0daa9b6ab",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Get exports for parked supplier returns",
        "description": "Returns all exports for parked supplier returns.",
        "operationId": "7a4d50ca-a493-44a0-a82d-b879d23d48b9",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn/{id}": {
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Get parked supplier return by ID",
        "description": "Returns a parked supplier return by its unique GUID. If no parked supplier return exists with that GUID this returns 404 - Not found.",
        "operationId": "535e46ed-610e-41fe-b864-f4df233c0327",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the parked supplier return to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the parked supplier return to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Parked supplier return not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning parked supplier return",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Get changed parked supplier return",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "5ad3774c-fff3-4b89-8075-e212554b2064",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn": {
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Get parked supplier return",
        "description": "Returns all parked supplier return ordered by their parked supplier return number.",
        "operationId": "f9bdb989-36ee-4fd1-abde-7af5b199ac4e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn/export/{id}": {
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Get parked supplier return export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "05e37b24-4a76-4f76-b808-3cb99deeb30a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/parkedSupplierReturn/export/{id}/download": {
      "get": {
        "tags": [
          "ParkedSupplierReturn"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "252a06a4-b792-4cc7-aeb3-2e2a0baf031d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vb_lrm"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/export": {
      "post": {
        "tags": [
          "Pattern"
        ],
        "summary": "Trigger generation of an export for patterns",
        "description": "The status of the generation can be checked on the GET pattern/export endpoint.",
        "operationId": "ca8193a2-927d-4a52-9df2-58c4fbf2c0ff",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get exports for patterns",
        "description": "Returns all exports for patterns.",
        "operationId": "eaf791a2-7661-4b5e-a45a-6bd3154d9d55",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/{id}": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get pattern by ID",
        "description": "Returns a pattern by its unique GUID. If no pattern exists with that GUID this returns 404 - Not found.",
        "operationId": "a78474bf-79ad-4f25-af0a-f241a82d9a31",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the pattern to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the pattern to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Pattern option not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning pattern",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/{number}": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get pattern by number",
        "description": "Retrieves the pattern by its primary key. The primary key of a pattern is its number field.",
        "operationId": "76cda230-e74f-41a6-bacb-ed46cf3dc4b2",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the pattern. Can be found as number field in a pattern object or as PatternNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the pattern. Can be found as number field in a pattern object or as PatternNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get changed pattern",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get pattern endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "08f82ecc-b59b-485c-b468-4c92f51f6ab4",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get pattern",
        "description": "Returns all pattern ordered by their pattern number.",
        "operationId": "bb9125a1-337a-4151-a1f9-c15bff799b45",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/export/{id}": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Get pattern export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "1e70c686-92fc-4d0c-bc4f-944dca8c1dac",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/pattern/export/{id}/download": {
      "get": {
        "tags": [
          "Pattern"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6b7b99f1-acae-40d3-9164-beb2df5e14ba",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:dess"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/export": {
      "post": {
        "tags": [
          "Payment"
        ],
        "summary": "Trigger generation of an export for payments",
        "description": "The status of the generation can be checked on the GET payment/export endpoint.",
        "operationId": "7fece7d9-6b6f-4c8b-9a62-569130de0b97",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get exports for payments",
        "description": "Returns all exports for payments.",
        "operationId": "48830e0a-163c-4ba9-9099-6a11586b116c",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get payment by ID",
        "description": "Returns a payment by its unique GUID. If no payment exists with that GUID this returns 404 - Not found.",
        "operationId": "62427f87-3624-4cc7-9f04-1f0aa4e3565a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the payment to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the payment to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Payment not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning payment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/invoice/{invoiceNumber}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get payments filtered by invoice number",
        "description": "Returns all payments with the given invoice number.",
        "operationId": "f6d80d03-a512-4e23-97bd-972b1f1ad45f",
        "parameters": [
          {
            "name": "invoiceNumber",
            "in": "path",
            "description": "The number of the invoice to filter payments by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the invoice to filter payments by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get changed payments",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get payments endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "015f4551-e890-4b4e-95f5-c61b56b1136a",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get payments",
        "description": "Returns all payments.",
        "operationId": "9e19b5f8-89f6-4a1b-b970-673381f5305f",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/export/{id}": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Get payment export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "643cf50e-3757-4a00-80aa-a47932b6c5bd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/payment/export/{id}/download": {
      "get": {
        "tags": [
          "Payment"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6d4e440b-0ae2-477a-af9e-bebbedd96549",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:bez"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/export": {
      "post": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Trigger generation of an export for payment options",
        "description": "The status of the generation can be checked on the GET paymentOption/export endpoint.",
        "operationId": "6331eff0-7b54-4fc8-a2d8-f8b1516e3857",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get exports for payment options",
        "description": "Returns all exports for payment options.",
        "operationId": "584aa515-a365-4349-b473-2894867521ce",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/{id}": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get payment option by ID",
        "description": "Returns a payment option by its unique GUID. If no payment option exists with that GUID this returns 404 - Not found.",
        "operationId": "b0f2f04f-5475-469d-beac-efcee92a01cf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the payment option to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the payment option to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Payment option not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning payment option",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/{number}": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get payment option by number",
        "description": "Retrieves the payment option by its primary key. The primary key of a payment option is its number field.",
        "operationId": "fb019af7-dcbe-4ceb-8472-b35db84a7172",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the payment option. Can be found as number field in a payment option object or as PaymentOptionNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the payment option. Can be found as number field in a payment option object or as PaymentOptionNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get changed payment options",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get payment options endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "9faf49f3-6991-4020-a58b-dff979f1a4e7",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get payment options",
        "description": "Returns all payment options ordered by their payment option number.",
        "operationId": "fab859c9-4adf-45be-8f63-fd71048ab8dd",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/export/{id}": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Get paymentoption export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "ea690e1f-f2c1-4834-857f-3b8ccffea23b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/paymentOption/export/{id}/download": {
      "get": {
        "tags": [
          "PaymentOption"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43153",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:za"
            ]
          }
        ]
      }
    },
    "/api/v3/priceReductionInstruction": {
      "post": {
        "tags": [
          "PriceReductionInstruction"
        ],
        "summary": "Create price reduction instruction",
        "description": "Creates a new price reduction instruction.",
        "operationId": "17290dc8-eb81-42a0-a810-0169114f0145",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PriceReductionInstruction.PriceReductionInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PriceReductionInstruction.PriceReductionInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PriceReductionInstruction.PriceReductionInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_pä"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelection/export": {
      "post": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Trigger generation of an export for promotion selections",
        "description": "The status of the generation can be checked on the GET promotionSelection/export endpoint.",
        "operationId": "09a05520-f26b-46b3-a849-0d917c75a977",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get exports for promotion selections",
        "description": "Returns all exports for promotion selections.",
        "operationId": "f39e82d5-581f-4801-9e60-cef74b50ea22",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelection/{id}": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get promotion selection by ID",
        "description": "Returns a promotion selection by its unique GUID. If no promotion selection exists with that GUID this returns 404 - Not found.",
        "operationId": "95a6602f-869f-48b9-8682-8cb1dd844e95",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the promotion selection to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the promotion selection to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Promotion selection not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning promotion selection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelection/{number}": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get promotion selection by number",
        "description": "Returns a specific promotion selection by its number.",
        "operationId": "aeb30b32-7396-43eb-a033-055c2cc40ed6",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The promotion selection number to retrieve.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "The promotion selection number to retrieve.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelection/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get changed promotion selections",
        "description": "Returns promotion selections that have changed since the last change ID.",
        "operationId": "10043aca-d033-4d82-b273-25fa76afbc0b",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelection": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get promotion selections",
        "description": "Returns all promotion selections ordered by their number.",
        "operationId": "5c7be688-6f5a-402c-9da0-a0c45b56e0c9",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotion-selection/export/{id}": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Get promotion selection export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a2019a13-3a1a-486e-b0ef-cac9680c60b5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotion-selection/export/{id}/download": {
      "get": {
        "tags": [
          "PromotionSelection"
        ],
        "summary": "Download promotion selection export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43154",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelectionCustomer/export": {
      "post": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Trigger generation of an export for promotion selection customers",
        "description": "The status of the generation can be checked on the GET promotionSelectionCustomer/export endpoint.",
        "operationId": "09a05520-f26b-46b3-a849-0d917c75a978",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get exports for promotion selection customers",
        "description": "Returns all exports for promotion selection customers.",
        "operationId": "f39e82d5-581f-4801-9e60-cef74b50ea23",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelectionCustomer/{id}": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get promotion selection customer by ID",
        "description": "Returns a promotion selection customer by its unique GUID. If no promotion selection customer exists with that GUID this returns 404 - Not found.",
        "operationId": "95a6602f-869f-48b9-8682-8cb1dd844e94",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the promotion selection customer to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the promotion selection customer to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Promotion selection customer not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning promotion selection customer",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelectionCustomer/promotionSelection/{promotionNumber}": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get promotion selection customers by promotion number",
        "description": "Retrieves the promotion selection customers by their promotion number.",
        "operationId": "4955aa39-9422-4fd8-a150-cc7ca2b3e04f",
        "parameters": [
          {
            "name": "promotionNumber",
            "in": "path",
            "description": "Number of the promotion selection.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Number of the promotion selection.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelectionCustomer/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get changed promotion selection customers",
        "description": "Returns promotion selection customers that have changed since the last change ID.",
        "operationId": "10043aca-d033-4d82-b273-25fa76afbc0c",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotionSelectionCustomer": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get promotion selection customers",
        "description": "Returns all promotion selection customers ordered by their promotion number.",
        "operationId": "5c7be688-6f5a-402c-9da0-a0c45b56e0c8",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotion-selection-customer/export/{id}": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Get promotion selection customer export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a2019a13-3a1a-486e-b0ef-cac9680c60b6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/promotion-selection-customer/export/{id}/download": {
      "get": {
        "tags": [
          "PromotionSelectionCustomer"
        ],
        "summary": "Download promotion selection customer export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43155",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:kdh"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/export": {
      "post": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Trigger generation of an export for purchase orders",
        "description": "The status of the generation can be checked on the GET purchaseOrder/export endpoint.",
        "operationId": "610df130-759d-4051-8dff-f77de0f4ce50",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get exports for purchase orders",
        "description": "Returns all exports for purchase orders.",
        "operationId": "b5b451d5-acc3-408d-b43b-7a10b9d67027",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase order by ID",
        "description": "Returns a purchase order by its unique GUID. If no purchase order exists with that GUID this returns 404 - Not found.",
        "operationId": "c168db81-1c7a-466e-810c-e211be4ca2a6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the purchase order to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the purchase order to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Purchase order not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning purchase order",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/{number}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase order by number",
        "description": "Retrieves the purchase order by its primary key. The primary key of a purchase order is its number field.",
        "operationId": "8b37eabc-f04b-4ede-b406-3e75acde353c",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the purchase order. Can be found as number field in a purchase order object or as PurchaseOrderNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the purchase order. Can be found as number field in a purchase order object or as PurchaseOrderNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get changed purchase order",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "1ab660e9-cc4e-4986-aa38-2bc8d3e933fe",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchase order",
        "description": "Returns all purchase order ordered by their purchase order number.",
        "operationId": "8b7daae5-eba7-422e-9ca2-4a74b3928b53",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/export/{id}": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Get purchaseorder export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "5a2d151a-6ff7-421d-bd6b-93e08405d9cd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/export/{id}/download": {
      "get": {
        "tags": [
          "PurchaseOrder"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "00589514-7b17-42dc-a2c8-a407c44c8a34",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderInstruction": {
      "post": {
        "tags": [
          "PurchaseOrderInstruction"
        ],
        "summary": "Create purchaseOrder instruction",
        "description": "Creates a new purchase order instruction.",
        "operationId": "4f8fbde5-c1f5-4ef9-8c0b-d8a2882023ec",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_ord"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/purchaseOrderPosition/{purchaseOrderPositionId}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position size by purchase order position",
        "description": "Returns all purchase order position sizes that belong to the purchase order position.",
        "operationId": "5a893b2a-6130-4d01-ba21-70b36fb055e6",
        "parameters": [
          {
            "name": "purchaseOrderPositionId",
            "in": "path",
            "description": "Purchase order position id to filter the results.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Purchase order position id to filter the results.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/{purchaseOrderPositionId}/sizes": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position size by purchase order position",
        "description": "Returns all purchase order position sizes that belong to the purchase order position.",
        "operationId": "5a893b2a-6130-4d01-ba21-70b36fb055e6",
        "parameters": [
          {
            "name": "purchaseOrderPositionId",
            "in": "path",
            "description": "Purchase order position id to filter the results.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Purchase order position id to filter the results.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/export": {
      "post": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Trigger generation of an export for purchase order positions",
        "description": "The status of the generation can be checked on the GET purchaseOrderPosition/export endpoint.",
        "operationId": "fc197488-bd55-42ff-a281-6009e0035910",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get exports for purchase order positions",
        "description": "Returns all exports for purchase order positions.",
        "operationId": "b2841462-23c5-4c24-a32b-e46f0b58095f",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position by ID",
        "description": "Returns a purchase order position by its unique GUID. If no purchase order position exists with that GUID this returns 404 - Not found.",
        "operationId": "f2055be0-2d6d-42ff-971a-f9412cb1ac38",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the purchase order position to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the purchase order position to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Purchase order position not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning purchase order position",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/purchaseOrder/{purchaseOrderId}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position by purchase order",
        "description": "Returns all purchase order position that belong to the purchase order ordered by their purchase order position number.",
        "operationId": "44afde41-017c-488c-aef6-00bf1d95e769",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "Purchase order id to filter the results.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Purchase order id to filter the results.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/{purchaseOrderId}/positions": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position by purchase order",
        "description": "Returns all purchase order position that belong to the purchase order ordered by their purchase order position number.",
        "operationId": "44afde41-017c-488c-aef6-00bf1d95e769",
        "parameters": [
          {
            "name": "purchaseOrderId",
            "in": "path",
            "description": "Purchase order id to filter the results.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Purchase order id to filter the results.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/purchaseOrder/{purchaseOrderNumber}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position by purchase order",
        "description": "Returns all purchase order position that belong to the purchase order ordered by their purchase order position number.",
        "operationId": "37a17480-f4c7-4245-8905-eb33f202d8ac",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "Purchase order number to filter the results.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Purchase order number to filter the results.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrder/{purchaseOrderNumber}/positions": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position by purchase order",
        "description": "Returns all purchase order position that belong to the purchase order ordered by their purchase order position number.",
        "operationId": "37a17480-f4c7-4245-8905-eb33f202d8ac",
        "parameters": [
          {
            "name": "purchaseOrderNumber",
            "in": "path",
            "description": "Purchase order number to filter the results.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Purchase order number to filter the results.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get changed purchase order position",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "ca9c864b-4469-4905-993e-3e22db170f81",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchase order position",
        "description": "Returns all purchase order position ordered by their purchase order position number.",
        "operationId": "4970ab25-dbb2-483d-8bc4-1b44b23f4711",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/export/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Get purchaseorderposition export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "4e5a9bd2-9b7f-42e5-9b8d-26c90b239901",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPosition/export/{id}/download": {
      "get": {
        "tags": [
          "PurchaseOrderPosition"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "f6b8eab2-c036-44bd-a72e-da83c3e43153",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:op"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/export": {
      "post": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Trigger generation of an export for purchase order position sizes",
        "description": "The status of the generation can be checked on the GET purchaseOrderPositionSize/export endpoint.",
        "operationId": "d85306a5-2db1-4f64-838b-48a1bf5bd5d8",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Get exports for purchase order position sizes",
        "description": "Returns all exports for purchase order position sizes.",
        "operationId": "9819659e-5dab-4e3b-ad06-a1e86632fb96",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Get purchase order position size by ID",
        "description": "Returns a purchase order position size by its unique GUID. If no purchase order position size exists with that GUID this returns 404 - Not found.",
        "operationId": "c4938dc5-5e05-4c33-8fe8-d784fda173df",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the purchase order position size to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the purchase order position size to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Purchase order position size not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning purchase order position size",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/changed/{from}/{to}": {
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Get changed purchase order position size",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "796a3007-622c-4802-80c6-63217daef912",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize": {
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Get purchase order position size",
        "description": "Returns all purchase order position size ordered by their purchase order position size number.",
        "operationId": "78a606d3-2712-4dc9-a9b6-3e80ee9e66be",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/export/{id}": {
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Get purchaseorderpositionsize export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "352ccb30-7fe1-4e7e-af2b-47f2323fa756",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/purchaseOrderPositionSize/export/{id}/download": {
      "get": {
        "tags": [
          "PurchaseOrderPositionSize"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6686f5f5-0eda-4062-bead-4afeec49ac97",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ogr"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/export": {
      "post": {
        "tags": [
          "Receipt"
        ],
        "summary": "Trigger generation of an export for receipts",
        "description": "The status of the generation can be checked on the GET receipt/export endpoint.",
        "operationId": "ebb526ad-34d5-4356-82ea-4704272c2bba",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get exports for receipts",
        "description": "Returns all exports for receipts.",
        "operationId": "ebebd9bc-bf13-4357-ba92-77ce50a28909",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/customer/{customerNumber}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get receipts by customer number",
        "description": "Retrieves receipts with provided customer number.",
        "operationId": "4592b7f4-607e-4491-8cfb-e8a5a1dff365",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customer number to filter receipts by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The customer number to filter receipts by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/{id}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get receipt by ID",
        "description": "Returns a receipt by its unique GUID. If no receipt exists with that GUID this returns 404 - Not found.",
        "operationId": "34b6acd0-88b5-46a1-a20b-24fb17ebab04",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the receipt to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the receipt to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Receipt not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning receipt",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/{number}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get receipt by number",
        "description": "Retrieves the receipt by its primary key. The primary key of a receipt is its number field.",
        "operationId": "eded4820-a5ce-403f-84ea-582c19f72b40",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the receipt. Can be found as number field in a receipt object or as receiptNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the receipt. Can be found as number field in a receipt object or as receiptNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get changed receipts",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get receipts endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "8874403b-58b7-41ea-b1b5-274aeae4cfd2",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get receipt",
        "description": "Returns all receipt ordered by their receipt number.",
        "operationId": "84fe7fa6-8510-424c-851b-49b81f72d817",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/export/{id}": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Get receipt export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "2c091020-c8a3-4e6d-a394-17c9888de5f4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receipt/export/{id}/download": {
      "get": {
        "tags": [
          "Receipt"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "0938d213-e2ac-48cb-aca0-d0b107880745",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:eb"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptInformation/{id}": {
      "get": {
        "tags": [
          "ReceiptInformation"
        ],
        "summary": "Get receipt information by ID",
        "description": "Returns a receipt information by its unique GUID. If no receipt information exists with that GUID this returns 404 - Not found.",
        "operationId": "8d00565e-86e9-42e3-8cd9-0eb8001b3dd3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the receipt information to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the receipt information to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "receipt information not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning receipt information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptInformation/receipt/{receiptNumber}": {
      "get": {
        "tags": [
          "ReceiptInformation"
        ],
        "summary": "Get receipt information by receipt number",
        "description": "Retrieves receipt informations with provided receipt number.",
        "operationId": "0d33216b-78c0-4edf-9b2b-153df3742d7c",
        "parameters": [
          {
            "name": "receiptNumber",
            "in": "path",
            "description": "The receipt number to filter receipt information by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The receipt number to filter receipt information by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptInformation/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ReceiptInformation"
        ],
        "summary": "Get changed receipt informations",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get receipt information endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "51a65b4a-800e-4b9b-a378-d77da81e4ce0",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptInformation": {
      "get": {
        "tags": [
          "ReceiptInformation"
        ],
        "summary": "Get receipt informations",
        "description": "Returns all receipt informations ordered by their receipt number and position.",
        "operationId": "0dd22027-4d8a-4f94-8972-4bec39f1f6ab",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/export": {
      "post": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Trigger generation of an export for receipt payment methods",
        "description": "The status of the generation can be checked on the GET receiptPaymentMethod/export endpoint.",
        "operationId": "cf3ce589-f907-4d46-9240-64f057e7686b",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get exports for receipt payment methods",
        "description": "Returns all exports for receipt payment methods.",
        "operationId": "f753491c-9208-4c81-8b9c-5c006f67afc3",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/{id}": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get receipt payment method by ID",
        "description": "Returns a receipt payment method by its unique GUID. If no receipt payment method exists with that GUID this returns 404 - Not found.",
        "operationId": "a70e6554-bb12-44aa-ac08-a195b2565534",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the receipt payment method to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the receipt payment method to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "receipt payment method not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning receipt payment method",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/receipt/{receiptNumber}": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get receipt payment method by receipt number",
        "description": "Retrieves receipt payment methods with provided receipt number.",
        "operationId": "94a67cfa-e03e-4f04-a759-2d6e02cd90d3",
        "parameters": [
          {
            "name": "receiptNumber",
            "in": "path",
            "description": "The receipt number to filter receipt payment methods by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The receipt number to filter receipt payment methods by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get changed receipt payment methods",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get other receipt payment methods endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "c5e7a34a-3630-480a-912b-76e648b1bec4",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get receipt payment methods",
        "description": "Returns all receipt payment methods ordered by their receipt number and position.",
        "operationId": "e7c4c785-085c-43b8-b9b8-a9261920a223",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/export/{id}": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Get receipt payment method export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "f1a51a8e-a1d1-402a-9fea-3be2cf74d54c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPaymentMethod/export/{id}/download": {
      "get": {
        "tags": [
          "ReceiptPaymentMethod"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "b9fac9bf-519d-433a-8821-45a49a9cf453",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ez"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/export": {
      "post": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Trigger generation of an export for receipt psoitions",
        "description": "The status of the generation can be checked on the GET receiptPosition/export endpoint.",
        "operationId": "8ead9fc9-085e-49d0-af6b-6b6d62e4f0a6",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get exports for receipt positions",
        "description": "Returns all exports for receipt positions.",
        "operationId": "3e003906-1209-4957-8a88-9cca3f7104e1",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/{id}": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get receipt position by ID",
        "description": "Returns a receipt position by its unique GUID. If no receipt position exists with that GUID this returns 404 - Not found.",
        "operationId": "1586bd2f-e447-4086-9d75-dddad6f0d493",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the receipt position to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the receipt position to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "receipt position not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning receipt position",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/receipt/{receiptNumber}": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get receipt positions by receipt number",
        "description": "Retrieves receipt positions with provided receipt number.",
        "operationId": "49a567d4-1885-4e06-8217-9ca53dc3e0e6",
        "parameters": [
          {
            "name": "receiptNumber",
            "in": "path",
            "description": "The receipt number to filter receipt positions by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The receipt number to filter receipt positions by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get changed receipt positions",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get other receipt positions endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "38ef6b5a-c839-4dcb-b62d-ac2c2bef3f7d",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get receipt positions",
        "description": "Returns all receipt positions ordered by their receipt number and position.",
        "operationId": "65be42d1-c739-4fa9-83ab-8b900bf5c22d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/export/{id}": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Get receipt position export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9963bb2c-0647-4846-9235-b08c51b357e7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/receiptPosition/export/{id}/download": {
      "get": {
        "tags": [
          "ReceiptPosition"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "b95d2de2-211a-46a6-86ee-75fb9aac6b80",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ej"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedCoupon by customer number and status",
        "description": "Retrieves all charges of the redeemedCoupon with the provided status and customer number.",
        "operationId": "cb9ad97d-c571-40b0-8402-6b385b3cef0e",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the redeemedCoupon.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the redeemedCoupon.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the redeemedCoupon.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the redeemedCoupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/{id}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedCoupon by ID",
        "description": "Returns a charge of a redeemedCoupon by its unique GUID. If no redeemedCoupon exists with that GUID this returns 404 - Not found.",
        "operationId": "e48011ec-f9a1-4ada-b69d-ad0e911e3472",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the redeemedCoupon charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the redeemedCoupon charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RedeemedCoupon not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning redeemedCoupon",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/{number}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedCoupons by number",
        "description": "Retrieves all charges of the redeemedCoupon with the provided number.",
        "operationId": "89927d75-19bc-4b3a-a2eb-d0fb049c0dac",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the redeemedCoupon.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the redeemedCoupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/status/{status}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedCoupons by status",
        "description": "Retrieves all charges of redeemedCoupons with the provided status.",
        "operationId": "7792a783-41ec-4257-914e-568712b19083",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the redeemedCoupon.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the redeemedCoupon.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/changed/{from}/{to}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get changed redeemedCoupons",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get redeemedCoupons endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "0f07ff80-77c7-466c-9191-197c9e076cad",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedCoupons",
        "description": "Returns all charges of redeemedCoupons, ordered by their redeemedCoupon number.",
        "operationId": "2a6b913f-5091-493e-9f28-1736a166315f",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/export/{id}": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get redeemedcoupon export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "21b2b9b3-ebf3-41ef-8589-0efc6781d447",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/export/{id}/download": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "2a8443a0-d5d1-47f7-9b36-6fab53c95543",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedCoupon/export": {
      "get": {
        "tags": [
          "RedeemedCoupon"
        ],
        "summary": "Get exports for redeemed coupons",
        "description": "Returns all exports for redeemed coupons.",
        "operationId": "6f7b2195-1504-4fa9-a2f5-1288a5b48e61",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_5"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher": {
      "post": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Create redeemedVoucher",
        "description": "Creates a new redeemedVoucher and returns it in the response.",
        "operationId": "50deca37-17f7-4313-be47-627cd69daef3",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "create:gut_1"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedVouchers",
        "description": "Returns all charges of redeemedVouchers, ordered by their redeemedVoucher number.",
        "operationId": "663a5342-a4e8-41c1-b03e-01ab92762eb2",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/export": {
      "post": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Trigger generation of an export for redeemed vouchers",
        "description": "The status of the generation can be checked on the GET redeemedVoucher/export endpoint.",
        "operationId": "2494b455-8fb9-43de-afd7-1229ddb5233c",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get exports for redeemed vouchers",
        "description": "Returns all exports for redeemed vouchers.",
        "operationId": "ba324527-a786-4796-b181-d754edb22660",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedVoucher by customer number and status",
        "description": "Retrieves all charges of the redeemedVoucher with the provided status and customer number.",
        "operationId": "7927f972-0046-4019-a7e4-9d7a57262dfe",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the redeemedVoucher.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the redeemedVoucher.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the redeemedVoucher.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the redeemedVoucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/{id}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedVoucher by ID",
        "description": "Returns a charge of a redeemedVoucher by its unique GUID. If no redeemedVoucher exists with that GUID this returns 404 - Not found.",
        "operationId": "4a5b210a-3686-4c6d-b718-b8146344de55",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the redeemedVoucher charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the redeemedVoucher charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "RedeemedVoucher not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning redeemedVoucher",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/{number}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedVouchers by number",
        "description": "Retrieves all charges of the redeemedVoucher with the provided number.",
        "operationId": "a8b55680-ff46-4068-94ac-867cfb972ea4",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the redeemedVoucher.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the redeemedVoucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/status/{status}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedVouchers by status",
        "description": "Retrieves all charges of redeemedVouchers with the provided status.",
        "operationId": "64ecf3a4-8e7e-482f-82ee-7aa6b5cbf3c3",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the redeemedVoucher.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the redeemedVoucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/changed/{from}/{to}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get changed redeemedVouchers",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get redeemedVouchers endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "08f4932c-2db6-4167-9e35-8607303b5ed7",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/export/{id}": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Get redeemedvoucher export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "807213bd-f5b7-468d-a7a8-b476325bd2a7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/redeemedVoucher/export/{id}/download": {
      "get": {
        "tags": [
          "RedeemedVoucher"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "ef94b1de-0f61-40cd-ae74-de7ff9644664",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_1"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/export": {
      "post": {
        "tags": [
          "Sale"
        ],
        "summary": "Trigger generation of an export for sales",
        "description": "The status of the generation can be checked on the GET sale/export endpoint.",
        "operationId": "bbbe88db-b5b3-48eb-8dca-66810c50cdbe",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get exports for sales",
        "description": "Returns all exports for sales.",
        "operationId": "4c8d858a-f620-4870-8df0-1c1752f2d539",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/customer/{customerNumber}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get sales by customer number",
        "description": "Retrieves sales with provided customer number.",
        "operationId": "6c04bdf8-dfcd-4f06-92e1-e851d58f16f7",
        "parameters": [
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customer number to filter sales by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The customer number to filter sales by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get sale by ID",
        "description": "Returns a sale by its unique GUID. If no sale exists with that GUID this returns 404 - Not found.",
        "operationId": "2b22fda6-b6f9-4230-9cf9-27be66c76c63",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the sale to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the sale to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "sale not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning sale",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/receipt/{receiptNumber}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get sales by receipt number",
        "description": "Retrieves sales with provided receipt number.",
        "operationId": "1ba4350e-d8bd-4c05-b01d-aef5d35fc447",
        "parameters": [
          {
            "name": "receiptNumber",
            "in": "path",
            "description": "The receipt number to filter sales by.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The receipt number to filter sales by.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get changed sales",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get other sales endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "1f7e5044-4af3-4ea2-8c9a-39ec143c6938",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get sales",
        "description": "Returns all sales ordered by their receipt number and position.",
        "operationId": "65be42d1-c739-4fa9-83ab-8b900bf5c22d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/export/{id}": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Get sale export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a96f86be-cef2-40aa-b2e7-5eebc570b967",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/sale/export/{id}/download": {
      "get": {
        "tags": [
          "Sale"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "8c44b88d-c1fe-439a-a61c-85b7e0b26146",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vk"
            ]
          }
        ]
      }
    },
    "/api/v3/saleCancellationInstruction": {
      "post": {
        "tags": [
          "SaleCancellationInstruction"
        ],
        "summary": "Create sale cancellation instruction",
        "description": "Creates a new sale cancellation instruction.",
        "operationId": "2e49102a-3973-4f5f-b326-c48f6ba9891a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleCancellationInstruction.SaleCancellationInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleCancellationInstruction.SaleCancellationInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleCancellationInstruction.SaleCancellationInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_wvk_stor"
            ]
          }
        ]
      }
    },
    "/api/v3/saleInstruction": {
      "post": {
        "tags": [
          "SaleInstruction"
        ],
        "summary": "Create sale instruction",
        "description": "Creates a new sale instruction.",
        "operationId": "ebe8d60c-341a-4eaf-8521-719affe3b77c",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_wvk_vk"
            ]
          }
        ]
      }
    },
    "/api/v3/season/export": {
      "post": {
        "tags": [
          "Season"
        ],
        "summary": "Trigger generation of an export for seasons",
        "description": "The status of the generation can be checked on the GET season/export endpoint.",
        "operationId": "45628677-a049-4369-b8ee-16588959c2ef",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get exports for seasons",
        "description": "Returns all exports for seasons.",
        "operationId": "8b2e9802-b85d-4d82-ba72-866544b1e354",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season/{id}": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get season by ID",
        "description": "Returns a season by its unique GUID. If no season exists with that GUID this returns 404 - Not found.",
        "operationId": "47263d1c-f9c9-4fa3-9ee0-b38c1f622531",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the season to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the season to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Season not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning season",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season/{number}": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get season by number",
        "description": "Retrieves the season by its primary key. The primary key of a season is its number field.",
        "operationId": "8dc18cfd-69f4-4c40-9c4b-df341bfb003c",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the season. Can be found as number field in a season object or as SeasonNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the season. Can be found as number field in a season object or as SeasonNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get changed seasons",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get seasons endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "cdb75772-4902-49fc-a425-46bc1c70fcea",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get seasons",
        "description": "Returns all seasons ordered by their season number.",
        "operationId": "974514d4-bdc7-4eba-9a83-17071d0249d2",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season/export/{id}": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Get season export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "ac09ea5d-0b19-4639-9a06-cbde3841e9d4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/season/export/{id}/download": {
      "get": {
        "tags": [
          "Season"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "5cfbe6d2-c158-4c80-82f8-a050933571e3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:sai"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/export": {
      "post": {
        "tags": [
          "Selection"
        ],
        "summary": "Trigger generation of an export for selections",
        "description": "The status of the generation can be checked on the GET selection/export endpoint.",
        "operationId": "9e436e50-c565-4315-9c7d-7ebfe3c53762",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get exports for selections",
        "description": "Returns all exports for selections.",
        "operationId": "f0de1a1b-bc0c-4ae4-8e8b-f19403d146c3",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/{id}": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get selection by ID",
        "description": "Returns a selection by its unique GUID. If no selection exists with that GUID this returns 404 - Not found.",
        "operationId": "472360bd-64cb-4607-bfa9-13c2a55c6083",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the selection to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the selection to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Selection not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning selection",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/status/{status}/articleSize/{articleSizeNumber}": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get selections by status and articlesize number",
        "description": "Retrieves the selection by the provided status and articlesize number.",
        "operationId": "1f684981-76fe-4275-b653-a80429168f5f",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the selection.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The status of the selection.",
              "format": "int32"
            }
          },
          {
            "name": "articleSizeNumber",
            "in": "path",
            "description": "The articleSizeNumber of the selection.",
            "required": true,
            "schema": {
              "type": "number",
              "description": "The articleSizeNumber of the selection.",
              "format": "double"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get changed selections",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get selections endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "68b01b25-2c04-406b-85c7-05a18e1f68e6",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get selections",
        "description": "Returns all selections ordered by their selection number.",
        "operationId": "03f85ba8-a81c-4f3b-9c88-42f43ad3ad79",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/export/{id}": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Get selection export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "f5e577fc-f77b-4a40-b0ab-f41e308a71e1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/selection/export/{id}/download": {
      "get": {
        "tags": [
          "Selection"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "81211c04-5ecb-47ca-9360-50ad1b774390",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:aw"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/export": {
      "post": {
        "tags": [
          "Shape"
        ],
        "summary": "Trigger generation of an export for shapes",
        "description": "The status of the generation can be checked on the GET shape/export endpoint.",
        "operationId": "3130970b-204c-4ac9-a14c-eab31f57d6e5",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get exports for shapes",
        "description": "Returns all exports for shapes.",
        "operationId": "b5b451d5-acc3-408d-b43b-7a10b9d67027",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:art"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/{id}": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get shape by ID",
        "description": "Returns a shape by its unique GUID. If no shape exists with that GUID this returns 404 - Not found.",
        "operationId": "eee7e3e8-3df8-4575-b567-577ace5b3c70",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the shape to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the shape to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Shape not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning shape",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/{number}": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get shape by number",
        "description": "Retrieves the shape by its primary key. The primary key of a shape is its number field.",
        "operationId": "7f58b14d-d4b3-4016-ac6e-d3b5b495f38f",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the shape. Can be found as number field in a shape object or as shapeNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the shape. Can be found as number field in a shape object or as shapeNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get changed shapes",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get shapes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "28918cbd-98e5-4f56-afab-fdf0f456747d",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shape": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get shapes",
        "description": "Returns all shapes ordered by their shape number.",
        "operationId": "c3109055-9140-4cad-873f-a2ab91aac0cd",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/export/{id}": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Get shape export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "9bacef4a-1fd0-4561-ac49-ea8796b14570",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shape/export/{id}/download": {
      "get": {
        "tags": [
          "Shape"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "b31b7a7a-fbee-4283-a536-b2aabe9604d2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:frm"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/export": {
      "post": {
        "tags": [
          "Shipment"
        ],
        "summary": "Trigger generation of an export for shipments",
        "description": "The status of the generation can be checked on the GET shipment/export endpoint.",
        "operationId": "fd8796a3-d4a3-49ad-9093-12a9dc0cbe77",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get exports for shipments",
        "description": "Returns all exports for shipments.",
        "operationId": "c62ac2ee-ab1f-42db-854b-0753db9e33e5",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get shipment by ID",
        "description": "Returns a shipment by its unique GUID. If no shipment exists with that GUID this returns 404 - Not found.",
        "operationId": "d5b6bbf9-e429-4dcc-8cc2-970a6839c258",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the shipment to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the shipment to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Shipment not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning shipment",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/externalOrderNumber/{externalOrderNumber}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get shipment by external order number of a web order",
        "description": "Retrieves the shipments of a web order by its external order number.",
        "operationId": "5e557879-9bd9-4c18-b4d6-9af07e9cfa65",
        "parameters": [
          {
            "name": "externalOrderNumber",
            "in": "path",
            "description": "External order number of a web order.",
            "schema": {
              "type": "string",
              "description": "External order number of a web order.",
              "nullable": true
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get changed shipment",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "b8b2dce1-35d6-47ae-bdbd-ab07031d854a",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get shipment",
        "description": "Returns all shipment ordered by their shipment number.",
        "operationId": "e48e66f4-a8f9-4f59-9133-84bb0b6bedf5",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/export/{id}": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Get shipment export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a378e045-6d4a-4f40-8e6f-ac10fe292df2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipment/export/{id}/download": {
      "get": {
        "tags": [
          "Shipment"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "fffbf332-7881-4618-ab2b-2d05f2886dcc",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:paket"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/export": {
      "post": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Trigger generation of an export for shipment options",
        "description": "The status of the generation can be checked on the GET shipmentOption/export endpoint.",
        "operationId": "67501099-4ec8-4a62-b97d-cfa0b18bd669",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get exports for shipment options",
        "description": "Returns all exports for shipment options.",
        "operationId": "56eab982-06e1-4d6f-a952-9ee53a274867",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/{id}": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get shipment option by ID",
        "description": "Returns a shipment option by its unique GUID. If no shipment option exists with that GUID this returns 404 - Not found.",
        "operationId": "9b449c67-e4e2-4b6e-b816-76dfa4d4ab0d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the shipment option to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the shipment option to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Shipment option not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning shipment option",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/{number}": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get shipment option by number",
        "description": "Retrieves the shipment option by its primary key. The primary key of a shipment option is its number field.",
        "operationId": "3a4c1045-044a-4054-a975-832ee914a20c",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the shipment option. Can be found as number field in a shipment option object or as ShipmentOptionNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the shipment option. Can be found as number field in a shipment option object or as ShipmentOptionNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/changed/{from}/{to}": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get changed shipment options",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get shipment options endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "fb4d4350-b936-4472-83bc-f17690a7dbb0",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get shipment options",
        "description": "Returns all shipment options ordered by their shipment option number.",
        "operationId": "5d5651e6-7616-41b1-aab8-2a9b8129e285",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/export/{id}": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Get shipmentoption export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "c38237b1-8a53-4baf-87e2-91feaa7cee9d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shipmentOption/export/{id}/download": {
      "get": {
        "tags": [
          "ShipmentOption"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "85ba0c11-714c-4c9e-9ad8-bbc2ec5122ad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:va"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/export": {
      "post": {
        "tags": [
          "Shop"
        ],
        "summary": "Trigger generation of an export for shops",
        "description": "The status of the generation can be checked on the GET shop/export endpoint.",
        "operationId": "4d7e92c0-e7dc-4ce6-9ffa-4dfb486c99ff",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get exports for shops",
        "description": "Returns all exports for shops.",
        "operationId": "8dd23f4e-00c4-4677-95e6-7daca4e59e75",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop by ID",
        "description": "Returns a shop by its unique GUID. If no shop exists with that GUID this returns 404 - Not found.",
        "operationId": "489628ef-4191-4c8b-9807-28ba1afc7d10",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the shop to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the shop to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Shop not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning shop",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/{number}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop by number",
        "description": "Retrieves the shop by its primary key. The primary key of a shop is its number field.",
        "operationId": "8070933f-9d72-420e-a8d6-cede48b1bfbd",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the shop. Can be found as number field in a shop object or as ShopNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the shop. Can be found as number field in a shop object or as ShopNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get changed shops",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get shops endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "c7c3efa8-1649-47af-ae33-414261ad6133",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shops",
        "description": "Returns all shops ordered by their shop number.",
        "operationId": "8e28b203-441e-431c-8dfa-ae0c48631e9e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/export/{id}": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Get shop export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "79c207b2-cca2-443e-a38f-20bd077b02bf",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/shop/export/{id}/download": {
      "get": {
        "tags": [
          "Shop"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "fed1c501-761f-4841-9426-d6f124bbdc53",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:shop"
            ]
          }
        ]
      }
    },
    "/api/v3/size/export": {
      "post": {
        "tags": [
          "Size"
        ],
        "summary": "Trigger generation of an export for sizes",
        "description": "The status of the generation can be checked on the GET size/export endpoint.",
        "operationId": "9fe6e430-1193-4f92-a037-ca707c44dd6b",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get exports for sizes",
        "description": "Returns all exports for sizes.",
        "operationId": "0269d82e-bea2-46dc-be38-49dd90533186",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size/{id}": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get size by ID",
        "description": "Returns a size by its unique GUID. If no size exists with that GUID this returns 404 - Not found.",
        "operationId": "ea003b3f-838d-43a7-94e5-e491edeb1ec4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the size to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the size to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Size not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning size",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size/sizeRange/{sizeRangeNumber}": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get sizes by sizerange number",
        "description": "Retrieves all sizes by sizerange number.",
        "operationId": "cd1d18c0-4dec-4df0-abfd-369bbafe1b46",
        "parameters": [
          {
            "name": "sizeRangeNumber",
            "in": "path",
            "description": "The number of the sizerange to filter by. Can be found as number field in a sizerange object or as sizeRangeNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the sizerange to filter by. Can be found as number field in a sizerange object or as sizeRangeNumber if referenced from another entity.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get changed sizes",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get sizes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "1bbca6e9-e3bc-44de-ba2e-d53db94b5365",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get sizes",
        "description": "Returns all sizes ordered by their size number.",
        "operationId": "9e4ff6b6-031b-42da-9363-2f8861554e58",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size/export/{id}": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Get size export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a56e6e22-f894-4b93-a28a-9b4bee871b1b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/size/export/{id}/download": {
      "get": {
        "tags": [
          "Size"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "9327cf8e-5cd8-4f04-a450-5866371e7fc4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:groe"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/export": {
      "post": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Trigger generation of an export for size groups",
        "description": "The status of the generation can be checked on the GET sizeGroup/export endpoint.",
        "operationId": "a5fa4e79-869a-411b-8895-9e159b81091f",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get exports for size groups",
        "description": "Returns all exports for size groups.",
        "operationId": "3dd08052-09ca-404d-ae9f-203f49eab14d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/{id}": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get sizeGroup by ID",
        "description": "Returns a sizeGroup by its unique GUID. If no sizeGroup exists with that GUID this returns 404 - Not found.",
        "operationId": "a428f067-0749-4f91-afd2-4e83f4ff2969",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the sizeGroup to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the sizeGroup to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "SizeGroup not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning sizeGroup",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/{number}": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get sizeGroup by number",
        "description": "Retrieves the sizeGroup by its primary key. The primary key of a sizeGroup is its number field.",
        "operationId": "a9dd4edb-e4c1-4b0d-945f-7c5753842e8a",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the sizeGroup. Can be found as number field in a sizeGroup object or as sizeGroupNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the sizeGroup. Can be found as number field in a sizeGroup object or as sizeGroupNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/changed/{from}/{to}": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get changed sizeGroups",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get sizeGroups endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "3f0a5f98-91db-4989-a97c-5dbf973971a8",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get sizeGroups",
        "description": "Returns all sizeGroups ordered by their sizeGroup number.",
        "operationId": "18f6614b-8d8e-4bca-aea5-f10148d338c0",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/export/{id}": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Get sizegroup export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a8e63cf3-fa8c-460b-a794-4d4dba6d53a7",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeGroup/export/{id}/download": {
      "get": {
        "tags": [
          "SizeGroup"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "13373a16-f6e1-4e8c-a8bc-2bf986c3213c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:grgrp"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/export": {
      "post": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Trigger generation of an export for size ranges",
        "description": "The status of the generation can be checked on the GET sizeRange/export endpoint.",
        "operationId": "6479eedf-b3fc-4572-9940-a95693381f90",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get exports for size ranges",
        "description": "Returns all exports for size ranges.",
        "operationId": "7285ea9f-0231-4a90-a8ba-76b9e912cd69",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/{id}": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get sizeRange by ID",
        "description": "Returns a sizeRange by its unique GUID. If no sizeRange exists with that GUID this returns 404 - Not found.",
        "operationId": "4cac0803-564b-487e-943d-42c048a70bc1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the sizeRange to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the sizeRange to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "SizeRange not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning sizeRange",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/{number}": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get sizeRange by number",
        "description": "Retrieves the sizeRange by its primary key. The primary key of a sizeRange is its number field.",
        "operationId": "5fc83488-8cbc-4306-afce-2442c30614b0",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the sizeRange. Can be found as number field in a sizeRange object or as sizeRangeNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the sizeRange. Can be found as number field in a sizeRange object or as sizeRangeNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/changed/{from}/{to}": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get changed sizeRanges",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get sizeRanges endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "60fbb70b-af8c-4b64-a9ec-30cf837293d4",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get sizeRanges",
        "description": "Returns all sizeRanges ordered by their sizeRange number.",
        "operationId": "e7a77af9-ee74-4470-881f-1647cd8afab1",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/export/{id}": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Get sizerange export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "2d24579f-16f4-4a4a-8ae0-e20a14c24a4a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/sizeRange/export/{id}/download": {
      "get": {
        "tags": [
          "SizeRange"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "d02f1b73-c734-43a3-8211-4ec428db8d68",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gr"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/export": {
      "post": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Trigger generation of an export for special prices",
        "description": "The status of the generation can be checked on the GET specialPrice/export endpoint.",
        "operationId": "136d83a2-4858-4721-a338-67cda2051bf8",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get exports for special prizes",
        "description": "Returns all exports for special prices.",
        "operationId": "ca15b5cf-f4f1-4593-9d0a-f03f0013e545",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/articleSize/{articleSizeId}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special price by article size id",
        "description": "Returns a special price for the article size id. If no special price exists for that article size this returns 404 - Not found.",
        "operationId": "8ae57d92-8975-4430-aed4-1b96b435774e",
        "parameters": [
          {
            "name": "articleSizeId",
            "in": "path",
            "description": "The GUID of the article size to return special prices for.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the article size to return special prices for.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Special price not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning special price",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/articleSize/{articleSizeNumber}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special price by article size number",
        "description": "Returns a special price for the article size number. If no special price exists for that article size this returns 404 - Not found.",
        "operationId": "c1be3c83-5d03-497f-8213-fbc36c7561ec",
        "parameters": [
          {
            "name": "articleSizeNumber",
            "in": "path",
            "description": "The number of the article size to return special prices for.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "The number of the article size to return special prices for.",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Special price not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning special price",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/branch/{branch}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special prices by branch",
        "description": "Returns all special price by branch ordered by primary key.",
        "operationId": "011cfef9-81f3-4577-b4e1-d38f365a12fc",
        "parameters": [
          {
            "name": "branch",
            "in": "path",
            "description": "Number of the branch to return special prices for.",
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Number of the branch to return special prices for.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/{id}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special price by ID",
        "description": "Returns a special price by its unique GUID. If no special price exists with that GUID this returns 404 - Not found.",
        "operationId": "e666484b-1c60-4a08-b698-fc43b7556bf3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the special price to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the special price to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Special price not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning special price",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/webArticle/{webArticleId}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special prices by web article",
        "description": "Returns all special price by web article ordered by primary key.",
        "operationId": "6c9a500d-1e41-40f3-a9b0-e3512fecee54",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article to return special prices for.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Id of the web article to return special prices for.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/webArticleSize/{WebArticleSizeId}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special price by web article size",
        "description": "Returns a special price for the webarticle size. If no special price exists for that web article size this returns 404 - Not found.",
        "operationId": "9c8ea2c9-cd25-49fd-aebe-a449b9ceb5ec",
        "parameters": [
          {
            "name": "webArticleSizeId",
            "in": "path",
            "description": "The GUID of the web article size to return special prices for.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article size to return special prices for.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Special price not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning special price",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/changed/{from}/{to}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get changed special price",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "56b98fa9-5bd3-4018-b03a-399aed6c1aac",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get special price",
        "description": "Returns all special price ordered by their special price number.",
        "operationId": "4072cfe4-d5e9-4f3d-a4ee-1e859a23cf2e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/export/{id}": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Get specialprice export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "39307e27-e215-4ae1-9044-5040cbccc18a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/specialPrice/export/{id}/download": {
      "get": {
        "tags": [
          "SpecialPrice"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "615c9cd2-432c-4ffe-92db-f0e9fe37d594",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vp"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/export": {
      "post": {
        "tags": [
          "Staff"
        ],
        "summary": "Trigger generation of an export for staff",
        "description": "The status of the generation can be checked on the GET staff/export endpoint.",
        "operationId": "0e4f2996-5eaf-48cd-b991-6ba6b42a5495",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get exports for articles",
        "description": "Returns all exports for articles.",
        "operationId": "47709861-b8d2-45c2-8339-a0cfc7fb5748",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/{id}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get staff by ID",
        "description": "Returns a staff by its unique GUID. If no staff exists with that GUID this returns 404 - Not found.",
        "operationId": "97df33f8-424f-4bf8-9b05-48fbb72afae6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the staff to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the staff to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Staff not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning staff",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/{number}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get staff by number",
        "description": "Retrieves the staff by its primary key. The primary key of a staff is its number field.",
        "operationId": "358d38a9-2e96-4568-b39e-07f3b4fc9420",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the staff. Can be found as number field in a staff object or as StaffNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the staff. Can be found as number field in a staff object or as StaffNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get changed staff",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get staff endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "2bdcef33-ef0f-4ec6-9773-716a429ab226",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get staff",
        "description": "Returns all staff ordered by their staff number.",
        "operationId": "7f06df6e-46f0-4d1b-bbb2-13f28610e83b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/export/{id}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Get staff export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "509ed90a-aba8-4332-88cf-2f6c4406c462",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/staff/export/{id}/download": {
      "get": {
        "tags": [
          "Staff"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "4576fdf6-1151-4b74-ac1f-e7c925fb2a56",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:pers"
            ]
          }
        ]
      }
    },
    "/api/v3/stocktakingInstruction": {
      "post": {
        "tags": [
          "StocktakingInstruction"
        ],
        "summary": "Create stocktaking instruction",
        "description": "Creates a new stocktaking instruction.",
        "operationId": "e35f5322-d7b4-4ec6-b672-98b4c28bf90f",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_ia"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/export": {
      "post": {
        "tags": [
          "Supplier"
        ],
        "summary": "Trigger generation of an export for suppliers",
        "description": "The status of the generation can be checked on the GET supplier/export endpoint.",
        "operationId": "5f20c7f8-49f0-4bb0-981e-c354089d56aa",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get exports for suppliers",
        "description": "Returns all exports for suppliers.",
        "operationId": "6a534a06-0615-46ef-a847-2d3a29aecc7c",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get supplier by ID",
        "description": "Returns a supplier by its unique GUID. If no supplier exists with that GUID this returns 404 - Not found.",
        "operationId": "0c85a17d-c1a3-4465-8f5e-e3b23fb20b63",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the supplier to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the supplier to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Supplier not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning supplier",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/{number}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get supplier by number",
        "description": "Retrieves the supplier by its primary key. The primary key of a supplier is its number field.",
        "operationId": "9612681c-2ee2-4d50-9e3d-cc580b97bf56",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the supplier. Can be found as number field in a supplier object or as SupplierNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the supplier. Can be found as number field in a supplier object or as SupplierNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get changed suppliers",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get suppliers endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "732ef925-89ed-4813-b450-3b0b39748749",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get suppliers",
        "description": "Returns all suppliers ordered by their supplier number.",
        "operationId": "c597f023-0fbe-4015-8c33-356e1f32445e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/export/{id}": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Get supplier export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "32ff922a-0796-4edf-a3c1-2d34b2e21ea4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplier/export/{id}/download": {
      "get": {
        "tags": [
          "Supplier"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "41e5beae-b1f8-4bc9-b8bd-39141b38f5a0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn/export": {
      "post": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Trigger generation of an export for supplier returns",
        "description": "The status of the generation can be checked on the GET supplierReturn/export endpoint.",
        "operationId": "1fd93b7e-1c83-417b-8f19-00feecb348eb",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Get exports for supplier returns",
        "description": "Returns all exports for supplier returns.",
        "operationId": "9d602f86-01f5-4a82-8110-220e24be336e",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn/{id}": {
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Get supplier return by ID",
        "description": "Returns a supplier return by its unique GUID. If no supplier return exists with that GUID this returns 404 - Not found.",
        "operationId": "9c45e796-5fb4-4e9e-bbf0-88a1cb1476ec",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the supplier return to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the supplier return to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Supplier return not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning supplier return",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn/changed/{from}/{to}": {
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Get changed supplier return",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "eba6e37f-fa13-42e0-a1c9-b1d3cb0fbba3",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn": {
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Get supplier return",
        "description": "Returns all supplier return ordered by their supplier return number.",
        "operationId": "88cf5a29-9df0-4418-99f6-6d4d539f8f8d",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn/export/{id}": {
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Get supplier return export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "339c13c9-8aa7-416d-ab75-0d2db257f8ac",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturn/export/{id}/download": {
      "get": {
        "tags": [
          "SupplierReturn"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "e74a9395-8145-439e-a68d-afca71786c12",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnInstruction": {
      "post": {
        "tags": [
          "SupplierReturnInstruction"
        ],
        "summary": "Create supplierReturn instruction",
        "description": "Creates a new supplier return instruction.",
        "operationId": "4f8fbde5-c1f5-4ef9-8c0b-d8a2882023ec",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SupplierReturnInstruction.SupplierReturnInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SupplierReturnInstruction.SupplierReturnInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.SupplierReturnInstruction.SupplierReturnInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_lr"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/export": {
      "post": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Trigger generation of an export for supplier return reasons",
        "description": "The status of the generation can be checked on the GET supplierReturnReason/export endpoint.",
        "operationId": "8b43daf6-d157-4bfb-94d4-63328b36a42d",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get exports for supplier return reasons",
        "description": "Returns all exports for supplier return reasons.",
        "operationId": "5c2a035d-00c1-457e-9c55-0d5a9480393a",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/{id}": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get supplier return reason by ID",
        "description": "Returns a supplier return reason by its unique GUID. If no supplier return reason exists with that GUID this returns 404 - Not found.",
        "operationId": "fadd494d-c145-4db0-a27c-5c292070795d",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the supplier return reason to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the supplier return reason to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Supplier return reason not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning supplier return reason",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/{number}": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get supplier return reason by number",
        "description": "Retrieves the supplier return reason by its primary key. The primary key of a supplier return reason is its number field.",
        "operationId": "da4fc135-2709-49d7-bfb4-2e2897cb5200",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the supplier return reason. Can be found as number field in a supplier return reason object or as supplierReturnReasonNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the supplier return reason. Can be found as number field in a supplier return reason object or as supplierReturnReasonNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/changed/{from}/{to}": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get changed supplier return reasons",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get supplierReturnReasons endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "2ea17979-b481-46b3-a5eb-c5f6688c0738",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get supplier return reasons",
        "description": "Returns all supplier return reasons ordered by their number.",
        "operationId": "91caaf27-6ff1-404c-b621-4c8e5121ea98",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/export/{id}": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Get supplierreturnreason export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "ed60eaed-a0e9-471e-a2c1-3820d373f754",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:txt_lief_ret"
            ]
          }
        ]
      }
    },
    "/api/v3/supplierReturnReason/export/{id}/download": {
      "get": {
        "tags": [
          "SupplierReturnReason"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "9d80ddbb-b7f6-45d0-aebd-f8a569bc1dfa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:lief"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/export": {
      "post": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Trigger generation of an export for target groups",
        "description": "The status of the generation can be checked on the GET targetGroup/export endpoint.",
        "operationId": "0ef0b54c-ba8e-43e6-a9f0-9b39656cc49f",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get exports for target groups",
        "description": "Returns all exports for target groups.",
        "operationId": "7f8009f7-7655-43f3-a9ec-f6613dbc111c",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/{id}": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get target group by ID",
        "description": "Returns a target group by its unique GUID. If no target group exists with that GUID this returns 404 - Not found.",
        "operationId": "4cc5368f-65a4-4566-81f7-af5f2bcc7e1b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the target group to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the target group to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Target group not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning target group",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/{number}": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get target group by number",
        "description": "Retrieves the target group by its primary key. The primary key of a target group is its number field.",
        "operationId": "594d89ca-aef5-47dc-b527-e591dc778649",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the target group. Can be found as number field in a target group object or as targetGroupNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the target group. Can be found as number field in a target group object or as targetGroupNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/changed/{from}/{to}": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get changed target groups",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get target groups endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "a18874a9-c67b-414a-b24c-2f9a13d431c4",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get target groups",
        "description": "Returns all target groups ordered by their target group number.",
        "operationId": "fa9b2f64-efbd-4eda-bbdf-fa141916f8e3",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/export/{id}": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Get targetgroup export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "4f0394cb-fcd3-41d6-8ecd-4d780779caf2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/targetGroup/export/{id}/download": {
      "get": {
        "tags": [
          "TargetGroup"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "a4e1ab0d-50ce-4f3d-a411-b583ff62da4c",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ziel"
            ]
          }
        ]
      }
    },
    "/api/v3/transferInstruction": {
      "post": {
        "tags": [
          "TransferInstruction"
        ],
        "summary": "Create transfer instruction",
        "description": "Creates a new transfer instruction.",
        "operationId": "bc60450b-2c7d-4bc6-bc46-ce5aff106c5a",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.TransferInstruction.TransferInstructionCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.TransferInstruction.TransferInstructionCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.TransferInstruction.TransferInstructionCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:vb_ta"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/export": {
      "post": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Trigger generation of an export for union categories",
        "description": "The status of the generation can be checked on the GET unionCategory/export endpoint.",
        "operationId": "66ebc881-9246-4782-b951-718d11a01cf8",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get exports for union categories",
        "description": "Returns all exports for union categories.",
        "operationId": "64a136a2-adf3-4b36-a915-2718471a64cb",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/{id}": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get union category by ID",
        "description": "Returns a union category by its unique GUID. If no union category exists with that GUID this returns 404 - Not found.",
        "operationId": "20fdc70f-a2d2-4f19-90d9-2223cddadd93",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the union category to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the union category to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Union category not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning union category",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/{number}": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get union category by number",
        "description": "Retrieves the union category by its primary key. The primary key of a union category is its number field.",
        "operationId": "7fe0d911-87df-4864-88c5-c4da27f02642",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the union category. Can be found as number field in a union category object or as UnionCategoryNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the union category. Can be found as number field in a union category object or as UnionCategoryNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/changed/{from}/{to}": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get changed union category",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "37704a03-39b8-466f-808c-59ec482cac8f",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get union category",
        "description": "Returns all union category ordered by their union category number.",
        "operationId": "113fa419-abea-434c-9d81-fc5d21d1f560",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/export/{id}": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Get unioncategory export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "99be4092-1678-43d1-869e-3967d6335daa",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/unionCategory/export/{id}/download": {
      "get": {
        "tags": [
          "UnionCategory"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "16c8cef3-34d9-4843-aef0-c09ddb172bf6",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:vwgr"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/export": {
      "post": {
        "tags": [
          "Voucher"
        ],
        "summary": "Trigger generation of an export for vouchers",
        "description": "The status of the generation can be checked on the GET voucher/export endpoint.",
        "operationId": "34522952-1c1d-4c86-b587-a069eae6014f",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get exports for voucher",
        "description": "Returns all exports for voucher.",
        "operationId": "1f3b2e0e-413b-4b80-aad2-14f716cefb06",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/customer/{customerNumber}/status/{status}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher by customer number and status",
        "description": "Retrieves all charges of the voucher with the provided status and customer number.",
        "operationId": "44de2d2f-6556-4a98-91b5-c91f5127ac4f",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the voucher.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the voucher.",
              "format": "int32"
            }
          },
          {
            "name": "customerNumber",
            "in": "path",
            "description": "The customerNumber of the voucher.",
            "schema": {
              "maximum": 99999999,
              "minimum": 0,
              "type": "integer",
              "description": "The customerNumber of the voucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/{id}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher by ID",
        "description": "Returns a charge of a voucher by its unique GUID. If no voucher exists with that GUID this returns 404 - Not found.",
        "operationId": "40808e69-179f-498d-9373-0630ddcbce14",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the voucher charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the voucher charge to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Voucher not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning voucher",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/code/{internetCode}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher by internet code",
        "description": "Returns a charge of a voucher by its internet code. If no voucher exists with that internet code this returns 404 - Not found.",
        "operationId": "5126ebb5-cc5b-4c93-942f-f5e641809ee1",
        "parameters": [
          {
            "name": "internetCode",
            "in": "path",
            "description": "The redeemable code of the voucher charge to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The redeemable code of the voucher charge to return."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Voucher not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning voucher",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/{number}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher by number",
        "description": "Retrieves all charges of the voucher with the provided number.",
        "operationId": "3ba0a87c-0661-4c64-b4fb-b65ce45a741b",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the voucher.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the voucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/status/{status}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher by status",
        "description": "Retrieves all charges of vouchers with the provided status.",
        "operationId": "ceefb2e6-749d-4427-9683-d11a75e45099",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "The status of the voucher.",
            "schema": {
              "maximum": 1,
              "minimum": 0,
              "type": "integer",
              "description": "The status of the voucher.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/changed/{from}/{to}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get changed vouchers",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get vouchers endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "69763227-2824-4629-86e8-ae5c60063c2d",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get vouchers",
        "description": "Returns all charges of vouchers, ordered by their voucher number.",
        "operationId": "3dcfa636-7d1a-448a-90dd-67eb0bdce86f",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/export/{id}": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Get voucher export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "de715030-b2e9-4665-8a25-0792749af8be",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/export/{id}/download": {
      "get": {
        "tags": [
          "Voucher"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "3426d21d-b64c-451d-86a5-408e012f9957",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/{voucherId}/reserve": {
      "post": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Create voucherReservation",
        "description": "Creates a new voucherReservation and returns it in the response.",
        "operationId": "a53efa3b-68df-416d-a4ad-b7bc3a540169",
        "parameters": [
          {
            "name": "voucherId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.VoucherReservation.VoucherReservationCreate"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.VoucherReservation.VoucherReservationCreate"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.VoucherReservation.VoucherReservationCreate"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "create:gut_0"
            ]
          }
        ]
      }
    },
    "/api/v3/voucherReservation/export": {
      "post": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Trigger generation of an export for voucher reservations",
        "description": "The status of the generation can be checked on the GET voucherReservation/export endpoint.",
        "operationId": "cad6d37f-221a-4edc-9ba9-da638979a923",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Get exports for voucher reservations",
        "description": "Returns all exports for voucher reservations.",
        "operationId": "b5b451d5-acc3-408d-b43b-7a10b9d67027",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      }
    },
    "/api/v3/voucherReservation/{id}": {
      "delete": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Delete voucherReservation",
        "description": "Deletes a voucherReservation.",
        "operationId": "c85ce8b9-5b95-41c3-b045-a6d425292988",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique id of the voucherReservation",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "Unique id of the voucherReservation",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          }
        },
        "security": [
          {
            "Bearer": [
              "delete:voucherreservation"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Get voucherReservation by ID",
        "description": "Returns a voucherReservation by its unique GUID. If no voucherReservation exists with that GUID this returns 404 - Not found.",
        "operationId": "74e1557c-a985-4351-b7d6-db9cd09d12c0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the voucherReservation to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the voucherReservation to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "VoucherReservation not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning voucherReservation",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      }
    },
    "/api/v3/voucher/{voucherId}/reservation": {
      "get": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Get voucherReservations by voucherId",
        "description": "Retrieves all voucherReservations for the voucher with the provided id.",
        "operationId": "f8ebc1f5-9158-477b-8afa-7606aefa9f3d",
        "parameters": [
          {
            "name": "voucherId",
            "in": "path",
            "description": "The id of the voucher.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The id of the voucher.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      }
    },
    "/api/v3/voucherReservation/export/{id}": {
      "get": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Get voucherreservation export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a3f35de7-9f2a-4d13-a8bf-50fbaa375e8f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      }
    },
    "/api/v3/voucherReservation/export/{id}/download": {
      "get": {
        "tags": [
          "VoucherReservation"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "9856b6a1-23f3-4f8d-8c0c-9874a6055022",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:voucherreservation"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/export": {
      "post": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Trigger generation of an export for web articles",
        "description": "The status of the generation can be checked on the GET webArticle/export endpoint.",
        "operationId": "dd5031d8-dd8b-4b34-b08f-2a4dc7bf31de",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Get exports for web articles",
        "description": "Returns all exports for web articles.",
        "operationId": "24c7ded2-7837-4b1c-b690-d89366bbf005",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Get web articles",
        "description": "Returns all web articles ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "2b22fda6-b6f9-4230-9cf9-27be66c76c63",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/{id}": {
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Get web article by ID",
        "description": "Returns a web article by its unique GUID. If no web article exists with that GUID this returns 404 - Not found.",
        "operationId": "8feef6a0-2b37-47d9-b3d8-e9b569c25f54",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Get changed web articles",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web articles endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "610f117c-08be-4b3f-91b3-6d827feab0fe",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/export/{id}": {
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Get webarticle export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "d2c8894d-c56c-4dea-b276-9a55aa7a0c49",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/export/{id}/download": {
      "get": {
        "tags": [
          "WebArticle"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "b4464d38-8adb-49d9-ad36-f586d56367ce",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/export": {
      "post": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Trigger generation of an export for web article images",
        "description": "The status of the generation can be checked on the GET webArticleImage/export endpoint.",
        "operationId": "66c97ad3-ea42-4987-9ce7-5998bf587bee",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get exports for web article images",
        "description": "Returns all exports for web article images.",
        "operationId": "57577537-d9dc-4b4d-9117-859900ffb4c0",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get web article images",
        "description": "Returns all web article images ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "7b6dfe81-917b-4408-a235-4494d56d6a57",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article images.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web article images.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/{id}": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get web article image by ID",
        "description": "Returns a web article image by its unique GUID. If no web article exists with that GUID this returns 404 - Not found.",
        "operationId": "9929c143-dea0-43dd-a33e-fe928b4a9cc9",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article image to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article image to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article image not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article image",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/{webArticleId}/webArticleImages": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get web article images by web article id",
        "description": "Returns all web article images ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "477f1feb-0d4a-4df1-af97-50819d7826f4",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/webArticle/{webArticleId}": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get web article images by web article id",
        "description": "Returns all web article images ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "477f1feb-0d4a-4df1-af97-50819d7826f4",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get changed web article images",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web article images endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "14d666e8-54c0-45a0-9b14-e2a4d8e876e9",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article images.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web article images.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/export/{id}": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Get webarticleimage export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "dbbc548e-e021-4b28-97dc-bde5f436271b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleImage/export/{id}/download": {
      "get": {
        "tags": [
          "WebArticleImage"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "cae8fc23-9996-42ce-8425-fc71203e12cd",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwb"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/export": {
      "post": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Trigger generation of an export for web article properties",
        "description": "The status of the generation can be checked on the GET webArticleProperty/export endpoint.",
        "operationId": "a886965a-1cbb-4b59-bb91-5242ea023c00",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get exports for web article properties",
        "description": "Returns all exports for web article properties.",
        "operationId": "b5b451d5-acc3-408d-b43b-7a10b9d67027",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get web article properties",
        "description": "Returns all web article properties ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "0d9768b9-8519-4e7d-9847-c21b05232698",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article properties.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web article properties.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/{id}": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get web article property by ID",
        "description": "Returns a web article property by its unique GUID. If no web article exists with that GUID this returns 404 - Not found.",
        "operationId": "c2c1d744-22f3-45dd-9c04-be9cbbc56581",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article property to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article property to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article property not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article property",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/{webArticleId}/webArticleProperties": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get web article properties by web article id",
        "description": "Returns all web article properties ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "24281aac-c4a1-4431-b505-dddf36e8b365",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/webArticle/{webArticleId}": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get web article properties by web article id",
        "description": "Returns all web article properties ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "24281aac-c4a1-4431-b505-dddf36e8b365",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get changed web article properties",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web article properties endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "484a19df-f513-440b-bb71-040221a3ce14",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article properties.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web article properties.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/export/{id}": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Get webarticleproperty export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "bce78a7b-6bb3-4547-83df-e27f01bf4aca",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleProperty/export/{id}/download": {
      "get": {
        "tags": [
          "WebArticleProperty"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "2199f8ac-2a29-4d6b-917e-73cd52deb30b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_val"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/export": {
      "post": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Trigger generation of an export for web article property definitions",
        "description": "The status of the generation can be checked on the GET webArticlePropertyDefinition/export endpoint.",
        "operationId": "91b33a44-abf4-430d-9890-8cc8ef65b148",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Get exports for web article property definitions",
        "description": "Returns all exports for web article property definitions.",
        "operationId": "622db2ab-a6bd-415f-a9ef-c08001ec32db",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Get web article property definitions",
        "description": "Returns all web article property definitions ordered by their index.",
        "operationId": "79dc0707-0cf6-4fc1-86a3-37f7e5607be4",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article property definitions.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web article property definitions.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/{id}": {
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Get web article property definition by ID",
        "description": "Returns a web article property definition by its unique GUID. If no web article property definition exists with that GUID this returns 404 - Not found.",
        "operationId": "663e8560-ce1b-4d68-b837-0702a21345b1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article property definition to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article property definition to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article property definition not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article property definition",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Get changed web article property definitions",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web article property definitions endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "40919ad6-f7ec-4108-b229-0502196e742b",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article property definitions.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web article property definitions.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/export/{id}": {
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Get webarticlepropertydefinition export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "04e6c08d-574c-40cb-a88d-967d9ec6c012",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticlePropertyDefinition/export/{id}/download": {
      "get": {
        "tags": [
          "WebArticlePropertyDefinition"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "6a0cd0bd-6e64-44f6-81cc-603691d56b32",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwf_def"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/export": {
      "post": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Trigger generation of an export for web article sizes",
        "description": "The status of the generation can be checked on the GET webArticleSize/export endpoint.",
        "operationId": "5ebf2a26-b190-4d0d-84c7-65c503e9ceef",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get exports for web article sizes",
        "description": "Returns all exports for web article sizes.",
        "operationId": "fbccf9fc-98a6-4c77-82f7-23e5773a4640",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get web article sizes",
        "description": "Returns all web article sizes ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "85e5f1af-8305-4386-bf0b-b590e52abffe",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article sizes.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web article sizes.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/{id}": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get web article size by ID",
        "description": "Returns a web article size by its unique GUID. If no web article exists with that GUID this returns 404 - Not found.",
        "operationId": "a335266b-a624-4a24-b5ba-5ea763cd704b",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article size to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article size to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article size not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article size",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticle/{webArticleId}/webArticleSizes": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get web article sizes by web article id",
        "description": "Returns all web article sizes ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "7218be1c-830d-49b0-af39-eb34c599c513",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/webArticle/{webArticleId}": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get web article sizes by web article id",
        "description": "Returns all web article sizes ordered by their supplier number, category number, supplier article number and supplier color.",
        "operationId": "7218be1c-830d-49b0-af39-eb34c599c513",
        "parameters": [
          {
            "name": "webArticleId",
            "in": "path",
            "description": "Id of the web article.",
            "schema": {
              "type": "string",
              "description": "Id of the web article.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get changed web article sizes",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web article sizes endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "b6756c1a-8736-4b04-95b7-3c6bf4ff34ce",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web article sizes.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web article sizes.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/export/{id}": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Get webarticlesize export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "a3e8915c-7cc6-4003-81f4-ca5c1888da27",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webArticleSize/export/{id}/download": {
      "get": {
        "tags": [
          "WebArticleSize"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "d4082e08-8dd0-4381-98f8-36cee6b3652e",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artwg"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder": {
      "post": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Create weborder",
        "description": "Creates a new weborder and returns it in the response.",
        "operationId": "f73570cc-4ae5-444c-ad24-56dd05a63ac0",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderCreateDTO"
              }
            }
          }
        },
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          }
        },
        "security": [
          {
            "Bearer": [
              "create:ak"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get web order",
        "description": "Returns all web order ordered by their web order number.",
        "operationId": "5fe19cb8-ba2e-442a-b827-15196c480e64",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/export": {
      "post": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Trigger generation of an export for web orders",
        "description": "The status of the generation can be checked on the GET webOrder/export endpoint.",
        "operationId": "6bf77307-233f-4d6a-b732-fbfbbb1c5364",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get exports for web orders",
        "description": "Returns all exports for web orders.",
        "operationId": "c7f89de6-053d-448b-b5f6-3452462b0ff4",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/branch/{id}": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get web order by ID",
        "description": "Returns all web orders for the selected branch.",
        "operationId": "e41e133a-ef10-4bae-b936-fafff546fdb5",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The number of the branch to return web orders for.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "The number of the branch to return web orders for.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web order",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          },
          "404": {
            "description": "Web order not found"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/externalOrderNumber/{number}": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get web order by external order number",
        "description": "Retrieves the web order by its external web order number. The primary key of a web order is its number field.",
        "operationId": "f6c67255-4e4f-4580-b33b-571b1256bb67",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the web order. Can be found as number field in a web order object or as WebOrderNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The number of the web order. Can be found as number field in a web order object or as WebOrderNumber if referenced from another entity."
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/{id}": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get web order by ID",
        "description": "Returns a web order by its unique GUID. If no web order exists with that GUID this returns 404 - Not found.",
        "operationId": "98ededb1-924c-4970-8f2e-7c58c2d1ef1a",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web order to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web order to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web order not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web order",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get changed web order",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "a28e9cc6-c2e3-4967-97cf-3c6ced597ba5",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/export/{id}": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Get weborder export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "82f7f4c9-a77e-4d73-b194-5c912346f112",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/export/{id}/download": {
      "get": {
        "tags": [
          "WebOrder"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "7a9a35a0-340e-47b2-89c0-628faa77a976",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ak"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/export": {
      "post": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Trigger generation of an export for web order positions",
        "description": "The status of the generation can be checked on the GET webOrderPosition/export endpoint.",
        "operationId": "2784ee7b-b7c6-423b-b2be-f2decdd6d0d9",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get exports for web order positions",
        "description": "Returns all exports for web order positions.",
        "operationId": "f91eaf85-945b-466f-baa9-e3368f80a15b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/{id}": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order position by ID",
        "description": "Returns a web shop order position by its unique GUID. If no web shop order position exists with that GUID this returns 404 - Not found.",
        "operationId": "3621c698-3d5b-4b03-be08-5e293e4afaf8",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web shop order position to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web shop order position to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web shop order position not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web shop order position",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/webOrder/{webOrderId}": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order positions by web order id",
        "description": "Retrieves the web shop order position by web order id.",
        "operationId": "64e90d8f-16b1-475b-ac95-ec6847d8202b",
        "parameters": [
          {
            "name": "webOrderId",
            "in": "path",
            "description": "Id of the web order.",
            "schema": {
              "type": "string",
              "description": "Id of the web order.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/{webOrderId}/webOrderpositions": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order positions by web order id",
        "description": "Retrieves the web shop order position by web order id.",
        "operationId": "64e90d8f-16b1-475b-ac95-ec6847d8202b",
        "parameters": [
          {
            "name": "webOrderId",
            "in": "path",
            "description": "Id of the web order.",
            "schema": {
              "type": "string",
              "description": "Id of the web order.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/{webOrderNumber}": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order positions by web order number",
        "description": "Retrieves the web shop order position by its primary key. The primary key of a web shop order position is its number field.",
        "operationId": "3885b66a-1510-49c6-a124-e842cf24e86f",
        "parameters": [
          {
            "name": "webOrderNumber",
            "in": "path",
            "description": "Number of the web order.",
            "schema": {
              "type": "integer",
              "description": "Number of the web order.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrder/{webOrderNumber}/webOrderPositions": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order positions by web order number",
        "description": "Retrieves the web shop order position by its primary key. The primary key of a web shop order position is its number field.",
        "operationId": "3885b66a-1510-49c6-a124-e842cf24e86f",
        "parameters": [
          {
            "name": "webOrderNumber",
            "in": "path",
            "description": "Number of the web order.",
            "schema": {
              "type": "integer",
              "description": "Number of the web order.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get changed web shop order position",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get all endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "c636d9bf-238a-4af8-b48c-af2ba2d673bb",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get web shop order position",
        "description": "Returns all web shop order position ordered by their web shop order position number.",
        "operationId": "d4d46149-9f1e-4336-856a-2e87a9756452",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/export/{id}": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Get weborderposition export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "85f51adb-26c2-41d9-b89d-aa4d3ac7e30f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webOrderPosition/export/{id}/download": {
      "get": {
        "tags": [
          "WebOrderPosition"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "dd67ef9e-0e8a-4671-8710-ac4ab3cd80c2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:ap"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/export": {
      "post": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Trigger generation of an export for web payment options",
        "description": "The status of the generation can be checked on the GET webPaymentOption/export endpoint.",
        "operationId": "51b69e0b-8268-4c74-9537-7a01c0bbd519",
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get exports for web payment options",
        "description": "Returns all exports for web payment options.",
        "operationId": "8a187ee5-018a-48db-98ba-e6d7f2abceaf",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/{id}": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get web payment option by ID",
        "description": "Returns a web payment option by its unique GUID. If no web payment option exists with that GUID this returns 404 - Not found.",
        "operationId": "74941183-6511-4f24-adbd-004c83bc369f",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web payment option to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web payment option to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web payment option not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web payment option",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/{number}": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get web payment option by number",
        "description": "Retrieves the web payment option by its primary key. The primary key of a web payment option is its number field.",
        "operationId": "930d09a0-5261-4c85-8474-050d06af2673",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "The number of the web payment option. Can be found as number field in a web payment option object or as WebPaymentOptionNumber if referenced from another entity.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "The number of the web payment option. Can be found as number field in a web payment option object or as WebPaymentOptionNumber if referenced from another entity.",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get changed web payment options",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get web payment options endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "3931602a-895c-4cc6-b6c0-6f74554a3a8c",
        "parameters": [
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get web payment options",
        "description": "Returns all web payment options ordered by their web payment option number.",
        "operationId": "00a27861-4e52-4fd7-ba93-1f4da377520b",
        "parameters": [
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/export/{id}": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Get webpaymentoption export by ID",
        "description": "Returns a export by its unique GUID. If no export exists with that GUID this returns 404 - Not found.",
        "operationId": "5b1e0d21-574f-48cd-b303-0e6ff7ef16d3",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to return.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to return.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning export information",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webPaymentOption/export/{id}/download": {
      "get": {
        "tags": [
          "WebPaymentOption"
        ],
        "summary": "Download export",
        "description": "Redirects to a export file by its unique GUID using the 303 statuscode together with a location header.\r\nIf the export is not generated yet statuscode 404 will be returned.\r\n(Redirection potentially needs to be enabled clientside)",
        "operationId": "ca990b59-45a5-4420-bfa7-e0c5f43f7824",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the export to download",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the export to download",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "404": {
            "description": "Export not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "303": {
            "description": "See other location"
          }
        },
        "security": [
          {
            "Bearer": [
              "read:zb"
            ]
          }
        ]
      }
    },
    "/api/v3/webStock/branch/{branchNumber}/webArticle/{id}": {
      "get": {
        "tags": [
          "WebStock"
        ],
        "summary": "Get stock for web article with specific id",
        "description": "Returns a web article stock for a webarticle with unique GUID.",
        "operationId": "dba56826-b193-4e80-b8bf-e76b543c681b",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article to return stock for.",
            "schema": {
              "type": "string",
              "description": "The GUID of the web article to return stock for.",
              "format": "uuid"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webStock/branch/{branchNumber}/webArticleSize/{id}": {
      "get": {
        "tags": [
          "WebStock"
        ],
        "summary": "Get web article stock for a specific webarticle size ID",
        "description": "Returns a web article stock for a webarticle sizes unique GUID. If no web article size exists with that GUID this returns 404 - Not found.",
        "operationId": "2e93b93d-bcd3-4877-b502-77bbdc86b04e",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The GUID of the web article size to return stock for.",
            "required": true,
            "schema": {
              "minLength": 1,
              "type": "string",
              "description": "The GUID of the web article size to return stock for.",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "Web article not found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Successfully returning web article",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.SingleResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webStock/branch/{branchNumber}": {
      "get": {
        "tags": [
          "WebStock"
        ],
        "summary": "Get stock for web articles",
        "description": "Returns stock information for all web articles.",
        "operationId": "ebcb722d-6c8b-47fd-9a88-f5da266ac37a",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "schema": {
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    },
    "/api/v3/webStock/branch/{branchNumber}/changed/{from}/{to}": {
      "get": {
        "tags": [
          "WebStock"
        ],
        "summary": "Get changed web article stock",
        "description": "Retrieves all changes within the provided change ID range.\r\nChanges can be retrieved for up to 14 days before they are cleaned up.\r\nTherefore this endpoint is only suited for incremental synchronization.\r\nFor full snychronization use the get stock by branch number endpoint.\r\nFor how to handle data synchronization in general refer to the documentation section.",
        "operationId": "ff607e92-3654-4a13-a1ce-cd759653bc73",
        "parameters": [
          {
            "name": "branchNumber",
            "in": "path",
            "description": "Branch number of the web articles.",
            "required": true,
            "schema": {
              "maximum": 99999999,
              "minimum": 1,
              "type": "integer",
              "description": "Branch number of the web articles.",
              "format": "int32"
            }
          },
          {
            "name": "from",
            "in": "path",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "required": true,
            "schema": {
              "minimum": 0,
              "exclusiveMinimum": true,
              "type": "integer",
              "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
              "format": "int64"
            }
          },
          {
            "name": "to",
            "in": "path",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
              "format": "int64"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "schema": {
              "type": "string",
              "description": "Set the continuation token to from the previous request result to return the next page of results.",
              "format": "continuationToken",
              "nullable": true
            }
          },
          {
            "name": "resultsPerPage",
            "in": "query",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "schema": {
              "maximum": 100,
              "minimum": 1,
              "type": "integer",
              "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Microsoft.AspNetCore.Mvc.ProblemDetails"
                }
              }
            }
          },
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/api.Core.Models.ChangesResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
                }
              }
            }
          }
        },
        "security": [
          {
            "Bearer": [
              "read:artw"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Microsoft.AspNetCore.Mvc.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "PromotionSelectionCustomerDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "promotionNumber": {
            "type": "integer",
            "description": "* Kundenaktion Selektion Nummer\r\n* Promotion selection number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitstempel der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Kundenaktion Selektion Kunde\r\n* Promotion selection customer"
      },
      "PromotionSelectionDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Nummer\r\n* Number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name\r\n* Name",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitstempel der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          }
        },
        "additionalProperties": false,
        "description": "* Kundenaktion Selektion\r\n* Promotion selection"
      },
      "api.Contract.Article.ArticleDTO": {
        "type": "object",
        "properties": {
          "isActive": {
            "type": "boolean",
            "description": "* Makiert den Artikel als aktiv\r\n* Defines the article as active",
            "nullable": true
          },
          "imageName": {
            "type": "string",
            "description": "* Bildname für den Artikel\r\n* Imagename of the article",
            "nullable": true,
            "example": ""
          },
          "individualArticleNumber": {
            "type": "string",
            "description": "* Eigene Artikelnummer des Händlers\r\n* Individually given articlenumber by the retailer",
            "nullable": true,
            "example": ""
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis des Artikels\r\n* Purchase price of the article",
            "format": "double",
            "nullable": true
          },
          "firstPurchaseDate": {
            "type": "string",
            "description": "* Erstes Einkaufsdatum des Artikels\r\n* Date the article was first purchased",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "* Letzes Einkaufsdatum des Artikels\r\n* Date the article was last purchased",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "sizeType": {
            "type": "string",
            "description": "* Typ der Größen (z.B.: EU, US oder UK)\r\n* Typ for sizes (e.g.: EU, US or UK)",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "manufacturerNumber": {
            "type": "integer",
            "description": "* Hersteller Nummer (Lieferant Endpunkt)\r\n* Manufacturer number (Supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Informationen über den Artikel\r\n* Information about the article",
            "nullable": true,
            "example": ""
          },
          "articleFlag": {
            "type": "string",
            "description": "* Artikelkennzeichen\r\n* Article flag",
            "nullable": true,
            "example": ""
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Artikelnummer laut Lieferant\r\n* Atticlenumber given by the supplier",
            "nullable": true,
            "example": ""
          },
          "supplierColor": {
            "type": "string",
            "description": "* Farbbezeichnung laut Lieferant\r\n* Colorname given by the supplier",
            "nullable": true,
            "example": ""
          },
          "supplierSeason": {
            "type": "string",
            "description": "* Saison laut Lieferant\r\n* Season given by the supplier",
            "nullable": true,
            "example": ""
          },
          "supplierCategory": {
            "type": "string",
            "description": "* Warengruppe laut Lieferant\r\n* Category given by the supplier",
            "nullable": true,
            "example": ""
          },
          "isNOS": {
            "type": "boolean",
            "description": "* Kennzeichnet den Artikel als NOS\r\n* Flag that defines the article as NOS",
            "nullable": true
          },
          "number": {
            "type": "number",
            "description": "* Interne Artikelnummer\r\n* Internal article number",
            "format": "double",
            "nullable": true
          },
          "firstOrderDate": {
            "type": "string",
            "description": "* Erstes Orderdatum des Artikels\r\n* Date the article was first ordered",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "lastOrderDate": {
            "type": "string",
            "description": "* Letzes Orderdatum des Artikels\r\n* Date the article was last ordered",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "gender": {
            "type": "integer",
            "description": "* Geschlecht des Artikels\r\n* Gender of the article",
            "format": "int32",
            "nullable": true
          },
          "text1": {
            "type": "string",
            "description": "* Artikelbeschreibung 1\r\n* Article description 1",
            "nullable": true,
            "example": ""
          },
          "text2": {
            "type": "string",
            "description": "* Artikelbeschreibung 2\r\n* Article description 2",
            "nullable": true,
            "example": ""
          },
          "text3": {
            "type": "string",
            "description": "* Artikelbeschreibung 3\r\n* Article description 3",
            "nullable": true,
            "example": ""
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis des Artikels\r\n* Price the article sales for",
            "format": "double",
            "nullable": true
          },
          "firstSaleDate": {
            "type": "string",
            "description": "* Erstes Verkaufsdatum des Artikels\r\n* Date the article was first sold",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "lastSaleDate": {
            "type": "string",
            "description": "* Letzes Verkaufsdatum des Artikels\r\n* Date the article was last sold",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Price on the label of the article",
            "format": "double",
            "nullable": true
          },
          "forecastPrice": {
            "type": "number",
            "description": "* Vorab kalkulierter Verkaufspreis\r\n* Price previously forecast for the article",
            "format": "double",
            "nullable": true
          },
          "patternNumber": {
            "type": "integer",
            "description": "* Muster-Nummer\r\n* Pattern number",
            "format": "int32",
            "nullable": true
          },
          "labelNumber": {
            "type": "integer",
            "description": "* Etikettentyp-Nummer\r\n* Labeltype number",
            "format": "int32",
            "nullable": true
          },
          "colorNumber": {
            "type": "integer",
            "description": "* Farb-Nummer\r\n* Color number",
            "format": "int32",
            "nullable": true
          },
          "shapeNumber": {
            "type": "integer",
            "description": "* Form-Nummer\r\n* Shape number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true,
            "example": ""
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true,
            "example": ""
          },
          "brandNumber": {
            "type": "integer",
            "description": "* Label-Nummer\r\n* Brand number",
            "format": "int32",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferanten-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "materialNumber": {
            "type": "integer",
            "description": "* Material-Nummer\r\n* Material number",
            "format": "int32",
            "nullable": true
          },
          "priceUnitNumber": {
            "type": "string",
            "description": "* Preiseinheit-Nummer\r\n* Price unit number",
            "nullable": true,
            "example": ""
          },
          "seasonNumber": {
            "type": "integer",
            "description": "* Saison-Nummer\r\n* Season number",
            "format": "int32",
            "nullable": true
          },
          "shopNumber": {
            "type": "integer",
            "description": "* Shop-Nummer\r\n* Shop number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category Number",
            "format": "int32",
            "nullable": true
          },
          "targetGroupNumber": {
            "type": "integer",
            "description": "* Zielgruppen-Nummer\r\n* Target group number",
            "format": "int32",
            "nullable": true
          },
          "functionNumber": {
            "type": "integer",
            "description": "* Funktion-Nummer\r\n* Function number",
            "format": "int32",
            "nullable": true
          },
          "eligibleForDiscount": {
            "type": "boolean",
            "description": "* Rabattfähig\r\n* eligible for discount"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          },
          "basePrice": {
            "type": "number",
            "description": "* Basispreis pro Mengeneinheit des Artikels\r\n* Base price for each price unit of the article",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ArticleSize.ArticleSizeDTO": {
        "type": "object",
        "properties": {
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "description": "* Größe\r\n* Size",
            "nullable": true
          },
          "sizeRangeNumber": {
            "type": "integer",
            "description": "* Größengruppe\r\n* Size group",
            "format": "int32",
            "nullable": true
          },
          "ean": {
            "type": "number",
            "description": "* EAN (Enthält Artikel EAN, wenn nicht gefüllt number Feld benutzen)\r\n* EAN (Contains article ean, if empty use number field)",
            "format": "double",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "firstPurchaseDate": {
            "type": "string",
            "description": "* Erstes Einkaufsdatum\r\n* Date the size was first purchased",
            "format": "date",
            "nullable": true
          },
          "lastPurchaseDate": {
            "type": "string",
            "description": "* Letzes Einkaufsdatum\r\n* Date the size was last purchased",
            "format": "date",
            "nullable": true
          },
          "isFIFO": {
            "type": "boolean",
            "description": "* Kennzeichnet die Größe als FIFO\r\n* Flags that defines the size as FIFO",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "volumeUnit": {
            "type": "number",
            "description": "* Mengeneinheit (z.B.: 50ml oder 1,2Kg)\r\n* Valume unit (e.g: 50ml or 1,2Kg)",
            "format": "double",
            "nullable": true
          },
          "isNOS": {
            "type": "boolean",
            "description": "* Kennzeichnet den Größe als NOS\r\n* Flag that defines the size as NOS",
            "nullable": true
          },
          "number": {
            "type": "number",
            "description": "* Interne Nummer zur identifikation der Größe\r\n* Internal number to identify the size",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Price the size sales for",
            "format": "double",
            "nullable": true
          },
          "firstSaleDate": {
            "type": "string",
            "description": "* Erstes Verkaufsdatum\r\n* Date the size was first sold",
            "format": "date",
            "nullable": true
          },
          "lastSaleDate": {
            "type": "string",
            "description": "* Letzes Verkaufsdatum\r\n* Date the size was last sold",
            "format": "date",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Price on the label of the size",
            "format": "double",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Key\r\n* Currency key",
            "nullable": true
          },
          "priceUnitKey": {
            "type": "string",
            "description": "* Preiseinheit-Key\r\n* Priceunit key",
            "nullable": true
          },
          "stockQuantity": {
            "type": "number",
            "description": "* Bestand (selectionQuantity abziehen)\r\n* Stock (substract selectionQuantity)",
            "format": "double",
            "nullable": true
          },
          "selectionQuantity": {
            "type": "number",
            "description": "* Bestand in Auswahl\r\n* Stock in selection",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Branch.BranchDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Filial-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "stateNumber": {
            "type": "integer",
            "description": "* Bundesland-Nummer\r\n* State number",
            "format": "int32",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "* Kennzeichnet die Filiale als aktiv\r\n* Flag that defines the branch as active",
            "nullable": true
          },
          "imageName": {
            "type": "string",
            "description": "* Bildname\r\n* Imagename",
            "nullable": true,
            "example": ""
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bankcode",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "nullable": true,
            "example": ""
          },
          "fax": {
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true,
            "example": ""
          },
          "iban": {
            "type": "string",
            "description": "* IBAN\r\n* IBAN",
            "nullable": true,
            "example": ""
          },
          "glN1": {
            "type": "number",
            "description": "* GLN für Import\r\n* GLN for import",
            "format": "double",
            "nullable": true
          },
          "glN2": {
            "type": "number",
            "description": "* GLN für Export\r\n* GLN for export",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Informationen über die Filiale\r\n* Information about the branch",
            "nullable": true,
            "example": ""
          },
          "isWebshop": {
            "type": "boolean",
            "description": "* Kennzeichnet die Filiale als Webfiliale\r\n* Flag that defines the branch as web",
            "nullable": true
          },
          "stocktakingDate": {
            "type": "string",
            "description": "* Inventur-Stichtag\r\n* Date the stocktaking takes place",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "bankAccount": {
            "type": "string",
            "description": "* Konto-Nummer\r\n* Bankaccount number",
            "nullable": true,
            "example": ""
          },
          "logoFileName": {
            "type": "string",
            "description": "* Bildname für ein Firmenlogo\r\n* Imagename for a company logo",
            "nullable": true,
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Filiale\r\n* Searchterm for the branch",
            "nullable": true,
            "example": ""
          },
          "name1": {
            "type": "string",
            "description": "* Filialname 1\r\n* Branch name 1",
            "nullable": true,
            "example": ""
          },
          "name2": {
            "type": "string",
            "description": "* Filialname 2\r\n* Branch name 2",
            "nullable": true,
            "example": ""
          },
          "name3": {
            "type": "string",
            "description": "* Filialename 3\r\n* Branch name 3",
            "nullable": true,
            "example": ""
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true,
            "example": ""
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true,
            "example": ""
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true,
            "example": ""
          },
          "bic": {
            "type": "string",
            "description": "* BIC\r\n* BIC",
            "nullable": true,
            "example": ""
          },
          "vatId": {
            "type": "string",
            "description": "* UST-ID\r\n* VAT ID",
            "nullable": true,
            "example": ""
          },
          "taxNumber": {
            "type": "string",
            "description": "* Steuernummer\r\n* Tax number",
            "nullable": true,
            "example": ""
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true,
            "example": ""
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country key",
            "nullable": true,
            "example": ""
          },
          "regionNumber": {
            "type": "integer",
            "description": "* Region-Nummer\r\n* Region number",
            "format": "int32",
            "nullable": true
          },
          "openMonday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Montag\r\n* Opening hours for monday",
            "nullable": true
          },
          "openTuesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Dienstag\r\n* Opening hours for tuesday",
            "nullable": true
          },
          "openWednesday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Mittwoch\r\n* Opening hours for wednesday",
            "nullable": true
          },
          "openThursday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Donnerstag\r\n* Opening hours for thursday",
            "nullable": true
          },
          "openFriday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Freitag\r\n* Opening hours for friday",
            "nullable": true
          },
          "openSaturday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Samstag\r\n* Opening hours for saturday",
            "nullable": true
          },
          "openSunday": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchOpeningHoursDTO"
            },
            "description": "* Öffnungszeiten Sonntag\r\n* Opening hours for sunday",
            "nullable": true
          },
          "website": {
            "type": "string",
            "description": "* Homepage\r\n* Homepage",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Branch.BranchOpeningHoursDTO": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "nullable": true
          },
          "to": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Brand.BrandDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name des Labels\r\n* Name of the brand",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für das Label\r\n* Searchterm for the brand",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Label-Nummer\r\n* Brand number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Category.CategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Undeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "departmentNumber": {
            "type": "integer",
            "description": "* Abteilung-Nummer\r\n* Department number",
            "format": "int32",
            "nullable": true
          },
          "labelNumber": {
            "type": "integer",
            "description": "* Etikettentyp-Nummer\r\n* Label type number",
            "format": "int32",
            "nullable": true
          },
          "mainDepartmentNumber": {
            "type": "integer",
            "description": "* Hauptabteilung-Nummer\r\n* Main department number",
            "format": "int32",
            "nullable": true
          },
          "mainCategoryNumber": {
            "type": "integer",
            "description": "* Hauptwarengruppe-Nummer\r\n* Main category number",
            "format": "int32",
            "nullable": true
          },
          "generalCategoryNumber": {
            "type": "integer",
            "description": "* Oberwarengruppe\r\n* General category number",
            "format": "int32",
            "nullable": true
          },
          "unionCategoryNumber": {
            "type": "integer",
            "description": "* Verbandswarengruppe-Nummer\r\n* Union category number",
            "format": "int32",
            "nullable": true
          },
          "taxNumber": {
            "type": "integer",
            "description": "* Steuersatz-Nummer\r\n* Tax number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name\r\n* Name",
            "nullable": true,
            "example": ""
          },
          "isServiceCategory": {
            "type": "boolean",
            "description": "* Kennzeichnet die Warengruppe als Dienstleistung-Wwarengruppe\r\n* Flags that defines the category as service category",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für die Warengruppe\r\n* Searchterm for the category",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ChangeId.ChangeIdDTO": {
        "type": "object",
        "properties": {
          "currentChangeId": {
            "type": "integer",
            "description": "* Aktuellste ChangeId zur Nutzung als To Parameter an Changed Endpunkten\r\n* Latest ChangeId for usage as To Parameter on changed endpoints",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Color.ColorDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Farb-Nummer\r\n* Color number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Farbe\r\n* Name of the color",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Farbe\r\n* Searchterm of the color",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Country.CountryDTO": {
        "type": "object",
        "properties": {
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Key\r\n* Currency key",
            "nullable": true
          },
          "countryName": {
            "type": "string",
            "description": "* Name des Lands\r\n* Name of the country",
            "nullable": true
          },
          "domain": {
            "type": "string",
            "description": "* Domäne des Lands\r\n* Domain of the land",
            "nullable": true
          },
          "isEU": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich um ein EU Land handelt\r\n* Flag that defines the country as EU country",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "isoAlpha2": {
            "type": "string",
            "description": "* ISO alpha-2\r\n* ISO alpha-2",
            "nullable": true
          },
          "isoAlpha3": {
            "type": "string",
            "description": "* ISO alpha-3\r\n* ISO alpha-3",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für das Land\r\n* Searchterm for the country",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "* Land-Key\r\n* Country key",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Coupon.CouponDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis Datum\r\n* Valid until date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "information": {
            "type": "string",
            "description": "* Gutscheinnotiz zur Information\r\n* Informational note",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique indentifier",
            "format": "uuid",
            "example": ""
          },
          "internetCode": {
            "type": "string",
            "description": "* Code für Internet Einlösung\r\n* Code for internet redemption",
            "nullable": true,
            "example": ""
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschein-Nummer\r\n* Coupon number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status, ob bereits der volle Betrag des Gutscheins eingelöst wurde (0 = offen, 1 = vollständig eingelöst)\r\n* Status whether the full amount of the coupon has been redeemed (0 = open, 1 = fully redeemed)",
            "format": "int32",
            "nullable": true
          },
          "valueRedeemed": {
            "type": "number",
            "description": "* Eingelöster Wert\r\n* Redeemed value",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Credit.CreditDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschrift-Nummer\r\n* Credit number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status (0 = offen, 1 = erledigt)\r\n* Status (0 = open, 1 = cleared)",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert \r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunden-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "valueRedeemed": {
            "type": "number",
            "description": "* Eingelöster Wert\r\n* Redeemed value",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Currency.CurrencyDTO": {
        "type": "object",
        "properties": {
          "unit": {
            "type": "integer",
            "description": "* Einheit\r\n* Unit",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "isoAlpha3": {
            "type": "string",
            "description": "* ISO alpha-3\r\n* ISO alpha-3",
            "nullable": true
          },
          "rate": {
            "type": "number",
            "description": "* Kurs zu €\r\n* Rate to €",
            "format": "double",
            "nullable": true
          },
          "key": {
            "type": "string",
            "description": "* Währungs-Key\r\n* Currency key",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Customer.BonusTypes": {
        "enum": [
          "None",
          "Mail",
          "Email",
          "Sms",
          "Telephone"
        ],
        "type": "string"
      },
      "api.Contract.Customer.CustomerCreateDTO": {
        "required": [
          "isBusiness",
          "isLocked",
          "isLockedForSelections",
          "isStaff",
          "lastName",
          "signedDeclarationOfConsent",
          "subscriptionAdvertising",
          "subscriptionNewsletter"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "title": {
            "maxLength": 60,
            "type": "string",
            "description": "* Titel des Kunden\r\n* Titel of the customer",
            "nullable": true,
            "example": "Dr."
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort des Kunden\r\n* Searchterm of the customer",
            "nullable": true,
            "example": "MustermannMax"
          },
          "isLockedForSelections": {
            "type": "boolean",
            "description": "* Kennzeichent das angibt ob der Kunde für Auswahlen gesperrt ist\r\n* Flag that defines the customer as locked for selections"
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bankcode",
            "format": "int32",
            "nullable": true,
            "example": 50070010
          },
          "signedDeclarationOfConsent": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde eine Einverständnisserklärung unterschrieben hat\r\n* Flag that defines that the customer signed a declaration of consent"
          },
          "email": {
            "maxLength": 84,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "nullable": true,
            "example": "m.mustermann@musterstadt.de"
          },
          "maritalStatus": {
            "$ref": "#/components/schemas/api.Contract.Customer.MaritalStatus"
          },
          "fax": {
            "maxLength": 60,
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true,
            "example": "+49 123 456789"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "* Geburtsdatum\r\n* Date of birth",
            "format": "date",
            "nullable": true,
            "example": "1975-01-01"
          },
          "dateOfBirthSignificantOther": {
            "type": "string",
            "description": "* Geburtsdatum des Partners\r\n* Date of birth from the significant other",
            "format": "date",
            "nullable": true,
            "example": "1983-12-31"
          },
          "isBusiness": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich um einen gewerblichen Kunden handelt\r\n* Flag that defines the customer as buisness"
          },
          "iban": {
            "maxLength": 60,
            "type": "string",
            "description": "* IBAN\r\n* IBAN",
            "nullable": true,
            "example": "DE94 5007 0010 0123 4567 89"
          },
          "info1": {
            "maxLength": 1200,
            "type": "string",
            "description": "* Informationen über den Kunden\r\n* Information about the customer",
            "nullable": true,
            "example": "Ignoriert Mahnungen"
          },
          "info2": {
            "maxLength": 1200,
            "type": "string",
            "description": "* Mehr Informationen über den Kunden\r\n* More information about the customer",
            "nullable": true,
            "example": ""
          },
          "bankAccount": {
            "maxLength": 30,
            "type": "string",
            "description": "* Konto-Nummer\r\n* Bank account number",
            "nullable": true,
            "example": "123456789"
          },
          "gender": {
            "$ref": "#/components/schemas/api.Contract.Gender"
          },
          "isStaff": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich bei dem Kunden gleichzeitig um einen Mitarbeiter handelt\r\n* Flag that defines the customer as staff"
          },
          "mobilePhone": {
            "maxLength": 60,
            "type": "string",
            "description": "* Primäre Handynmummer\r\n* Primary mobile phone number",
            "nullable": true,
            "example": "+49 1010 123456789"
          },
          "subscriptionNewsletter": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde einen Newsletter empfangen möchte\r\n* Flag that defines that the customer wants to receive a newsletter"
          },
          "subscriptionNewsletterConfirmationDate": {
            "type": "string",
            "description": "* Datum das angibt, wann der Kunde dem Empfang eines Newsletters zugestimmt hat\r\n* Flag that defines when the customer consented to receive a newsletter",
            "format": "date",
            "nullable": true
          },
          "lastName": {
            "maxLength": 64,
            "type": "string",
            "description": "* Nachname\r\n* Last name",
            "example": "Mustermann"
          },
          "name1": {
            "type": "string",
            "description": "* Name 1\r\n* Name 1",
            "nullable": true,
            "example": ""
          },
          "city": {
            "maxLength": 60,
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true,
            "example": "Bielefeld"
          },
          "zipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true,
            "example": "33609"
          },
          "isLocked": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde gesperrt ist\r\n* Flag that defines the customer as locked"
          },
          "street": {
            "maxLength": 64,
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true,
            "example": "Am Lenkwerk 7"
          },
          "bic": {
            "maxLength": 60,
            "type": "string",
            "description": "* BIC\r\n* BIC",
            "nullable": true,
            "example": "DEUTDEFFXXX"
          },
          "telephone": {
            "maxLength": 60,
            "type": "string",
            "description": "* Primäre Telefonnummer\r\n* Primary telephone number",
            "nullable": true,
            "example": "+49 2020 123456789"
          },
          "firstName": {
            "maxLength": 60,
            "type": "string",
            "description": "* Vorname\r\n* First name",
            "nullable": true,
            "example": "Max"
          },
          "subscriptionAdvertising": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde Werbung erhalten möchte\r\n* Flag that defines that the customer wants to receive advertising"
          },
          "countryName": {
            "maxLength": 6,
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true,
            "example": "DE"
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "selectionCriteria1": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 1\r\n* Selection criteria 1",
            "nullable": true,
            "example": "KundenApp"
          },
          "selectionCriteria2": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 2\r\n* Selection criteria 2",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria3": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 3\r\n* Selection criteria 3",
            "nullable": true,
            "example": "13"
          },
          "selectionCriteria4": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 4\r\n* Selection criteria 4",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria5": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 5\r\n* Selection criteria 5",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria6": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 6\r\n* Selection criteria 6",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria7": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 7\r\n* Selection criteria 7",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria8": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 8\r\n* Selection criteria 8",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria9": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 9\r\n* Selection criteria 9",
            "nullable": true,
            "example": ""
          },
          "vatNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Steuer-Nummer\r\n* VAT number",
            "nullable": true,
            "example": ""
          },
          "declarationsOfConsent": {
            "$ref": "#/components/schemas/api.Contract.Customer.DeclarationOfConsent"
          },
          "customerGroupNumber": {
            "type": "integer",
            "description": "* Verweis auf die zugewiesene Kundengruppe\r\n* Reference to the assigned customer group",
            "format": "int32"
          },
          "customerCard": {
            "type": "boolean",
            "description": "* Kdkarte\r\n* customerCard",
            "nullable": true
          },
          "webUser": {
            "maxLength": 60,
            "type": "string",
            "description": "* Web Benutzer\r\n* Web user",
            "nullable": true,
            "example": ""
          },
          "webUserPassword": {
            "maxLength": 60,
            "type": "string",
            "description": "* Web Benutzer Passwort\r\n* Web user password",
            "nullable": true,
            "example": ""
          },
          "customerType": {
            "maxLength": 20,
            "type": "string",
            "description": "* Kundentyp\r\n* Customer type",
            "nullable": true,
            "example": ""
          },
          "poBox": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postfach\r\n* PO-Box",
            "nullable": true,
            "example": ""
          },
          "poBoxZipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postfach PLZ\r\n* PO-Box Zip code",
            "nullable": true,
            "example": ""
          },
          "telephoneSecondary": {
            "maxLength": 60,
            "type": "string",
            "description": "* Sekundäre Telefonnummer\r\n* Secondary telephone number",
            "nullable": true,
            "example": ""
          },
          "mobilePhoneSecondary": {
            "maxLength": 60,
            "type": "string",
            "description": "* Sekundäre Handynmummer\r\n* Secondary mobile phone number",
            "nullable": true,
            "example": ""
          },
          "discountGroup": {
            "type": "integer",
            "description": "* Rabattgruppe\r\n* Discount group",
            "format": "int32"
          },
          "discountPercent": {
            "type": "number",
            "description": "* Rabatt %\r\n* Discount %",
            "format": "double"
          },
          "bonusPercent": {
            "type": "number",
            "description": "* Bonus %\r\n* Bonus %",
            "format": "double",
            "example": 10
          },
          "familyNumber": {
            "type": "integer",
            "description": "* Familien-Nummer\r\n* Family number",
            "format": "int32",
            "nullable": true
          },
          "bonusType": {
            "$ref": "#/components/schemas/api.Contract.Customer.BonusTypes"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Customer.CustomerDTO": {
        "type": "object",
        "properties": {
          "creationDate": {
            "type": "string",
            "description": "* Datum der Anlage des Kunden\r\n* Date the customer was created",
            "format": "date",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort des Kunden\r\n* Searchterm of the customer",
            "nullable": true,
            "example": "MustermannMax"
          },
          "personalSalutation": {
            "type": "string",
            "description": "* Persönliche Anrede\r\n* Personal salutation",
            "nullable": true,
            "example": "Sehr geehrte Damen und Herren"
          },
          "name2": {
            "type": "string",
            "description": "* Name 1\r\n* Name 1",
            "nullable": true,
            "example": ""
          },
          "name3": {
            "type": "string",
            "description": "* Name 3\r\n* Name 3",
            "nullable": true,
            "example": ""
          },
          "salutation": {
            "type": "string",
            "description": "* Anrede\r\n* Salutation",
            "nullable": true,
            "example": "Herr"
          },
          "revenue": {
            "type": "number",
            "description": "* Umsatz des Kunden\r\n* Revenue of the customer",
            "format": "double",
            "nullable": true,
            "example": 160.95
          },
          "bonusValue": {
            "type": "number",
            "description": "* Bonuswert des Kunden\r\n* Bonus value of the customer",
            "format": "double",
            "nullable": true,
            "example": 12.53
          },
          "loyaltyPoints": {
            "type": "integer",
            "description": "* Bonuspunkte\r\n* Loyalty points",
            "format": "int32",
            "example": 13
          },
          "hasCustomerCard": {
            "type": "boolean",
            "description": "* Kennzeichen, ob Kundenkarte vorhanden ist\r\n* Flag that defines whether the customer has a customer card"
          },
          "customerCardPrintDate": {
            "type": "string",
            "description": "* Datum des Kundekartendrucks\r\n* Date of the customer card printout",
            "format": "date",
            "nullable": true
          },
          "inactiveFlag": {
            "type": "boolean",
            "description": "* Kennzeichen, dass den Inaktivitätsstatus des Kunden wiedergibt (1 = falsche Adresse, 2 = ohne Umsatz)\r\n* Flag that defines whether the customer is in an inactivity state (1 = wrong address, 2 = without sales)"
          },
          "lastBonusSettlementDate": {
            "type": "string",
            "description": "* Datum der letzten Bonusabrechnung\r\n* Date of the last bonus settlement",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true,
            "example": 12
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "title": {
            "type": "string",
            "description": "* Titel des Kunden\r\n* Titel of the customer",
            "nullable": true,
            "example": "Dr."
          },
          "isLockedForSelections": {
            "type": "boolean",
            "description": "* Kennzeichent das angibt ob der Kunde für Auswahlen gesperrt ist\r\n* Flag that defines the customer as locked for selections"
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bankcode",
            "format": "int32",
            "nullable": true,
            "example": 50070010
          },
          "signedDeclarationOfConsent": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde eine Einverständnisserklärung unterschrieben hat\r\n* Flag that defines that the customer signed a declaration of consent"
          },
          "email": {
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "nullable": true,
            "example": "m.mustermann@musterstadt.de"
          },
          "maritalStatus": {
            "$ref": "#/components/schemas/api.Contract.Customer.MaritalStatus"
          },
          "fax": {
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true,
            "example": "+49 123 456789"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "* Geburtsdatum\r\n* Date of birth",
            "format": "date",
            "nullable": true,
            "example": "1975-01-01"
          },
          "dateOfBirthSignificantOther": {
            "type": "string",
            "description": "* Geburtsdatum des Partners\r\n* Date of birth from the significant other",
            "format": "date",
            "nullable": true,
            "example": "1983-12-31"
          },
          "isBusiness": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich um einen gewerblichen Kunden handelt\r\n* Flag that defines the customer as buisness"
          },
          "iban": {
            "type": "string",
            "description": "* IBAN\r\n* IBAN",
            "nullable": true,
            "example": "DE94 5007 0010 0123 4567 89"
          },
          "info1": {
            "type": "string",
            "description": "* Informationen über den Kunden\r\n* Information about the customer",
            "nullable": true,
            "example": "Ignoriert Mahnungen"
          },
          "info2": {
            "type": "string",
            "description": "* Mehr Informationen über den Kunden\r\n* More information about the customer",
            "nullable": true,
            "example": ""
          },
          "bankAccount": {
            "type": "string",
            "description": "* Konto-Nummer\r\n* Bank account number",
            "nullable": true,
            "example": "123456789"
          },
          "gender": {
            "$ref": "#/components/schemas/api.Contract.Gender"
          },
          "isStaff": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich bei dem Kunden gleichzeitig um einen Mitarbeiter handelt\r\n* Flag that defines the customer as staff"
          },
          "mobilePhone": {
            "type": "string",
            "description": "* Primäre Handynmummer\r\n* Primary mobile phone number",
            "nullable": true,
            "example": "+49 1010 123456789"
          },
          "subscriptionNewsletter": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde einen Newsletter empfangen möchte\r\n* Flag that defines that the customer wants to receive a newsletter"
          },
          "subscriptionNewsletterConfirmationDate": {
            "type": "string",
            "description": "* Datum das angibt, wann der Kunde dem Empfang eines Newsletters zugestimmt hat\r\n* Flag that defines when the customer consented to receive a newsletter",
            "format": "date",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "* Nachname\r\n* Last name",
            "nullable": true,
            "example": "Mustermann"
          },
          "name1": {
            "type": "string",
            "description": "* Name 1\r\n* Name 1",
            "nullable": true,
            "example": ""
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true,
            "example": "Bielefeld"
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true,
            "example": "33609"
          },
          "isLocked": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde gesperrt ist\r\n* Flag that defines the customer as locked"
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true,
            "example": "Am Lenkwerk 7"
          },
          "bic": {
            "type": "string",
            "description": "* BIC\r\n* BIC",
            "nullable": true,
            "example": "DEUTDEFFXXX"
          },
          "telephone": {
            "type": "string",
            "description": "* Primäre Telefonnummer\r\n* Primary telephone number",
            "nullable": true,
            "example": "+49 2020 123456789"
          },
          "firstName": {
            "type": "string",
            "description": "* Vorname\r\n* First name",
            "nullable": true,
            "example": "Max"
          },
          "subscriptionAdvertising": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde Werbung erhalten möchte\r\n* Flag that defines that the customer wants to receive advertising"
          },
          "countryName": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true,
            "example": "DE"
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "selectionCriteria1": {
            "type": "string",
            "description": "* Selektionsmerkmal 1\r\n* Selection criteria 1",
            "nullable": true,
            "example": "KundenApp"
          },
          "selectionCriteria2": {
            "type": "string",
            "description": "* Selektionsmerkmal 2\r\n* Selection criteria 2",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria3": {
            "type": "string",
            "description": "* Selektionsmerkmal 3\r\n* Selection criteria 3",
            "nullable": true,
            "example": "13"
          },
          "selectionCriteria4": {
            "type": "string",
            "description": "* Selektionsmerkmal 4\r\n* Selection criteria 4",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria5": {
            "type": "string",
            "description": "* Selektionsmerkmal 5\r\n* Selection criteria 5",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria6": {
            "type": "string",
            "description": "* Selektionsmerkmal 6\r\n* Selection criteria 6",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria7": {
            "type": "string",
            "description": "* Selektionsmerkmal 7\r\n* Selection criteria 7",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria8": {
            "type": "string",
            "description": "* Selektionsmerkmal 8\r\n* Selection criteria 8",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria9": {
            "type": "string",
            "description": "* Selektionsmerkmal 9\r\n* Selection criteria 9",
            "nullable": true,
            "example": ""
          },
          "vatNumber": {
            "type": "string",
            "description": "* Steuer-Nummer\r\n* VAT number",
            "nullable": true,
            "example": ""
          },
          "declarationsOfConsent": {
            "$ref": "#/components/schemas/api.Contract.Customer.DeclarationOfConsent"
          },
          "customerGroupNumber": {
            "type": "integer",
            "description": "* Verweis auf die zugewiesene Kundengruppe\r\n* Reference to the assigned customer group",
            "format": "int32"
          },
          "customerCard": {
            "type": "boolean",
            "description": "* Kdkarte\r\n* customerCard",
            "nullable": true
          },
          "webUser": {
            "type": "string",
            "description": "* Web Benutzer\r\n* Web user",
            "nullable": true,
            "example": ""
          },
          "webUserPassword": {
            "type": "string",
            "description": "* Web Benutzer Passwort\r\n* Web user password",
            "nullable": true,
            "example": ""
          },
          "customerType": {
            "type": "string",
            "description": "* Kundentyp\r\n* Customer type",
            "nullable": true,
            "example": ""
          },
          "poBox": {
            "type": "string",
            "description": "* Postfach\r\n* PO-Box",
            "nullable": true,
            "example": ""
          },
          "poBoxZipCode": {
            "type": "string",
            "description": "* Postfach PLZ\r\n* PO-Box Zip code",
            "nullable": true,
            "example": ""
          },
          "telephoneSecondary": {
            "type": "string",
            "description": "* Sekundäre Telefonnummer\r\n* Secondary telephone number",
            "nullable": true,
            "example": ""
          },
          "mobilePhoneSecondary": {
            "type": "string",
            "description": "* Sekundäre Handynmummer\r\n* Secondary mobile phone number",
            "nullable": true,
            "example": ""
          },
          "discountGroup": {
            "type": "integer",
            "description": "* Rabattgruppe\r\n* Discount group",
            "format": "int32"
          },
          "discountPercent": {
            "type": "number",
            "description": "* Rabatt %\r\n* Discount %",
            "format": "double"
          },
          "bonusPercent": {
            "type": "number",
            "description": "* Bonus %\r\n* Bonus %",
            "format": "double",
            "example": 10
          },
          "familyNumber": {
            "type": "integer",
            "description": "* Familien-Nummer\r\n* Family number",
            "format": "int32",
            "nullable": true
          },
          "bonusType": {
            "$ref": "#/components/schemas/api.Contract.Customer.BonusTypes"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Customer.CustomerUpdateDTO": {
        "required": [
          "isBusiness",
          "isLocked",
          "isLockedForSelections",
          "isStaff",
          "signedDeclarationOfConsent",
          "subscriptionAdvertising",
          "subscriptionNewsletter"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "title": {
            "maxLength": 60,
            "type": "string",
            "description": "* Titel des Kunden\r\n* Titel of the customer",
            "nullable": true,
            "example": "Dr."
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort des Kunden\r\n* Searchterm of the customer",
            "nullable": true,
            "example": "MustermannMax"
          },
          "isLockedForSelections": {
            "type": "boolean",
            "description": "* Kennzeichent das angibt ob der Kunde für Auswahlen gesperrt ist\r\n* Flag that defines the customer as locked for selections"
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bankcode",
            "format": "int32",
            "nullable": true,
            "example": 50070010
          },
          "signedDeclarationOfConsent": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde eine Einverständnisserklärung unterschrieben hat\r\n* Flag that defines that the customer signed a declaration of consent"
          },
          "email": {
            "maxLength": 84,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "nullable": true,
            "example": "m.mustermann@musterstadt.de"
          },
          "maritalStatus": {
            "$ref": "#/components/schemas/api.Contract.Customer.MaritalStatus"
          },
          "fax": {
            "maxLength": 60,
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true,
            "example": "+49 123 456789"
          },
          "dateOfBirth": {
            "type": "string",
            "description": "* Geburtsdatum\r\n* Date of birth",
            "format": "date",
            "nullable": true,
            "example": "1975-01-01"
          },
          "dateOfBirthSignificantOther": {
            "type": "string",
            "description": "* Geburtsdatum des Partners\r\n* Date of birth from the significant other",
            "format": "date",
            "nullable": true,
            "example": "1983-12-31"
          },
          "isBusiness": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich um einen gewerblichen Kunden handelt\r\n* Flag that defines the customer as buisness"
          },
          "iban": {
            "maxLength": 60,
            "type": "string",
            "description": "* IBAN\r\n* IBAN",
            "nullable": true,
            "example": "DE94 5007 0010 0123 4567 89"
          },
          "info1": {
            "maxLength": 1200,
            "type": "string",
            "description": "* Informationen über den Kunden\r\n* Information about the customer",
            "nullable": true,
            "example": "Ignoriert Mahnungen"
          },
          "info2": {
            "maxLength": 1200,
            "type": "string",
            "description": "* Mehr Informationen über den Kunden\r\n* More information about the customer",
            "nullable": true,
            "example": ""
          },
          "bankAccount": {
            "maxLength": 30,
            "type": "string",
            "description": "* Konto-Nummer\r\n* Bank account number",
            "nullable": true,
            "example": "123456789"
          },
          "gender": {
            "$ref": "#/components/schemas/api.Contract.Gender"
          },
          "isStaff": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob es sich bei dem Kunden gleichzeitig um einen Mitarbeiter handelt\r\n* Flag that defines the customer as staff"
          },
          "mobilePhone": {
            "maxLength": 60,
            "type": "string",
            "description": "* Primäre Handynmummer\r\n* Primary mobile phone number",
            "nullable": true,
            "example": "+49 1010 123456789"
          },
          "subscriptionNewsletter": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde einen Newsletter empfangen möchte\r\n* Flag that defines that the customer wants to receive a newsletter"
          },
          "subscriptionNewsletterConfirmationDate": {
            "type": "string",
            "description": "* Datum das angibt, wann der Kunde dem Empfang eines Newsletters zugestimmt hat\r\n* Flag that defines when the customer consented to receive a newsletter",
            "format": "date",
            "nullable": true
          },
          "lastName": {
            "maxLength": 64,
            "type": "string",
            "description": "* Nachname\r\n* Last name",
            "nullable": true,
            "example": "Mustermann"
          },
          "name1": {
            "type": "string",
            "description": "* Name 1\r\n* Name 1",
            "nullable": true,
            "example": ""
          },
          "city": {
            "maxLength": 60,
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true,
            "example": "Bielefeld"
          },
          "zipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true,
            "example": "33609"
          },
          "isLocked": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde gesperrt ist\r\n* Flag that defines the customer as locked"
          },
          "street": {
            "maxLength": 64,
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true,
            "example": "Am Lenkwerk 7"
          },
          "bic": {
            "maxLength": 60,
            "type": "string",
            "description": "* BIC\r\n* BIC",
            "nullable": true,
            "example": "DEUTDEFFXXX"
          },
          "telephone": {
            "maxLength": 60,
            "type": "string",
            "description": "* Primäre Telefonnummer\r\n* Primary telephone number",
            "nullable": true,
            "example": "+49 2020 123456789"
          },
          "firstName": {
            "maxLength": 60,
            "type": "string",
            "description": "* Vorname\r\n* First name",
            "nullable": true,
            "example": "Max"
          },
          "subscriptionAdvertising": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob der Kunde Werbung erhalten möchte\r\n* Flag that defines that the customer wants to receive advertising"
          },
          "countryName": {
            "maxLength": 6,
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true,
            "example": "DE"
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "selectionCriteria1": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 1\r\n* Selection criteria 1",
            "nullable": true,
            "example": "KundenApp"
          },
          "selectionCriteria2": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 2\r\n* Selection criteria 2",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria3": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 3\r\n* Selection criteria 3",
            "nullable": true,
            "example": "13"
          },
          "selectionCriteria4": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 4\r\n* Selection criteria 4",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria5": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 5\r\n* Selection criteria 5",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria6": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 6\r\n* Selection criteria 6",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria7": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 7\r\n* Selection criteria 7",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria8": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 8\r\n* Selection criteria 8",
            "nullable": true,
            "example": ""
          },
          "selectionCriteria9": {
            "maxLength": 30,
            "type": "string",
            "description": "* Selektionsmerkmal 9\r\n* Selection criteria 9",
            "nullable": true,
            "example": ""
          },
          "vatNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Steuer-Nummer\r\n* VAT number",
            "nullable": true,
            "example": ""
          },
          "declarationsOfConsent": {
            "$ref": "#/components/schemas/api.Contract.Customer.DeclarationOfConsent"
          },
          "customerGroupNumber": {
            "type": "integer",
            "description": "* Verweis auf die zugewiesene Kundengruppe\r\n* Reference to the assigned customer group",
            "format": "int32"
          },
          "customerCard": {
            "type": "boolean",
            "description": "* Kdkarte\r\n* customerCard",
            "nullable": true
          },
          "webUser": {
            "maxLength": 60,
            "type": "string",
            "description": "* Web Benutzer\r\n* Web user",
            "nullable": true,
            "example": ""
          },
          "webUserPassword": {
            "maxLength": 60,
            "type": "string",
            "description": "* Web Benutzer Passwort\r\n* Web user password",
            "nullable": true,
            "example": ""
          },
          "customerType": {
            "maxLength": 20,
            "type": "string",
            "description": "* Kundentyp\r\n* Customer type",
            "nullable": true,
            "example": ""
          },
          "poBox": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postfach\r\n* PO-Box",
            "nullable": true,
            "example": ""
          },
          "poBoxZipCode": {
            "maxLength": 20,
            "type": "string",
            "description": "* Postfach PLZ\r\n* PO-Box Zip code",
            "nullable": true,
            "example": ""
          },
          "telephoneSecondary": {
            "maxLength": 60,
            "type": "string",
            "description": "* Sekundäre Telefonnummer\r\n* Secondary telephone number",
            "nullable": true,
            "example": ""
          },
          "mobilePhoneSecondary": {
            "maxLength": 60,
            "type": "string",
            "description": "* Sekundäre Handynmummer\r\n* Secondary mobile phone number",
            "nullable": true,
            "example": ""
          },
          "discountGroup": {
            "type": "integer",
            "description": "* Rabattgruppe\r\n* Discount group",
            "format": "int32"
          },
          "discountPercent": {
            "type": "number",
            "description": "* Rabatt %\r\n* Discount %",
            "format": "double"
          },
          "bonusPercent": {
            "type": "number",
            "description": "* Bonus %\r\n* Bonus %",
            "format": "double",
            "example": 10
          },
          "familyNumber": {
            "type": "integer",
            "description": "* Familien-Nummer\r\n* Family number",
            "format": "int32",
            "nullable": true
          },
          "bonusType": {
            "$ref": "#/components/schemas/api.Contract.Customer.BonusTypes"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Customer.DeclarationOfConsent": {
        "enum": [
          "None",
          "Mail",
          "Email",
          "Sms",
          "Telephone"
        ],
        "type": "string"
      },
      "api.Contract.Customer.MaritalStatus": {
        "enum": [
          "Single",
          "Married",
          "Divorced",
          "Seperated",
          "Widowed"
        ],
        "type": "string"
      },
      "api.Contract.CustomerCard.CustomerCardDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "* Name der Kundenkarte\r\n* Name of the customer card",
            "nullable": true
          },
          "number": {
            "type": "string",
            "description": "* Kundenkarte-Nummer\r\n* Customer card number",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "* Kennzeichnet die Kundenkarte als aktiv\r\n* Flags the customer card as active",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.CustomerReturn.CustomerReturnDTO": {
        "type": "object",
        "properties": {
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artike-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "cashierNumber": {
            "type": "integer",
            "description": "* Kassierer-Nummer (Personal Endpunkt)\r\n* Cashier number (Staff endpoint)",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Kunden-Rabatt\r\n* Customer discount",
            "format": "double",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "deduction": {
            "type": "number",
            "description": "* Nachlass\r\n* Deduction",
            "format": "double",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Kunden Postleitzahl\r\n* Customer ZIP code",
            "nullable": true
          },
          "staffDiscount": {
            "type": "number",
            "description": "* Personal-Rabatt\r\n* Staff discount",
            "format": "double",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "priceChangeReasonNumber": {
            "type": "integer",
            "description": "* Grund für Preisänderung\r\n* Reason for price change",
            "format": "int32",
            "nullable": true
          },
          "returnReasonNumber": {
            "type": "integer",
            "description": "* Grund für Rückgabe\r\n* Reason for return",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Price on the label",
            "format": "double",
            "nullable": true
          },
          "paymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsart-Nummer\r\n* Payment option number",
            "format": "int32",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "* Zeit\r\n* Time",
            "format": "int32",
            "nullable": true
          },
          "isStaffCustomerReturn": {
            "type": "boolean",
            "description": "* Gibt an ob es ein Personalretoure ist\r\n* Defines the customer return as staff sale"
          },
          "alternativeReceiptNumber": {
            "type": "string",
            "description": "* Alternative Bon-Nummer (z.b. Auftragsnummer aus Web Auftrag)\r\n* Alternateive receipt number (e.g. Order number from web order)",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.CustomerReturnInstruction.CustomerReturnInstructionCreateDTO": {
        "required": [
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "orderNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Auftrag-Nummer\r\n* Order number",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "* Eindeutige ID des Kunden\r\n* Unique identifier of the customer",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "format": "email",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf den Kauf (Rabatt auf einzelne Position nicht mit angeben)\r\n* Discount on the whole purchase (Do not include discounts on single positions)",
            "format": "double"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturnInstruction.CustomerReturnInstructionPositionCreateDTO"
            },
            "description": "* Liste von Positionen\r\n* List of positions"
          }
        },
        "additionalProperties": false,
        "description": "* Anlage eines Storno für Webshop Zahlung\r\n* Creation of webshop payment cancelation"
      },
      "api.Contract.CustomerReturnInstruction.CustomerReturnInstructionPositionCreateDTO": {
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "integer",
            "description": "* Eindeutige Nummer des Artikels\r\n* Unique number of the product",
            "format": "int64",
            "nullable": true
          },
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "articleVariantId": {
            "type": "string",
            "description": "* Alternative eindeutige ID des Artikels\r\n* Alternate unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "ean": {
            "type": "integer",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "int64",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf die Position\r\n* Discount on the Position",
            "format": "double"
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "* Kommentar\r\n* Comment",
            "nullable": true
          },
          "amount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double"
          },
          "webPaymentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Zahlungsbedingungs-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "originalStockBranchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer aus der der Artikel ursprünglich bezogen wurde (Wenn gesetzt wird ein Transfer in diese Filiale gemacht)\r\n* Branch number where the article was originally picked from (If set it triggers a transfer into that branch)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.CustomerReturnReason.CustomerReturnReasonDTO": {
        "type": "object",
        "properties": {
          "reason": {
            "type": "string",
            "description": "* Begründungstext für die Lieferantenretoure\r\n* Text describing the reason for return to supplier",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Nummer\r\n* number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Department.DepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Abeilung-Nummer\r\n* Department number",
            "format": "int32",
            "nullable": true,
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "* Name der Abteilung\r\n* Name of the department",
            "nullable": true,
            "example": "Herren-Bekleidung"
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für die Abteilung\r\n* Searchterm for the department",
            "nullable": true,
            "example": "Herren"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Deposit.DepositDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschrift-Nummer\r\n* Credit number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status (0 = offen, 1 = erledigt)\r\n* Status (0 = open, 1 = cleared)",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert \r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunden-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "valueRedeemed": {
            "type": "number",
            "description": "* Eingelöster Wert\r\n* Redeemed value",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.DispatchAdvice.DispatchAdviceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "dispatchAdviceNumber": {
            "type": "string",
            "description": "* Lieferschein-Nummer\r\n* Dispatch advice number",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferanten-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale\r\n* Branch",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* ArticleSize-Nummer (EAN)\r\n* ArticleSize number (EAN)",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionCreateDTO": {
        "required": [
          "branchNumber",
          "number",
          "positions",
          "supplierNumber"
        ],
        "type": "object",
        "properties": {
          "number": {
            "minLength": 1,
            "type": "string",
            "description": "* Lieferschein-Nummer\r\n* Dispatch advice number"
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferanten-Nummer\r\n* Supplier number",
            "format": "int32"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale\r\n* Branch",
            "format": "int32"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionPositionCreateDTO"
            },
            "description": "* Liste von Positionen\r\n* List of positions"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Wareneingangsprüfung\r\n* Registration of a dispatch advice check"
      },
      "api.Contract.DispatchAdviceCheckInstruction.DispatchAdviceCheckInstructionPositionCreateDTO": {
        "required": [
          "articleSizeNumber"
        ],
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "number",
            "description": "* ArticleSize-Nummer (EAN)\r\n* ArticleSize number (EAN)",
            "format": "double"
          },
          "amount": {
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.FullDataExport.FullDataExportDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID, kann am GET Endpunkt verwendet werden um die Datei ab zu rufen\r\n* Unique identifier, can be used on the GET endpoint to request the file",
            "format": "uuid",
            "example": ""
          },
          "numberOfRecords": {
            "type": "integer",
            "description": "* Anzahl an Datensätzen\r\n* Number of records",
            "format": "int32",
            "nullable": true
          },
          "sizeInBytes": {
            "type": "integer",
            "description": "* Größe in Bytes\r\n* Size in bytes",
            "format": "int32",
            "nullable": true
          },
          "requestedUTC": {
            "type": "string",
            "description": "* Zeitpunkt der Erstellungsanfrage\r\n* Timestamp of the request",
            "format": "date-time",
            "example": ""
          },
          "createdUTC": {
            "type": "string",
            "description": "* Zeitpunkt der Generierung des Exports\r\n* Timestamp of the creation of the export",
            "format": "date-time",
            "nullable": true,
            "example": ""
          },
          "continueWithChangeId": {
            "type": "integer",
            "description": "* ChangeId zur Nutzung als To Parameter an Changed Endpunkten\r\n* ChangeId for usage as To Parameter on changed endpoints",
            "format": "int64",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.FullDataExport.FullDataExportStatus"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.FullDataExport.FullDataExportStatus": {
        "enum": [
          "InQueue",
          "Postponed",
          "Generating",
          "Ready"
        ],
        "type": "string"
      },
      "api.Contract.Function.FunctionDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name der Funktion\r\n* Name of the function",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für die Funktion\r\n* Searchterm for the function",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Funktion-Nummer\r\n* Function number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Gender": {
        "enum": [
          "Neutral",
          "Female",
          "Male",
          "Family"
        ],
        "type": "string"
      },
      "api.Contract.GeneralCategory.GeneralCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Oberwarengruppe-Nummer\r\n* General category number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Oberwarengruppe\r\n* Name of the General category",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Oberwarengruppe\r\n* Searchterm of the General category",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.InboundIntake.InboundIntakeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Ziel Filiale-Nummer\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "Artikel-Größe-Nummer\r\nArticle size number",
            "format": "double",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "Währungs-Key\r\nCurrency key",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "Personal-Nummer\r\nStaff number",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Belegnummer\r\nNumber",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Wareneingangsdatum\r\nIntake date",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "Einkaufspreis\r\nPurchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "Information\r\nInformation",
            "nullable": true
          },
          "supplierIntakeNumber": {
            "type": "string",
            "description": "Belegnummer des Lieferanten\r\nReceiptnumber provided by the supplier",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Positions-Nummer auf dem Beleg\r\nPosition number on the",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "description": "Rechnungsnummer des Lieferanten\r\nInvoice number of the supplier",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Artikelmnege der Position\r\nQuantity of articles for this positions",
            "format": "double",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "Beleg Zeit\r\nReceipt time",
            "format": "int32",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "Verkaufspreis\r\nSale price of the individual position",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "Etikettenpreis\r\nPrice of the current position as denoted on the label",
            "format": "double",
            "nullable": true
          },
          "fromBranchNumber": {
            "type": "integer",
            "description": "Quell Filial-Nummer\r\nSource branch number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.InboundMisc.InboundMiscDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Ziel Filiale-Nummer\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "Artikel-Größe-Nummer\r\nArticle size number",
            "format": "double",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "Währungs-Key\r\nCurrency key",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "Personal-Nummer\r\nStaff number",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Belegnummer\r\nNumber",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Wareneingangsdatum\r\nIntake date",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "Einkaufspreis\r\nPurchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "Information\r\nInformation",
            "nullable": true
          },
          "supplierIntakeNumber": {
            "type": "string",
            "description": "Belegnummer des Lieferanten\r\nReceiptnumber provided by the supplier",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Positions-Nummer auf dem Beleg\r\nPosition number on the receipt",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "description": "Rechnungsnummer des Lieferanten\r\nInvoice number of the supplier",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Artikelmnege der Position\r\nQuantity of articles for this positions",
            "format": "double",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "Beleg Zeit\r\nReceipt time",
            "format": "int32",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "Verkaufspreis\r\nSale price of the individual position",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "Etikettenpreis\r\nPrice of the current position as denoted on the label",
            "format": "double",
            "nullable": true
          },
          "fromBranchNumber": {
            "type": "integer",
            "description": "Quell Filial-Nummer\r\nSource branch number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.InboundTransfer.InboundTransferDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Ziel Filiale-Nummer\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "Artikel-Größe-Nummer\r\nArticle size number",
            "format": "double",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "Währungs-Key\r\nCurrency key",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "Personal-Nummer\r\nStaff number",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "Belegnummer\r\nNumber",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "Wareneingangsdatum\r\nIntake date",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "Einkaufspreis\r\nPurchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "Information\r\nInformation",
            "nullable": true
          },
          "supplierIntakeNumber": {
            "type": "string",
            "description": "Belegnummer des Lieferanten\r\nReceiptnumber provided by the supplier",
            "nullable": true
          },
          "position": {
            "type": "integer",
            "description": "Positions-Nummer auf dem Beleg\r\nPosition number",
            "format": "int32",
            "nullable": true
          },
          "supplierInvoiceNumber": {
            "type": "string",
            "description": "Rechnungsnummer des Lieferanten\r\nInvoice number of the supplier",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "Artikelmnege der Position\r\nQuantity of articles for this positions",
            "format": "double",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "Beleg Zeit\r\nReceipt time",
            "format": "int32",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "Verkaufspreis\r\nSale price of the individual position",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "Etikettenpreis\r\nPrice of the current position as denoted on the label",
            "format": "double",
            "nullable": true
          },
          "fromBranchNumber": {
            "type": "integer",
            "description": "Quell Filial-Nummer\r\nSource branch number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Inventory.InventoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "shopNumber": {
            "type": "integer",
            "description": "* Shop-Nummer\r\n* Shop number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "active": {
            "type": "boolean",
            "description": "* Aktiv\r\n* Active",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "stocktakingDate": {
            "type": "string",
            "description": "* Aufnahmedatum\r\n* Stocktaking date",
            "format": "date",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/api.Contract.Inventory.InventoryType"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Inventory.InventoryType": {
        "enum": [
          "Category",
          "Supplier",
          "Shop"
        ],
        "type": "string"
      },
      "api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO": {
        "required": [
          "branchNumber",
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionPositionCreateDTO"
            },
            "description": "* Liste von Artikeln\r\n* List of articles"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Inventurdifferenz\r\n* Registration of an inventory discrepancy"
      },
      "api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionPositionCreateDTO": {
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "articleVariantId": {
            "type": "string",
            "description": "* Alternative eindeutige ID des Artikels\r\n* Alternate unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "ean": {
            "type": "integer",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "int64",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "* Anzahl\r\n* Quantity",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Invoice.InvoiceDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "paymentDueDate": {
            "type": "string",
            "description": "* Fälligkeitsdatum der Rechnung\r\n* Due date of the invoice",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Rechnung-Nummer\r\n* Invoice number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status (0 = offen, 1 = erledigt, 10+ = in Mahnung)\r\n* Status (0 = open, 1 = cleared, 10+ = overdue)",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "valueCleared": {
            "type": "number",
            "description": "* Bezahlter wert\r\n* Cleared amvalueount",
            "format": "double",
            "nullable": true
          },
          "webPaymentOptionNumber": {
            "type": "integer",
            "description": "* Web-Zahlungsart-Nummer\r\n* Web payment option number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.LabelType.LabelTypeDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name des Etikettentyps\r\n* Name of the label type",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für den Etikettentyp\r\n* Searchterm for the label type",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Etikettentyp-Nummer\r\n* Label type number",
            "format": "int32",
            "nullable": true
          },
          "printDefinitionId": {
            "type": "string",
            "description": "* Druckvorlagen ID\r\n* PrintDefinition ID",
            "format": "uuid",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.MainCategory.MainCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Hauptwarengruppe-Nummer\r\n* Main category number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Hauptwarengruppe\r\n* Name of the main category",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Hauptwarengruppe\r\n* Searchterm of the main category",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.MainDepartment.MainDepartmentDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Hauptabteilung-Nummer\r\n* Main department number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Hauptabteilung\r\n* Name of the main department",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Hauptabteilung\r\n* Searchterm of the main department",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Material.MaterialDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name des Materials\r\n* Name of the material",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für das Material\r\n* Searchterm for the material",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Material-Nummer\r\n* Material number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.MinimumStock.MinimumStockDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "sizeRangeNumber": {
            "type": "integer",
            "description": "* Größengruppennummer\r\n* Size group number",
            "format": "int32",
            "nullable": true
          },
          "sizePosition": {
            "type": "integer",
            "description": "* Laufende Nummer der Größe\r\n* Position in the size group",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "description": "* Größe\r\n* Size",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "Nummer der Artikelgröße\r\nNumber of the article size",
            "format": "double",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "Lieferant-Nummer\r\nSupplier number",
            "format": "int32",
            "nullable": true
          },
          "isAutomaticReorder": {
            "type": "boolean",
            "description": "Gibt an ob es sich um automatische Nachbestellung handelt\r\nDefines if an automatic order is triggered",
            "nullable": true
          },
          "minimumOrderAmount": {
            "type": "number",
            "description": "Definiert den minimalen Bestellwert\r\nDefines the minimum amount to be ordered",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "fromYear": {
            "type": "integer",
            "description": "* Aktiv von (Jahr)\r\n* Active from (year)",
            "format": "int32",
            "nullable": true
          },
          "untilYear": {
            "type": "integer",
            "description": "* Aktiv bis (Jahr)\r\n* Active until (year)",
            "format": "int32",
            "nullable": true
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Lieferanten-Artikelnummer\r\n* Supplier article number",
            "nullable": true
          },
          "supplierArticleColor": {
            "type": "string",
            "description": "* Lieferanten-Artikelfarbe\r\n* Supplier article color",
            "nullable": true
          },
          "fromMonth": {
            "type": "integer",
            "description": "* Aktiv von (Monat)\r\n* Active from (month)",
            "format": "int32",
            "nullable": true
          },
          "untilMonth": {
            "type": "integer",
            "description": "* Aktiv bis (Monat)\r\n* Active until (month)",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Abgangs-Beleg-Nr.\r\n* Number",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Abgangsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "supplierPurchasePrice": {
            "type": "number",
            "description": "* Lieferanteneinkaufspreis\r\n* Supplier purchase price",
            "format": "double",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Netto-Einkaufspreis\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Zusatzinformationen\r\n* Additional information",
            "nullable": true,
            "example": ""
          },
          "position": {
            "type": "integer",
            "description": "* Positionsnummer\r\n* Position",
            "format": "int32",
            "nullable": true
          },
          "reportNumber": {
            "type": "integer",
            "description": "* Reportnummer\r\n* Report number",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personalnummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "targetBranchNumber": {
            "type": "integer",
            "description": "* Zielfiliale\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.OutboundMisc.OutboundMiscDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Abgangs-Beleg-Nr.\r\n* Number",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Abgangsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "supplierPurchasePrice": {
            "type": "number",
            "description": "* Lieferanteneinkaufspreis\r\n* Supplier purchase price",
            "format": "double",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Netto-Einkaufspreis\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Zusatzinformationen\r\n* Additional information",
            "nullable": true,
            "example": ""
          },
          "position": {
            "type": "integer",
            "description": "* Positionsnummer\r\n* Position",
            "format": "int32",
            "nullable": true
          },
          "reportNumber": {
            "type": "integer",
            "description": "* Reportnummer\r\n* Report number",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personalnummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "targetBranchNumber": {
            "type": "integer",
            "description": "* Zielfiliale\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Abgangs-Beleg-Nr.\r\n* Number",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Abgangsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "supplierPurchasePrice": {
            "type": "number",
            "description": "* Lieferanteneinkaufspreis\r\n* Supplier purchase price",
            "format": "double",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Netto-Einkaufspreis\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Zusatzinformationen\r\n* Additional information",
            "nullable": true,
            "example": ""
          },
          "position": {
            "type": "integer",
            "description": "* Positionsnummer\r\n* Position",
            "format": "int32",
            "nullable": true
          },
          "reportNumber": {
            "type": "integer",
            "description": "* Reportnummer\r\n* Report number",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personalnummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "targetBranchNumber": {
            "type": "integer",
            "description": "* Zielfiliale\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.OutboundTransfer.OutboundTransferDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Abgangs-Beleg-Nr.\r\n* Number",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Abgangsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "supplierPurchasePrice": {
            "type": "number",
            "description": "* Lieferanteneinkaufspreis\r\n* Supplier purchase price",
            "format": "double",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Netto-Einkaufspreis\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Zusatzinformationen\r\n* Additional information",
            "nullable": true,
            "example": ""
          },
          "position": {
            "type": "integer",
            "description": "* Positionsnummer\r\n* Position",
            "format": "int32",
            "nullable": true
          },
          "reportNumber": {
            "type": "integer",
            "description": "* Reportnummer\r\n* Report number",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personalnummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "targetBranchNumber": {
            "type": "integer",
            "description": "* Zielfiliale\r\n* Target branch number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "integer",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Liefereantennummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Pattern.PatternDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name des Dessin\r\n* Name of the pattern",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für das Dessin\r\n* Searchterm for the pattern",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Dessin-Nummer\r\n* Pattern number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Payment.PaymentDTO": {
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Date\r\n* Datum",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "cashierNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Cashier number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status (0 = offen, 1 = erledigt)\r\n* Status (0 = open, 1 = cleared)",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true,
            "example": ""
          },
          "invoiceDate": {
            "type": "string",
            "description": "* Datum der Rechnung\r\n* Date of the invoice",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "invoiceNumber": {
            "type": "integer",
            "description": "* Rechnung-Nummer\r\n* Invoice number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PaymentOption.PaymentOptionDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Zahlungsart-Nummer\r\n* Payment option number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Zahlungsart\r\n* Name of the payment option",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PriceReductionInstruction.PriceReductionInstructionCreateDTO": {
        "required": [
          "positions"
        ],
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "* Beschreibung\r\n* Description",
            "nullable": true
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PriceReductionInstruction.PriceReductionInstructionPositionCreateDTO"
            },
            "description": "* Liste von Artikeln\r\n* List of articles"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Preisänderung\r\n* Registration of a price reduction"
      },
      "api.Contract.PriceReductionInstruction.PriceReductionInstructionPositionCreateDTO": {
        "required": [
          "articleSizeNumber",
          "branchNumber",
          "price"
        ],
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "number",
            "description": "* ArticleSize-Nummer (EAN)\r\n* ArticleSize number (EAN)",
            "format": "double"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "price": {
            "type": "number",
            "description": "* Neuer Preis\r\n* New price",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PurchaseOrder.OrderSource": {
        "enum": [
          "CustomerOrder",
          "AutomaticOrder"
        ],
        "type": "string"
      },
      "api.Contract.PurchaseOrder.OrderStatus": {
        "enum": [
          "Done",
          "Processing"
        ],
        "type": "string"
      },
      "api.Contract.PurchaseOrder.OrderType": {
        "enum": [
          "Normal",
          "BlockOrder"
        ],
        "type": "string"
      },
      "api.Contract.PurchaseOrder.PurchaseOrderDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Nummer\r\n* number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "source": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.OrderSource"
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferantennummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "supplierOrderId": {
            "type": "string",
            "description": "* Bestellnummer des Lieferanten\r\n* Order id of the supplier",
            "nullable": true
          },
          "merchantNumber": {
            "type": "integer",
            "description": "Händler-Nummer (Referenz verweist auf einen Datensatz der über den Lieferanten Endpunkt bezogen werden kann)\r\nMerchant number (reference points to a record from the supplier endpoint)",
            "format": "int32",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Infotext\r\n* Info text",
            "nullable": true
          },
          "overallDiscount": {
            "type": "number",
            "description": "* Gesamtrabatt\r\n* Overall discount",
            "format": "double",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.OrderStatus"
          },
          "type": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.OrderType"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionArticleCreateDTO": {
        "required": [
          "supplierArticleNumber",
          "supplierColor"
        ],
        "type": "object",
        "properties": {
          "seasonNumber": {
            "type": "integer",
            "description": "* Saison-Nummer\r\n* Season number",
            "format": "int32",
            "nullable": true
          },
          "colorNumber": {
            "type": "integer",
            "description": "* Farbe-Nummer\r\n* Color number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32"
          },
          "shopNumber": {
            "type": "integer",
            "description": "* Shop-Nummer\r\n* Shop number",
            "format": "int32",
            "nullable": true
          },
          "materialNumber": {
            "type": "integer",
            "description": "* Material-Nummer\r\n* Material number",
            "format": "int32",
            "nullable": true
          },
          "targetGroupNumber": {
            "type": "integer",
            "description": "* Zielgruppe-Nummer\r\n* Target group number",
            "format": "int32",
            "nullable": true
          },
          "shapeNumber": {
            "type": "integer",
            "description": "* Form-Nummer\r\n* Shape number",
            "format": "int32",
            "nullable": true
          },
          "patternNumber": {
            "type": "integer",
            "description": "* Dessin-Nummer\r\n* Pattern number",
            "format": "int32",
            "nullable": true
          },
          "functionNumber": {
            "type": "integer",
            "description": "* Funktion-Nummer\r\n* Function number",
            "format": "int32",
            "nullable": true
          },
          "labelTypeNumber": {
            "type": "integer",
            "description": "* Etikettentyp-Nummer\r\n* Label type number",
            "format": "int32",
            "nullable": true
          },
          "supplierArticleNumber": {
            "minLength": 1,
            "type": "string",
            "description": "* Artikelnummer laut Lieferant\r\n* Atticlenumber given by the supplier"
          },
          "supplierColor": {
            "minLength": 1,
            "type": "string",
            "description": "* Farbbezeichnung laut Lieferant\r\n* Colorname given by the supplier"
          },
          "individualArticleNumber": {
            "type": "string",
            "description": "* Eigene Artikelnummer des Händlers\r\n* Individually given articlenumber by the retailer",
            "nullable": true
          },
          "expectedArrivalFrom": {
            "type": "string",
            "description": "* Frühstes Datum an dem die Order erwartet wird\r\n* Minimal expected arrival date",
            "format": "date-time",
            "nullable": true
          },
          "expectedArrivalUntil": {
            "type": "string",
            "description": "* Spähtestes Datum an dem die Order erwartet wird\r\n* Maximal expected arrival date",
            "format": "date-time",
            "nullable": true
          },
          "description1": {
            "type": "string",
            "description": "* Beschreibung 1\r\n* Description 1",
            "nullable": true
          },
          "description2": {
            "type": "string",
            "description": "* Beschreibung 2\r\n* Description",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double"
          },
          "salePrice": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Price the size sales for",
            "format": "double"
          },
          "discountedSalePrice": {
            "type": "number",
            "description": "* Reduzierter Verkaufspreis\r\n* Discounted sale price",
            "format": "double",
            "nullable": true
          },
          "sizeType": {
            "type": "string",
            "description": "* Typ der Größen (z.B.: EU, US oder UK)\r\n* Typ for sizes (e.g.: EU, US or UK)",
            "nullable": true
          },
          "createProduct": {
            "type": "boolean",
            "description": "* Webshopaktikel kreieren\r\n* Create webshop article",
            "nullable": true
          },
          "isNOS": {
            "type": "boolean",
            "description": "* NOS\r\n* NOS",
            "nullable": true
          },
          "imageURL": {
            "type": "string",
            "description": "* Bildname für den Artikel\r\n* Imagename of the article",
            "nullable": true
          },
          "purchasingSection": {
            "type": "integer",
            "description": "* Einkaufsabschnitt\r\n* Purchasing section",
            "format": "int32",
            "nullable": true
          },
          "labelNumber": {
            "type": "integer",
            "description": "* Label Nummer\r\n* Label number",
            "format": "int32",
            "nullable": true
          },
          "catmanDate": {
            "type": "string",
            "description": "* Catman Datum\r\n* Catman date",
            "format": "date-time",
            "nullable": true
          },
          "brochureFlag": {
            "type": "string",
            "description": "* Prospekt Kennzeichen\r\n* Brochure flag",
            "nullable": true
          },
          "articleSizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionArticleSizeCreateDTO"
            },
            "description": "* Liste von Größen\r\n* List of sizes",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionArticleSizeCreateDTO": {
        "type": "object",
        "properties": {
          "ean": {
            "type": "number",
            "description": "* EAN\r\n* EAN",
            "format": "double",
            "nullable": true
          },
          "size": {
            "type": "string",
            "description": "* Groesse\r\n* Size",
            "nullable": true
          },
          "size_y": {
            "type": "string",
            "description": "* Länge der Größe\r\n* Length of the size",
            "nullable": true
          },
          "sizeRangeNumber": {
            "type": "integer",
            "description": "* Groessengruppen Nummer\r\n* Size group number",
            "format": "int32"
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double"
          },
          "salePrice": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Price the size sales for",
            "format": "double"
          },
          "discountedSalePrice": {
            "type": "number",
            "description": "* Reduzierter Verkaufspreis\r\n* Discounted sale price",
            "format": "double",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionCreateDTO": {
        "required": [
          "articles",
          "branchNumber"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "string",
            "description": "* Order-Number\r\n* order number",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "description": "* Beschreibung\r\n* Description",
            "nullable": true
          },
          "isEDI": {
            "type": "boolean",
            "description": "* Markiert die Order als EDI\r\n* Marks the order as EDI"
          },
          "articles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderInstruction.PurchaseOrderInstructionArticleCreateDTO"
            },
            "description": "* Liste von Artikeln\r\n* List of articles"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Order\r\n* Registration of an order"
      },
      "api.Contract.PurchaseOrderPosition.OrderDistribution": {
        "enum": [
          "NoDistribution",
          "Pending",
          "Partial",
          "Complete",
          "DistributorBookedInOrder"
        ],
        "type": "string"
      },
      "api.Contract.PurchaseOrderPosition.OrderPositionType": {
        "enum": [
          "Order",
          "Order1",
          "PreOrder",
          "PreOrder1",
          "PostOrder",
          "PostOrder1",
          "EDI",
          "EDI1"
        ],
        "type": "string"
      },
      "api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kundennummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "warningCount": {
            "type": "integer",
            "description": "* Anzahl Mahnungen\r\n* Number of warnings issued",
            "format": "int32",
            "nullable": true
          },
          "expectedArrivalFrom": {
            "type": "string",
            "description": "* Frühestes erwartetes Lieferdatum\r\n* Earliest expected date of arrival",
            "format": "date",
            "nullable": true
          },
          "expectedArrivalUntil": {
            "type": "string",
            "description": "* Spätestes erwartetes Lieferdatum\r\n* Latest expected date of arrival",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkauspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "sectionNumber": {
            "type": "integer",
            "description": "* Abschnittsnummer\r\n* Section number",
            "format": "int32",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis (netto)\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Infotext\r\n* Info text",
            "nullable": true
          },
          "isConsignment": {
            "type": "boolean",
            "description": "* Kennzeichen für Kommisionsware\r\n* Flag for consignment article",
            "nullable": true
          },
          "deliveredPurchaseValue": {
            "type": "number",
            "description": "* Einkaufswert der ausgelieferten Waren\r\n* Purchase value of delivered goods",
            "format": "double",
            "nullable": true
          },
          "deliveredAmount": {
            "type": "number",
            "description": "* Anzahl der ausgelieferten Waren\r\n* Amount of delivered goods",
            "format": "double",
            "nullable": true
          },
          "deliveredSaleValue": {
            "type": "number",
            "description": "* Verkaufswert der ausgelieferten Waren\r\n* Sale value of delivered goods",
            "format": "double",
            "nullable": true
          },
          "firstWarningDate": {
            "type": "string",
            "description": "* Erstes Mahndatum\r\n* First warning issue date",
            "format": "date",
            "nullable": true
          },
          "lastWarningDate": {
            "type": "string",
            "description": "* Letztes Mahndatum\r\n* Last warning issue date",
            "format": "date",
            "nullable": true
          },
          "isNOS": {
            "type": "boolean",
            "description": "* Kennzeichen für NOS-Artikel\r\n* Flag for never out of stock articles",
            "nullable": true
          },
          "orderPurchaseValue": {
            "type": "number",
            "description": "* Einkaufswert der bestellten Waren\r\n* Purchase value of ordered goods",
            "format": "double",
            "nullable": true
          },
          "orderAmount": {
            "type": "number",
            "description": "* Anzahl der bestellten Waren\r\n* Amount of ordered goods",
            "format": "double",
            "nullable": true
          },
          "orderSaleValue": {
            "type": "number",
            "description": "* Verkaufswert der bestellten Waren\r\n* Sale value of ordered goods",
            "format": "double",
            "nullable": true
          },
          "discountPercent": {
            "type": "number",
            "description": "* Rabatt in Prozent\r\n* Discount in percent",
            "format": "double",
            "nullable": true
          },
          "backlogPurchaseValue": {
            "type": "number",
            "description": "* Einkaufswert der Rückstandswaren\r\n* Purchase value of backlog goods",
            "format": "double",
            "nullable": true
          },
          "backlogAmount": {
            "type": "number",
            "description": "* Anzahl der Rückstandswaren\r\n* Amount of backlog goods",
            "format": "double",
            "nullable": true
          },
          "backlogSaleValue": {
            "type": "number",
            "description": "* Verkaufswert der Rückstandswaren\r\n* Sale value of backlog goods",
            "format": "double",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.OrderStatus"
          },
          "type": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.OrderPositionType"
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Label price",
            "format": "double",
            "nullable": true
          },
          "distributedPurchaseValue": {
            "type": "number",
            "description": "* Einkaufswert der verteilten Waren\r\n* Purchase value of distributed goods",
            "format": "double",
            "nullable": true
          },
          "hasDistributor": {
            "type": "boolean",
            "description": "* Kennzeichen für Verteiler\r\n* Flag for distributor",
            "nullable": true
          },
          "distributionStatus": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.OrderDistribution"
          },
          "distributedAmount": {
            "type": "number",
            "description": "* Anzahl der verteilten Waren\r\n* Amount of distributed goods",
            "format": "double",
            "nullable": true
          },
          "distributedSaleValue": {
            "type": "number",
            "description": "* Verkaufswert der verteilten Waren\r\n* Sale value of distributed goods",
            "format": "double",
            "nullable": true
          },
          "isWebProduct": {
            "type": "boolean",
            "description": "* Kennzeichen für Webartikel\r\n* Flag for web product",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personalnummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Nummer\r\n* number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "integer",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "int32",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "sizeRangeNumber": {
            "type": "integer",
            "description": "* Größengruppennummer\r\n* Size group number",
            "format": "int32",
            "nullable": true
          },
          "sizePosition": {
            "type": "integer",
            "description": "* Laufende Nummer der Größe\r\n* Position in the size group",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "description": "* Größe\r\n* Size",
            "nullable": true
          },
          "ean": {
            "type": "number",
            "description": "* Original-EAN\r\n* Original EAN",
            "format": "double",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "netPurchasePrice": {
            "type": "number",
            "description": "* Netto Einkaufspreis\r\n* Net purchase price",
            "format": "double",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Numerische Id der Artikelgröße\r\n* Numeric id of the article size",
            "format": "double",
            "nullable": true
          },
          "isConsignment": {
            "type": "boolean",
            "description": "* Kennzeichen für Kommisionsware\r\n* Flag for consignment article",
            "nullable": true
          },
          "deliveredAmount": {
            "type": "number",
            "description": "* Anzahl der ausgelieferten Waren\r\n* Amount of delivered goods",
            "format": "double",
            "nullable": true
          },
          "orderAmount": {
            "type": "number",
            "description": "* Anzahl der bestellten Waren\r\n* Amount of ordered goods",
            "format": "double",
            "nullable": true
          },
          "backlogAmount": {
            "type": "number",
            "description": "* Anzahl der Rückstandswaren\r\n* Amount of backlog goods",
            "format": "double",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.OrderStatus"
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Label price",
            "format": "double",
            "nullable": true
          },
          "distributionStatus": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.OrderDistribution"
          },
          "distributedAmount": {
            "type": "number",
            "description": "* Anzahl der verteilten Waren\r\n* Amount of distributed goods",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Receipt.ReceiptDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "customerSalutation": {
            "type": "string",
            "description": "* Kunde-Anrede\r\n* Customer salutation",
            "nullable": true
          },
          "customerCountry": {
            "type": "string",
            "description": "* Kunde-Land\r\n* Customer country",
            "nullable": true
          },
          "customerName1": {
            "type": "string",
            "description": "* Kunde-Name 1\r\n* Customer name 1",
            "nullable": true
          },
          "customerName2": {
            "type": "string",
            "description": "* Kunde-Name 2\r\n* Customer name 2",
            "nullable": true
          },
          "customerCity": {
            "type": "string",
            "description": "* Kunde-Ort\r\n* Customer city",
            "nullable": true
          },
          "customerZipCode": {
            "type": "string",
            "description": "* Kunde-PLZ\r\n* Customer ZIP code",
            "nullable": true
          },
          "customerStreet": {
            "type": "string",
            "description": "* Kunde-Strasse\r\n* Customer street",
            "nullable": true
          },
          "customerTitel": {
            "type": "string",
            "description": "* Kunde-Titel\r\n* Customer titel",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "cashierNumber": {
            "type": "integer",
            "description": "* Kassierer-Nummer (Personal Endpunkt)\r\n* Cashier number (Staff endpoint)",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "* Zeit\r\n* Time",
            "format": "int32",
            "nullable": true
          },
          "taxPercentage1": {
            "type": "number",
            "description": "* Mehrwertsteuer Prozentsatz 1\r\n* Tax percentage 1",
            "format": "double",
            "nullable": true
          },
          "taxPercentage2": {
            "type": "number",
            "description": "* Mehrwertsteuer Prozentsatz 2\r\n* Tax percentage 2",
            "format": "double",
            "nullable": true
          },
          "taxPercentage3": {
            "type": "number",
            "description": "* Mehrwertsteuer Prozentsatz 3\r\n* Tax percentage 3",
            "format": "double",
            "nullable": true
          },
          "taxPercentage4": {
            "type": "number",
            "description": "* Mehrwertsteuer Prozentsatz 4\r\n* Tax percentage 4",
            "format": "double",
            "nullable": true
          },
          "taxPercentage5": {
            "type": "number",
            "description": "* Mehrwertsteuer Prozentsatz 5\r\n* Tax percentage 5",
            "format": "double",
            "nullable": true
          },
          "taxValue1": {
            "type": "number",
            "description": "* Mehrwertsteuer Wert 1\r\n* Tax value 1",
            "format": "double",
            "nullable": true
          },
          "taxValue2": {
            "type": "number",
            "description": "* Mehrwertsteuer Wert 2\r\n* Tax value 2",
            "format": "double",
            "nullable": true
          },
          "taxValue3": {
            "type": "number",
            "description": "* Mehrwertsteuer Wert 3\r\n* Tax value 3",
            "format": "double",
            "nullable": true
          },
          "taxValue4": {
            "type": "number",
            "description": "* Mehrwertsteuer Wert 4\r\n* Tax value 4",
            "format": "double",
            "nullable": true
          },
          "taxValue5": {
            "type": "number",
            "description": "* Mehrwertsteuer Wert 5\r\n* Tax value 5",
            "format": "double",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Bonwert\r\n* Receipt value",
            "format": "double",
            "nullable": true
          },
          "signingInformation": {
            "type": "number",
            "description": "* Signatur-Information (Wert kann als QR Code angezeigt werden oder anhand der ; getrennt werden)\r\n* Signing information (value can be displayed as QR Code or seperated by ;)",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ReceiptInformation.ReceiptInformationDTO": {
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "text": {
            "type": "string",
            "description": "* Text\r\n* Text",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO": {
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "description": {
            "type": "string",
            "description": "* Description\r\n* Description",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "* Wert\r\n* Amount",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ReceiptPosition.ReceiptPositionDTO": {
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artike-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "discount": {
            "type": "number",
            "description": "* Kunden-Rabatt\r\n* Customer discount",
            "format": "double",
            "nullable": true
          },
          "deduction": {
            "type": "number",
            "description": "* Nachlass\r\n* Deduction",
            "format": "double",
            "nullable": true
          },
          "staffDiscount": {
            "type": "number",
            "description": "* Personal-Rabatt\r\n* Staff discount",
            "format": "double",
            "nullable": true
          },
          "customerDiscount": {
            "type": "number",
            "description": "* Kunden-Rabatt\r\n* Customer discount",
            "format": "double",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "staffName": {
            "type": "string",
            "description": "* Personal-Name\r\n* Staff name",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Price on the label",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "* Text\r\n* Text",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptType"
          },
          "operatorNumber": {
            "type": "integer",
            "description": "* Bedienernummer\r\n* Operator number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ReceiptPosition.ReceiptType": {
        "enum": [
          "Text",
          "CustomerSale",
          "CustomerReturn",
          "StaffSale",
          "StaffReturn",
          "Selection",
          "SelectionReturn",
          "Voucher",
          "InvoiceClearence",
          "Deposit"
        ],
        "type": "string"
      },
      "api.Contract.RedeemedCoupon.RedeemedCouponDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique indentifier",
            "format": "uuid",
            "example": ""
          },
          "internetCode": {
            "type": "string",
            "description": "* Code für Internet Einlösung\r\n* Code for internet redemption",
            "nullable": true,
            "example": ""
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschein-Nummer\r\n* Coupon number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status, ob bereits der volle Betrag des Gutscheins eingelöst wurde (0 = offen, 1 = vollständig eingelöst)\r\n* Status whether the full amount of the coupon has been redeemed (0 = open, 1 = fully redeemed)",
            "format": "int32",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis Datum\r\n* Valid until date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "information": {
            "type": "string",
            "description": "* Gutscheinnotiz zur Information\r\n* Informational note",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.RedeemedVoucher.RedeemedVoucherCreateDTO": {
        "required": [
          "branchNumber",
          "value",
          "voucherId"
        ],
        "type": "object",
        "properties": {
          "voucherId": {
            "minLength": 1,
            "type": "string",
            "description": "* Gutschein ID\r\n* Voucher ID",
            "format": "uuid",
            "example": ""
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double"
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Persoanl-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.RedeemedVoucher.RedeemedVoucherDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique indentifier",
            "format": "uuid",
            "example": ""
          },
          "internetCode": {
            "type": "string",
            "description": "* Code für Internet Einlösung\r\n* Code for internet redemption",
            "nullable": true,
            "example": ""
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschein-Nummer\r\n* Voucher number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status, ob bereits der volle Betrag des Gutscheins eingelöst wurde (0 = offen, 1 = vollständig eingelöst)\r\n* Status whether the full amount of the voucher has been redeemed (0 = open, 1 = fully redeemed)",
            "format": "int32",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis Datum\r\n* Valid until date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "information": {
            "type": "string",
            "description": "* Gutscheinnotiz zur Information\r\n* Informational note",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Sale.SaleDTO": {
        "type": "object",
        "properties": {
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artike-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "purchasePrice": {
            "type": "number",
            "description": "* Einkaufspreis\r\n* Purchase price",
            "format": "double",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "cashierNumber": {
            "type": "integer",
            "description": "* Kassierer-Nummer (Personal Endpunkt)\r\n* Cashier number (Staff endpoint)",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Kunden-Rabatt\r\n* Customer discount",
            "format": "double",
            "nullable": true
          },
          "cashRegisterNumber": {
            "type": "integer",
            "description": "* Kasse-Nummer\r\n* Cash register number",
            "format": "int32",
            "nullable": true
          },
          "deduction": {
            "type": "number",
            "description": "* Nachlass\r\n* Deduction",
            "format": "double",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Kunden Postleitzahl\r\n* Customer ZIP code",
            "nullable": true
          },
          "staffDiscount": {
            "type": "number",
            "description": "* Personal-Rabatt\r\n* Staff discount",
            "format": "double",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "priceChangeReasonNumber": {
            "type": "integer",
            "description": "* Grund für Preisänderung\r\n* Reason for price change",
            "format": "int32",
            "nullable": true
          },
          "returnReasonNumber": {
            "type": "integer",
            "description": "* Grund für Rückgabe\r\n* Reason for return",
            "format": "int32",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "labelPrice": {
            "type": "number",
            "description": "* Etikettenpreis\r\n* Price on the label",
            "format": "double",
            "nullable": true
          },
          "paymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsart-Nummer\r\n* Payment option number",
            "format": "int32",
            "nullable": true
          },
          "time": {
            "type": "integer",
            "description": "* Zeit\r\n* Time",
            "format": "int32",
            "nullable": true
          },
          "isStaffSale": {
            "type": "boolean",
            "description": "* Gibt an ob es ein Personalkauf ist\r\n* Defines the sale as staff sale"
          },
          "alternativeReceiptNumber": {
            "type": "string",
            "description": "* Alternative Bon-Nummer (z.b. Auftragsnummer aus Web Auftrag)\r\n* Alternateive receipt number (e.g. Order number from web order)",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SaleCancellationInstruction.SaleCancellationInstructionCreateDTO": {
        "required": [
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "orderNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Auftrag-Nummer\r\n* Order number",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "* Eindeutige ID des Kunden\r\n* Unique identifier of the customer",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "format": "email",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf den Kauf (Rabatt auf einzelne Position nicht mit angeben)\r\n* Discount on the whole purchase (Do not include discounts on single positions)",
            "format": "double"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SaleCancellationInstruction.SaleCancellationInstructionPositionCreateDTO"
            },
            "description": "* Liste von Positionen\r\n* List of positions"
          }
        },
        "additionalProperties": false,
        "description": "* Anlage eines Storno für Webshop Zahlung\r\n* Creation of webshop payment cancelation"
      },
      "api.Contract.SaleCancellationInstruction.SaleCancellationInstructionPositionCreateDTO": {
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "integer",
            "description": "* Eindeutige Nummer des Artikels\r\n* Unique number of the product",
            "format": "int64",
            "nullable": true
          },
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "articleVariantId": {
            "type": "string",
            "description": "* Alternative eindeutige ID des Artikels\r\n* Alternate unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "ean": {
            "type": "integer",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "int64",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf die Position\r\n* Discount on the Position",
            "format": "double"
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "* Kommentar\r\n* Comment",
            "nullable": true
          },
          "amount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double"
          },
          "webPaymentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Zahlungsbedingungs-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "originalStockBranchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer aus der der Artikel ursprünglich bezogen wurde (Wenn gesetzt wird ein Transfer in diese Filiale gemacht)\r\n* Branch number where the article was originally picked from (If set it triggers a transfer into that branch)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SaleInstruction.SaleInstructionCreateDTO": {
        "required": [
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "externalOrderNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Auftrag-Nummer\r\n* Order number",
            "nullable": true
          },
          "customerId": {
            "type": "string",
            "description": "* Eindeutige ID des Kunden\r\n* Unique identifier of the customer",
            "format": "uuid",
            "nullable": true
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "format": "email",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf den Kauf (Rabatt auf einzelne Position nicht mit angeben)\r\n* Discount on the whole purchase (Do not include discounts on single positions)",
            "format": "double"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionPositionCreateDTO"
            },
            "description": "* Liste von Positionen\r\n* List of positions"
          },
          "voucherRecharges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionVoucherRechargeCreateDTO"
            },
            "description": "* Liste von in prohandel bekannten Gutscheine, die eine Aufladung erhalten sollen\r\n* List of vouchers that are known in prohandel and should become a recharge",
            "nullable": true
          },
          "redeemedVouchers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SaleInstruction.SaleInstructionVoucherRedemptionCreateDTO"
            },
            "description": "* Liste von in prohandel bekannten Gutscheine, die für den Kauf benutzt wurden\r\n* List of vouchers that are known in prohandel and used for the purchase",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Anlage einer Webshop Zahlung\r\n* Creation of webshop payment"
      },
      "api.Contract.SaleInstruction.SaleInstructionPositionCreateDTO": {
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "integer",
            "description": "* Eindeutige Nummer des Artikels\r\n* Unique number of the product",
            "format": "int64",
            "nullable": true
          },
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "articleVariantId": {
            "type": "string",
            "description": "* Alternative eindeutige ID des Artikels\r\n* Alternate unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "ean": {
            "type": "integer",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "int64",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double"
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt auf die Position\r\n* Discount on the Position",
            "format": "double"
          },
          "comment": {
            "maxLength": 80,
            "type": "string",
            "description": "* Kommentar\r\n* Comment",
            "nullable": true
          },
          "amount": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double"
          },
          "paymentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Zahlungsbedingungs-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "stockBranchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer in der der Artikel Bestand hat (Wenn gesetzt wird ein Transfer in die Buchungsfiliale gemacht)\r\n* Branch number where the article has stock (If set it triggers a transfer into the webshop branch)",
            "format": "int32",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Anlage einer Position\r\n* Create of a position"
      },
      "api.Contract.SaleInstruction.SaleInstructionVoucherRechargeCreateDTO": {
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "string",
            "description": "* Eindeutige ID des Gutscheins\r\n* Unique identifier of the voucher",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert der Aufladung\r\n* Value of the recharge",
            "format": "double"
          },
          "webPaymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsbedingungs-Nummer\r\n* Payment option number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "* Anlage einer Gutscheinaufladung\r\n* Create a voucher recharge"
      },
      "api.Contract.SaleInstruction.SaleInstructionVoucherRedemptionCreateDTO": {
        "type": "object",
        "properties": {
          "voucherId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert des Gutscheins\r\n* Value of the voucher",
            "format": "double"
          },
          "paymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsbedingungs-Nummer\r\n* Payment option number",
            "format": "int32"
          }
        },
        "additionalProperties": false,
        "description": "* Bezahlung mit Gutschein, der dem prohandel System bekannt ist\r\n* Payment with voucher that is known in prohandel"
      },
      "api.Contract.Season.SeasonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Saison-Nummer\r\n* Season number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Saison\r\n* Name of the season",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Saison\r\n* Searchterm of the season",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von\r\n* Valid from",
            "format": "date",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis\r\n* Valid until",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Selection.SelectionDTO": {
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "deduction": {
            "type": "number",
            "description": "* Nachlass\r\n* Deduction",
            "format": "double",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "discount": {
            "type": "number",
            "description": "* Rabatt\r\n* Discount",
            "format": "double",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Menge\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "text": {
            "type": "string",
            "description": "* Artikeltext\r\n* Article text",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status (0 = offen, 1 = in Rückgabe, 2 = berechnet)\r\n* Status (0 = open, 1 = to be returned, 2 = charged)",
            "format": "int32",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufswert\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Shape.ShapeDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name der Form\r\n* Name of the shape",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für die Form\r\n* Searchterm for the shape",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Form-Nummer\r\n* Shape number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Shipment.ShipmentDTO": {
        "type": "object",
        "properties": {
          "webOrderExternalOrderNumber": {
            "type": "string",
            "description": "* Externe order number des web auftrags\r\n* External order number of the web order",
            "nullable": true
          },
          "provider": {
            "type": "string",
            "description": "* Name des Versanddienstleisters\r\n* Name of the shipment provider",
            "nullable": true
          },
          "date": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "trackingNumber": {
            "type": "string",
            "description": "* Tracking-Nummer\r\n* Tracking number",
            "nullable": true
          },
          "isReturnLabel": {
            "type": "boolean",
            "description": "* Gibt an ob es sich um ein Retourenlabel handelt\r\n* Flag that defines the label as retourn label"
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.ShipmentOption.ShipmentOptionDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Versandart-Nummer\r\n* Shipment option number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Versandart\r\n* Name of the shipemtn option",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Versandart\r\n* Searchterm of the shipment option",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Shop.ShopDTO": {
        "type": "object",
        "properties": {
          "shopAreaNumber": {
            "type": "integer",
            "description": "* Shopbereich-Nummer\r\n* Shop area nummer",
            "format": "int32",
            "nullable": true
          },
          "mainShopNumber": {
            "type": "integer",
            "description": "* Hauptshop-Nummer\r\n* Main shop number",
            "format": "int32",
            "nullable": true
          },
          "staffNumber": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name des Shops\r\n* Name of the shop",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort des Shops\r\n* Searchterm of the shop",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Shop-Nummer\r\n* Shop number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Size.SizeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "sizeRangeNumber": {
            "type": "integer",
            "description": "* Größengruppe-Nummer\r\n* Size group number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Größe\r\n* Name of the size",
            "nullable": true,
            "example": ""
          },
          "position": {
            "type": "integer",
            "description": "* Position der Größe\r\n* Position of the size",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SizeGroup.SizeGroupDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Größengruppe-Nummer\r\n* Size class number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "* Name der Größengruppe\r\n* Name of the size class",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SizeRange.SizeRangeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Größengang-Nummer\r\n* Size range number",
            "format": "int32",
            "nullable": true
          },
          "sizeGroupNumber": {
            "type": "integer",
            "description": "* Größengruppen-Nummer\r\n* Size group number",
            "format": "int32",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort des Größengangs\r\n* Searchterm of the size group",
            "nullable": true,
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "* Name des Größengangs\r\n* Name of the size group",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SpecialPrice.SpecialPriceDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "webArticleId": {
            "type": "string",
            "description": "* Eindeutige ID des Webartikels\r\n* Unique id of the web article",
            "format": "uuid",
            "nullable": true
          },
          "webArticleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID der Webartikelgröße\r\n* Unique id of the web article size",
            "format": "uuid",
            "nullable": true
          },
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID der Artikelgröße\r\n* Unique id of the article size",
            "format": "uuid",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "specialPrice": {
            "type": "number",
            "description": "* Sonderpreis Wert\r\n* Special price value",
            "format": "double",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis Datum\r\n* Valid until Date",
            "format": "date",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Nummer ArticleSize\r\n* Number of the articleSize",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Staff.StaffDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country key",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "* Kennzeichnet das Personal als aktiv\r\n* Flags the staff as active",
            "nullable": true
          },
          "salutation": {
            "type": "string",
            "description": "* Persönliche Anrede\r\n* Personal salutation",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/api.Contract.Gender"
          },
          "jobTitle": {
            "type": "string",
            "description": "* Berufsbezeichnung\r\n* Job title",
            "nullable": true
          },
          "imageName": {
            "type": "string",
            "description": "* Bildname\r\n* Image name",
            "nullable": true
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bank number",
            "format": "int32",
            "nullable": true
          },
          "personalEmail": {
            "type": "string",
            "description": "* Private E-Mail Adresse\r\n* Private E-Mail address",
            "nullable": true
          },
          "companyEmail": {
            "type": "string",
            "description": "* Geschäftliche E-Mail Adresse\r\n* Company E-Mail address",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "description": "* Geburtsdatum\r\n* Date of birth",
            "format": "date",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "information": {
            "type": "string",
            "description": "* Informationen über den Mitarbeiter\r\n* Information about the employe",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "description": "* Kontonummer\r\n* Bank account number",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für den Mitarbeiter\r\n* Searchterm for the employe",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "* Handy-Nummer\r\n* Mobile phone number",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "description": "* Nachname\r\n* Last name",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Personal-Nummer\r\n* Staff number",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true
          },
          "personalSalutation": {
            "type": "string",
            "description": "* Persönliche Anrede\r\n* Personal salutation",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "firstName": {
            "type": "string",
            "description": "* Vorname\r\n* First name",
            "nullable": true
          },
          "entryDate": {
            "type": "string",
            "description": "* Eintrittsdatum\r\n* Entry date",
            "format": "date",
            "nullable": true
          },
          "exitDate": {
            "type": "string",
            "description": "* Austrittsdatum\r\n* Exit date",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO": {
        "required": [
          "branchNumber",
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "compartmentNumber": {
            "type": "integer",
            "description": "* Fach-Nummer\r\n* Compartment number",
            "format": "int32"
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.StocktakingInstruction.StocktakingInstructionPositionCreateDTO"
            },
            "description": "* Liste von Artikeln\r\n* List of articles"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Inventurdifferenz\r\n* Registration of an inventory discrepancy"
      },
      "api.Contract.StocktakingInstruction.StocktakingInstructionPositionCreateDTO": {
        "required": [
          "articleSizeId",
          "quantity"
        ],
        "type": "object",
        "properties": {
          "articleSizeId": {
            "minLength": 1,
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid"
          },
          "ean": {
            "type": "integer",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "int64",
            "nullable": true
          },
          "quantity": {
            "type": "integer",
            "description": "* Anzahl\r\n* Quantity",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Supplier.SupplierDTO": {
        "type": "object",
        "properties": {
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency number",
            "nullable": true
          },
          "countryKey": {
            "type": "string",
            "description": "* Land-Nummer\r\n* Country number",
            "nullable": true
          },
          "isActive": {
            "type": "boolean",
            "description": "* Kennzeichent den Lieferanten als aktiv\r\n* Flags the supplier as active",
            "nullable": true
          },
          "isEDI": {
            "type": "boolean",
            "description": "* Kennzeichent den Lieferanten für EDI\r\n* Flags the supplier for EDI",
            "nullable": true
          },
          "bankCode": {
            "type": "integer",
            "description": "* Bankleitzahl\r\n* Bank code",
            "format": "int32",
            "nullable": true
          },
          "email": {
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "nullable": true
          },
          "fax": {
            "type": "string",
            "description": "* Fax-Nummer\r\n* Fax number",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "website": {
            "type": "string",
            "description": "* Webseite des Lieferanten\r\n* Website of the supplier",
            "nullable": true
          },
          "iban": {
            "type": "string",
            "description": "* IBAN\r\n* IBAN",
            "nullable": true
          },
          "information": {
            "type": "string",
            "description": "* Informationen über den Lieferanten\r\n* Information about the supplier",
            "nullable": true
          },
          "information2": {
            "type": "string",
            "description": "* Mehr Informationen über den Lieferanten\r\n* More information about the supplier",
            "nullable": true
          },
          "bankAccount": {
            "type": "string",
            "description": "* Konto-Nummer\r\n* Bank account number",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort für den Lieferanten\r\n* Searchterm for the supplier",
            "nullable": true
          },
          "mobilePhone": {
            "type": "string",
            "description": "* Handy-Nummer\r\n* Mobile phone number",
            "nullable": true
          },
          "name1": {
            "type": "string",
            "description": "* Name 1\r\n* Name 1",
            "nullable": true
          },
          "name2": {
            "type": "string",
            "description": "* Name 2\r\n* Name 2",
            "nullable": true
          },
          "name3": {
            "type": "string",
            "description": "* Name 3\r\n* Name 3",
            "nullable": true
          },
          "number": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true
          },
          "bic": {
            "type": "string",
            "description": "* BIC\r\n* BIC",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "shipmentOptionNumber": {
            "type": "integer",
            "description": "* Versandart-Nummer\r\n* Shipment option number",
            "format": "int32",
            "nullable": true
          },
          "paymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsbedingung-Nummer\r\n* Payment option number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SupplierReturn.SupplierReturnDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "articleNumber": {
            "type": "integer",
            "description": "* Artikelnummer\r\n* Article number",
            "format": "int32",
            "nullable": true
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "* Artikel-Größe-Nummer\r\n* Article size number",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filialnummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Liefereantennummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "description": "* Menge\r\n* Amount",
            "format": "double",
            "nullable": true
          },
          "created": {
            "type": "string",
            "description": "* Datum\r\n* Date",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SupplierReturnInstruction.SupplierReturnInstructionCreateDTO": {
        "required": [
          "branchNumber",
          "positions"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferanten-Nummer\r\n* Supplier number",
            "format": "int32"
          },
          "bookImmediately": {
            "type": "boolean",
            "description": "* Markiert die Lieferantenretoure für sofortige Verbuchung\r\n* Flags the supplier return for immediate booking",
            "nullable": true
          },
          "positions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturnInstruction.SupplierReturnInstructionPositionCreateDTO"
            },
            "description": "* Liste von Positionen\r\n* List of positions"
          }
        },
        "additionalProperties": false,
        "description": "* Anmeldung einer Lieferantenretoure\r\n* Registration of a supplier return"
      },
      "api.Contract.SupplierReturnInstruction.SupplierReturnInstructionPositionCreateDTO": {
        "required": [
          "articleSizeNumber"
        ],
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "number",
            "description": "* ArticleSize-Nummer (EAN)\r\n* ArticleSize number (EAN)",
            "format": "double"
          },
          "textId": {
            "type": "string",
            "description": "* Text-Id für z.B. Retourengrund\r\n* Text id for e.g. return reason",
            "format": "uuid",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "* Beschreibung\r\n* Description",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Contract.SupplierReturnReason.SupplierReturnReasonDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Nummer\r\n* number",
            "format": "int32",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "description": "* Begründungstext für die Lieferantenretoure\r\n* Text describing the reason for return to supplier",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.TargetGroup.TargetGroupDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Zielgruppe-Nummer\r\n* Target group number",
            "format": "int32",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Zielgruppe\r\n* Searchterm of the target group",
            "nullable": true,
            "example": ""
          },
          "name": {
            "type": "string",
            "description": "* Name der Zielgruppe\r\n* Name of the target group",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.TransferInstruction.TransferInstructionArticleCreateDTO": {
        "required": [
          "quantity"
        ],
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "type": "number",
            "description": "* Eindeutige Nummer des Artikels\r\n* Unique number of the product",
            "format": "double",
            "nullable": true
          },
          "articleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID des Artikels\r\n* Unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "articleVariantId": {
            "type": "string",
            "description": "* Alternative eindeutige ID des Artikels\r\n* Alternate unique identifier of the product",
            "format": "uuid",
            "nullable": true
          },
          "ean": {
            "type": "number",
            "description": "* EAN des Artikels\r\n* EAN of the product",
            "format": "double",
            "nullable": true
          },
          "originBranchNumber": {
            "type": "integer",
            "description": "* Quellfiliale-Nummer\r\n* Origin branch number",
            "format": "int32"
          },
          "quantity": {
            "type": "number",
            "description": "* Anzahl\r\n* Quantity",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "api.Contract.TransferInstruction.TransferInstructionCreateDTO": {
        "required": [
          "articles",
          "targetBranchNumber"
        ],
        "type": "object",
        "properties": {
          "targetBranchNumber": {
            "type": "integer",
            "description": "* Zielfiliale-Nummer\r\n* Target branch number",
            "format": "int32"
          },
          "externalOrderNumber": {
            "type": "string",
            "description": "* Externe Auftrag-Nummer\r\n* External order number",
            "nullable": true
          },
          "articles": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.TransferInstruction.TransferInstructionArticleCreateDTO"
            }
          }
        },
        "additionalProperties": false
      },
      "api.Contract.UnionCategory.UnionCategoryDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "number": {
            "type": "integer",
            "description": "* Verbandswarengruppe-Nummer\r\n* Union category number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Verbandswarengruppe\r\n* Name of the Union category",
            "nullable": true
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Verbandswarengruppe\r\n* Searchterm of the Union category",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.Voucher.VoucherDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique indentifier",
            "format": "uuid",
            "example": ""
          },
          "internetCode": {
            "type": "string",
            "description": "* Code für Internet Einlösung\r\n* Code for internet redemption",
            "nullable": true,
            "example": ""
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "receiptPosition": {
            "type": "integer",
            "description": "* Position auf dem Bon\r\n* Position on the receipt",
            "format": "int32",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "description": "* Erstellungsdatum\r\n* Creation date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "number": {
            "type": "integer",
            "description": "* Gutschein-Nummer\r\n* Voucher number",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "description": "* Status, ob bereits der volle Betrag des Gutscheins eingelöst wurde (0 = offen, 1 = vollständig eingelöst)\r\n* Status whether the full amount of the voucher has been redeemed (0 = open, 1 = fully redeemed)",
            "format": "int32",
            "nullable": true
          },
          "valueRedeemed": {
            "type": "number",
            "description": "* Eingelöster Wert\r\n* Redeemed value",
            "format": "double",
            "nullable": true
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig bis Datum\r\n* Valid until date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true,
            "example": ""
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "currencyKey": {
            "type": "string",
            "description": "* Währung-Nummer\r\n* Currency key",
            "nullable": true,
            "example": ""
          },
          "information": {
            "type": "string",
            "description": "* Gutscheinnotiz zur Information\r\n* Informational note",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.VoucherReservation.VoucherReservationCreate": {
        "type": "object",
        "additionalProperties": false
      },
      "api.Contract.VoucherReservation.VoucherReservationDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique indentifier",
            "format": "uuid",
            "example": ""
          },
          "validUntil": {
            "type": "string",
            "description": "* Reservierung gültig bis\r\n* Reservation valid until",
            "format": "date",
            "example": ""
          },
          "voucherId": {
            "type": "string",
            "description": "* Eindeutige ID des Gutscheins\r\n* Unique indentifier of the voucher",
            "format": "uuid",
            "example": ""
          },
          "orderNumber": {
            "type": "string",
            "description": "* Auftrag-Nummer\r\n* Order number",
            "nullable": true,
            "example": ""
          },
          "receiptNumber": {
            "type": "integer",
            "description": "* Bon-Nummer\r\n* Receipt number",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double"
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebArticle.Status": {
        "enum": [
          "Activ",
          "Inactive",
          "ManuallyComplete",
          "ManuallyIncomplete",
          "Incomplete"
        ],
        "type": "string"
      },
      "api.Contract.WebArticle.WebArticleDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Undeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.WebArticle.Status"
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Artikel-Nummer des Lieferanten\r\n* Article number of the supllier",
            "nullable": true
          },
          "supplierArticleColor": {
            "type": "string",
            "description": "* Artikel-Farbe des Lieferanten\r\n* Article color of the supplier",
            "nullable": true
          },
          "colorNumber": {
            "type": "integer",
            "description": "* Farb-Nummer\r\n* Color number",
            "format": "int32",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "brandNumber": {
            "type": "integer",
            "description": "* Label-Nummer\r\n* Brand number",
            "format": "int32",
            "nullable": true
          },
          "description1": {
            "type": "string",
            "description": "* Beschreibung 1\r\n* Description 1",
            "nullable": true
          },
          "description2": {
            "type": "string",
            "description": "* Beschreibung 2\r\n* Description 2",
            "nullable": true
          },
          "description3": {
            "type": "string",
            "description": "* Beschreibung 3\r\n* Description 3",
            "nullable": true
          },
          "validFrom": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true
          },
          "validUntil": {
            "type": "string",
            "description": "* Gültig von Datum\r\n* Valid from Date",
            "format": "date",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebArticleImage.WebArticleImageDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Artikel-Nummer des Lieferanten\r\n* Article number of the supllier",
            "nullable": true
          },
          "supplierArticleColor": {
            "type": "string",
            "description": "* Artikel-Farbe des Lieferanten\r\n* Article color of the supplier",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "description": "* Dateiname\r\n* File name",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "description": "* Position\r\n* Position",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebArticleProperty.WebArticlePropertyDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Artikel-Nummer des Lieferanten\r\n* Article number of the supllier",
            "nullable": true
          },
          "supplierArticleColor": {
            "type": "string",
            "description": "* Artikel-Farbe des Lieferanten\r\n* Article color of the supplier",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "index": {
            "type": "integer",
            "description": "* Index\r\n* Index",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "* Wert\r\n* Value",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "index": {
            "type": "integer",
            "description": "* Index\r\n* Index",
            "format": "int32",
            "nullable": true
          },
          "value": {
            "type": "string",
            "description": "* Wert\r\n* Value",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebArticleSize.WebArticleSizeDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "branchNumber": {
            "type": "integer",
            "description": "* Filiale-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "supplierArticleNumber": {
            "type": "string",
            "description": "* Artikel-Nummer des Lieferanten\r\n* Article number of the supllier",
            "nullable": true
          },
          "supplierArticleColor": {
            "type": "string",
            "description": "* Artikel-Farbe des Lieferanten\r\n* Article color of the supplier",
            "nullable": true
          },
          "supplierNumber": {
            "type": "integer",
            "description": "* Lieferant-Nummer\r\n* Supplier number",
            "format": "int32",
            "nullable": true
          },
          "categoryNumber": {
            "type": "integer",
            "description": "* Warengruppe-Nummer\r\n* Category number",
            "format": "int32",
            "nullable": true
          },
          "size": {
            "type": "string",
            "description": "* Größe\r\n* Size",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Verkaufspreis\r\n* Sale price",
            "format": "double",
            "nullable": true
          },
          "salePrice": {
            "type": "number",
            "description": "* Reduzierter Verkaufspreis\r\n* Reduced sale price",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebOrder.WebOrderAddressDTO": {
        "type": "object",
        "properties": {
          "gender": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderGender"
          },
          "name": {
            "type": "string",
            "description": "* Name des Kunden\r\n* Name of the Customer",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true
          },
          "countryIsoAlpha2": {
            "type": "string",
            "description": "* ISO aplha-2 des Landes\r\n* ISO alpha-2 of the country",
            "nullable": true
          },
          "addressAddition": {
            "type": "string",
            "description": "* Adresszusatz\r\n* Additional address information",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Auftrags Adresse\r\n* Order address"
      },
      "api.Contract.WebOrder.WebOrderCreateDTO": {
        "required": [
          "billingAddress",
          "branchNumber",
          "customerId",
          "deliveryAddress",
          "orderPositions"
        ],
        "type": "object",
        "properties": {
          "externalOrderNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Externe Auftrags-Nummer\r\n* External order number",
            "nullable": true
          },
          "branchNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Webshop Filiale\r\n* Webshop branch",
            "format": "int32"
          },
          "customerId": {
            "minLength": 1,
            "type": "string",
            "description": "* Eindeutige ID des Kunden\r\n* Unique identifier of the customer",
            "format": "uuid"
          },
          "externalCustomerNumber": {
            "type": "string",
            "description": "* Kundennummer aus einem externen System\r\n* Customer number of an external system",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "paymentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Zahlungsart-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "shipmentCost": {
            "minimum": 0,
            "type": "number",
            "description": "* Versandkosten\r\n* Shipment costs",
            "format": "double"
          },
          "orderPositions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionCreateDTO"
            },
            "description": "* Liste von Auftragspositionen\r\n* List of Order positions"
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDiscountCreateDTO"
            },
            "description": "* Liste von Rabatten auf den Auftrag\r\n* List of discount on the order",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderAddressDTO"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDeliveryAddressDTO"
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "format": "email",
            "nullable": true
          },
          "shipmentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Versandart-Nummer\r\n* Shipment option number",
            "format": "int32"
          },
          "webPaymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsbedingung-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "pickUpBranchNumber": {
            "type": "integer",
            "description": "* Eindeutige ID der Abholfiliale\r\n* Unique identifier of the pickup branch",
            "format": "int32",
            "nullable": true
          },
          "bookingBranchNumber": {
            "type": "integer",
            "description": "* Eindeutige ID der Buchungsfiliale\r\n* Unique identifier of the booking branch",
            "format": "int32",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "description": "* Payment ID (z.B. Klarna OrderId oder PayPal PaymentId)\r\n* Payment ID (e.g. Klarna OrderId or PayPal PaymentId)",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Anlage eines Auftrags\r\n* Create of order"
      },
      "api.Contract.WebOrder.WebOrderDTO": {
        "required": [
          "billingAddress",
          "branchNumber",
          "customerId",
          "deliveryAddress",
          "orderPositions"
        ],
        "type": "object",
        "properties": {
          "externalOrderNumber": {
            "maxLength": 60,
            "type": "string",
            "description": "* Externe Auftrags-Nummer\r\n* External order number",
            "nullable": true
          },
          "branchNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Webshop Filiale\r\n* Webshop branch",
            "format": "int32"
          },
          "customerId": {
            "minLength": 1,
            "type": "string",
            "description": "* Eindeutige ID des Kunden\r\n* Unique identifier of the customer",
            "format": "uuid"
          },
          "externalCustomerNumber": {
            "type": "string",
            "description": "* Kundennummer aus einem externen System\r\n* Customer number of an external system",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "paymentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Zahlungsart-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "shipmentCost": {
            "minimum": 0,
            "type": "number",
            "description": "* Versandkosten\r\n* Shipment costs",
            "format": "double"
          },
          "orderPositions": {
            "minItems": 1,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionCreateDTO"
            },
            "description": "* Liste von Auftragspositionen\r\n* List of Order positions"
          },
          "orderDiscounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDiscountCreateDTO"
            },
            "description": "* Liste von Rabatten auf den Auftrag\r\n* List of discount on the order",
            "nullable": true
          },
          "billingAddress": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderAddressDTO"
          },
          "deliveryAddress": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDeliveryAddressDTO"
          },
          "email": {
            "maxLength": 80,
            "type": "string",
            "description": "* E-Mail Adresse\r\n* E-Mail address",
            "format": "email",
            "nullable": true
          },
          "shipmentOptionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "* Versandart-Nummer\r\n* Shipment option number",
            "format": "int32"
          },
          "webPaymentOptionNumber": {
            "type": "integer",
            "description": "* Zahlungsbedingung-Nummer\r\n* Payment option number",
            "format": "int32"
          },
          "pickUpBranchNumber": {
            "type": "integer",
            "description": "* Eindeutige ID der Abholfiliale\r\n* Unique identifier of the pickup branch",
            "format": "int32",
            "nullable": true
          },
          "bookingBranchNumber": {
            "type": "integer",
            "description": "* Eindeutige ID der Buchungsfiliale\r\n* Unique identifier of the booking branch",
            "format": "int32",
            "nullable": true
          },
          "paymentId": {
            "type": "string",
            "description": "* Payment ID (z.B. Klarna OrderId oder PayPal PaymentId)\r\n* Payment ID (e.g. Klarna OrderId or PayPal PaymentId)",
            "nullable": true
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.WebOrderStatus"
          },
          "internalOrderNumber": {
            "type": "integer",
            "description": "* Auftrags-Nummer\r\n* Order number",
            "format": "int32",
            "nullable": true
          },
          "customerNumber": {
            "type": "integer",
            "description": "* Kunde-Nummer\r\n* Customer number",
            "format": "int32",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebOrder.WebOrderDeliveryAddressDTO": {
        "type": "object",
        "properties": {
          "gender": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderGender"
          },
          "name": {
            "type": "string",
            "description": "* Name des Kunden\r\n* Name of the Customer",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "description": "* Telefon-Nummer\r\n* Telephone number",
            "nullable": true
          },
          "street": {
            "type": "string",
            "description": "* Straße\r\n* Street",
            "nullable": true
          },
          "city": {
            "type": "string",
            "description": "* Stadt\r\n* City",
            "nullable": true
          },
          "zipCode": {
            "type": "string",
            "description": "* Postleitzahl\r\n* ZIP code",
            "nullable": true
          },
          "countryIsoAlpha2": {
            "type": "string",
            "description": "* ISO aplha-2 des Landes\r\n* ISO alpha-2 of the country",
            "nullable": true
          },
          "addressAddition": {
            "type": "string",
            "description": "* Adresszusatz\r\n* Additional address information",
            "nullable": true
          },
          "dhlPostNumber": {
            "type": "string",
            "description": "* Post Nummer des Kunden beim Versand an eine Packstation\r\n* Post number of the customer when delivering to a Packstation",
            "nullable": true
          },
          "dhlPackstationNumber": {
            "type": "string",
            "description": "* Packstation-Nummer\r\n* Packstation number",
            "nullable": true
          },
          "dhlServicePointNumber": {
            "type": "string",
            "description": "* Postfiliale-Nummer\r\n* Service point number",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Auftrags Adresse\r\n* Order address"
      },
      "api.Contract.WebOrder.WebOrderDiscountCreateDTO": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "* Name des Rabatts\r\n* Name of the discount",
            "nullable": true
          },
          "value": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "number",
            "description": "* Wert\r\n* Value",
            "format": "double"
          },
          "voucherId": {
            "type": "string",
            "description": "* Referenz auf den eingelösten Rabattgutschein\r\n* Reference to the redeemed voucher",
            "format": "uuid",
            "nullable": true
          },
          "appliedToPositions": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "uuid"
            },
            "description": "* Sammlung ther Produkt-IDs aus den Positionen, die diesen Rabatt erhalten\r\n* List product ids from the positions that receive this discount",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Rabatte\r\n* Discounts"
      },
      "api.Contract.WebOrder.WebOrderGender": {
        "enum": [
          "Business",
          "Female",
          "Male"
        ],
        "type": "string"
      },
      "api.Contract.WebOrderPosition.WebOrderPositionCreateDTO": {
        "required": [
          "webArticleSizeId"
        ],
        "type": "object",
        "properties": {
          "webArticleSizeId": {
            "minLength": 1,
            "type": "string",
            "description": "* Eindeutige ID der Produkt-Variante\r\n* Unique identifier of the product variant",
            "format": "uuid"
          },
          "prefferedStockBranch": {
            "type": "integer",
            "description": "* Bevorzugte Lagerfiliale (überschreibt normale Filial-Reihenfolge)\r\n* Preferred stock branch (overrides usual order of stock branches)",
            "format": "int32",
            "nullable": true
          },
          "paymentReferenceId": {
            "type": "string",
            "description": "* Referenz ID der Position vom Zahlungsdienstleister (z.B. Klarna OrderId oder PayPal)\r\n* Reference ID of the position from the payment provider (e.g. Klarna OrderId or PayPal)",
            "nullable": true
          },
          "voucherId": {
            "type": "string",
            "description": "* Referenz auf einen seperat erstellten Rabattgutschein\r\n* Reference to a seperately created voucher",
            "format": "uuid",
            "nullable": true
          },
          "isVoucherRecharge": {
            "type": "boolean",
            "description": "* Wenn dieses Flag gesetzt wird, wird ein vorhandener Gutschein um den entsprechenden Betrag aufgeladen\r\n* Set this flag to recharge an existing voucher with a specified amount",
            "nullable": true
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "description": "* Preis\r\n* Price",
            "format": "double"
          },
          "information": {
            "maxLength": 80,
            "type": "string",
            "description": "* Information\r\n* Information",
            "nullable": true
          },
          "quantity": {
            "minimum": 0,
            "type": "number",
            "description": "* Stückzahl\r\n* Quantity",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Anlage einer Auftragsposition\r\n* Creat of order position"
      },
      "api.Contract.WebOrderPosition.WebOrderPositionDTO": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid"
          },
          "processedQuantity": {
            "type": "number",
            "description": "* Stückzahl\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "invoicedQuantity": {
            "type": "number",
            "description": "* Stückzahl\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "isDiscount": {
            "type": "boolean",
            "description": "* Kennzeichen das angibt ob die Position eine Rabatt-Position ist\r\n* Flag that defines the shipment as discount position"
          },
          "articleNumber": {
            "type": "number",
            "description": "* Artikel-Nummer\r\n* Article number",
            "format": "double",
            "nullable": true
          },
          "description": {
            "type": "string",
            "description": "* Text\r\n* Text",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/api.Contract.WebOrderStatus"
          },
          "internalOrderNumber": {
            "type": "integer",
            "description": "* Nummer des Auftrags\r\n* Number of the order",
            "format": "int32"
          },
          "position": {
            "type": "integer",
            "description": "* Positions-Nummer (in 10er Schritten, Positionen 1000+ sind Versand- oder Rabatt-Positionen)\r\n* Position number (in increments of 10, position 1000+ are shipment or discount positions)",
            "format": "int32"
          },
          "size": {
            "type": "string",
            "description": "* Groesse\r\n* Size",
            "nullable": true
          },
          "webArticleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID der Produkt-Variante\r\n* Unique identifier of the product variant",
            "format": "uuid",
            "nullable": true
          },
          "prefferedStockBranch": {
            "type": "integer",
            "description": "* Bevorzugte Lagerfiliale (überschreibt normale Filial-Reihenfolge)\r\n* Preferred stock branch (overrides usual order of stock branches)",
            "format": "int32",
            "nullable": true
          },
          "paymentReferenceId": {
            "type": "string",
            "description": "* Referenz ID der Position vom Zahlungsdienstleister (z.B. Klarna OrderId oder PayPal)\r\n* Reference ID of the position from the payment provider (e.g. Klarna OrderId or PayPal)",
            "nullable": true
          },
          "voucherId": {
            "type": "string",
            "description": "* Referenz auf einen seperat erstellten Rabattgutschein\r\n* Reference to a seperately created voucher",
            "format": "uuid",
            "nullable": true
          },
          "isVoucherRecharge": {
            "type": "boolean",
            "description": "* Wenn dieses Flag gesetzt wird, wird ein vorhandener Gutschein um den entsprechenden Betrag aufgeladen\r\n* Set this flag to recharge an existing voucher with a specified amount",
            "nullable": true
          },
          "price": {
            "type": "number",
            "description": "* Preis\r\n* Price",
            "format": "double"
          },
          "information": {
            "type": "string",
            "description": "* Information\r\n* Information",
            "nullable": true
          },
          "quantity": {
            "type": "number",
            "description": "* Stückzahl\r\n* Quantity",
            "format": "double",
            "nullable": true
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebOrderStatus": {
        "enum": [
          "Offered",
          "Open",
          "Processing",
          "Packaging",
          "Pickup",
          "Reserved",
          "Invoiced",
          "OutOfStock",
          "Deleted"
        ],
        "type": "string"
      },
      "api.Contract.WebPaymentOption.WebPaymentOptionDTO": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "* Web-Zahlungsart-Nummer\r\n* Web payment option number",
            "format": "int32",
            "nullable": true
          },
          "name": {
            "type": "string",
            "description": "* Name der Web-Zahlungsart\r\n* Name of the web payment option",
            "nullable": true,
            "example": ""
          },
          "id": {
            "type": "string",
            "description": "* Eindeutige ID\r\n* Unique identifier",
            "format": "uuid",
            "example": ""
          },
          "searchTerm": {
            "type": "string",
            "description": "* Suchwort der Web-Zahlungsart\r\n* Searchterm of the web payment option",
            "nullable": true,
            "example": ""
          },
          "lastChange": {
            "type": "string",
            "description": "* Zeitpunkt der letzten Änderung\r\n* Timestamp of the last change",
            "format": "date-time",
            "nullable": true,
            "example": ""
          }
        },
        "additionalProperties": false
      },
      "api.Contract.WebStock.StockBranchesDTO": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "* Filial-Nummer\r\n* Branch number",
            "format": "int32"
          },
          "stock": {
            "type": "number",
            "description": "* Menge\r\n* Value",
            "format": "double",
            "nullable": true
          }
        },
        "additionalProperties": false,
        "description": "* Bestandsinformationen für Filialen\r\n* Stock information for branches"
      },
      "api.Contract.WebStock.WebStockDTO": {
        "type": "object",
        "properties": {
          "webArticleId": {
            "type": "string",
            "description": "* Eindeutige ID des Webartikel\r\n* Unique identifier of the webarticle",
            "format": "uuid"
          },
          "webArticleSizeId": {
            "type": "string",
            "description": "* Eindeutige ID der Webartikel Größe\r\n* Unique identifier of the webarticle size",
            "format": "uuid"
          },
          "stock": {
            "type": "number",
            "description": "* Kommulierter Bestand, der offene Aufträge berücksichtigt\r\n* Commulated stock that accounts open orders",
            "format": "double",
            "nullable": true
          },
          "branches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebStock.StockBranchesDTO"
            },
            "description": "* Liste von Bestandsinformationen für Filialen\r\n* List of stock information for branches",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.ChangesResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Core.Models.TrackedChanges`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionCustomerDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Article.ArticleDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ArticleSize.ArticleSizeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Brand.BrandDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Category.CategoryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Color.ColorDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Country.CountryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Coupon.CouponDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Credit.CreditDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Currency.CurrencyDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Customer.CustomerDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerCard.CustomerCardDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturn.CustomerReturnDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturnReason.CustomerReturnReasonDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Department.DepartmentDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Deposit.DepositDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.DispatchAdvice.DispatchAdviceDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.FullDataExport.FullDataExportDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Function.FunctionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.GeneralCategory.GeneralCategoryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundIntake.InboundIntakeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundMisc.InboundMiscDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundTransfer.InboundTransferDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Inventory.InventoryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Invoice.InvoiceDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.LabelType.LabelTypeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainCategory.MainCategoryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainDepartment.MainDepartmentDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Material.MaterialDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MinimumStock.MinimumStockDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundMisc.OutboundMiscDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundTransfer.OutboundTransferDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Pattern.PatternDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Payment.PaymentDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PaymentOption.PaymentOptionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrder.PurchaseOrderDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Receipt.ReceiptDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptInformation.ReceiptInformationDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptPositionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedCoupon.RedeemedCouponDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Sale.SaleDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Season.SeasonDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Selection.SelectionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shape.ShapeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shipment.ShipmentDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ShipmentOption.ShipmentOptionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shop.ShopDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Size.SizeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeGroup.SizeGroupDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeRange.SizeRangeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SpecialPrice.SpecialPriceDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Staff.StaffDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Supplier.SupplierDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturn.SupplierReturnDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturnReason.SupplierReturnReasonDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.TargetGroup.TargetGroupDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.UnionCategory.UnionCategoryDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Voucher.VoucherDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.VoucherReservation.VoucherReservationDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticle.WebArticleDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleImage.WebArticleImageDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleProperty.WebArticlePropertyDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleSize.WebArticleSizeDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebPaymentOption.WebPaymentOptionDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.MultiResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebStock.WebStockDTO"
            },
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromotionSelectionCustomerDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/PromotionSelectionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Article.ArticleDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ArticleSize.ArticleSizeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Branch.BranchDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Brand.BrandDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Category.CategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ChangeId.ChangeIdDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ChangeId.ChangeIdDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Color.ColorDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Country.CountryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Coupon.CouponDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Credit.CreditDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Currency.CurrencyDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Customer.CustomerDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.CustomerCard.CustomerCardDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.CustomerReturn.CustomerReturnDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.CustomerReturnReason.CustomerReturnReasonDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Department.DepartmentDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Deposit.DepositDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.DispatchAdvice.DispatchAdviceDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.FullDataExport.FullDataExportDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.FullDataExport.FullDataExportDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Function.FunctionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.GeneralCategory.GeneralCategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.InboundIntake.InboundIntakeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.InboundMisc.InboundMiscDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.InboundTransfer.InboundTransferDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Inventory.InventoryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.InventoryDiscrepancyInstruction.InventoryDiscrepancyInstructionCreateDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Invoice.InvoiceDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.LabelType.LabelTypeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.MainCategory.MainCategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.MainDepartment.MainDepartmentDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Material.MaterialDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.MinimumStock.MinimumStockDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.OutboundMisc.OutboundMiscDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.OutboundTransfer.OutboundTransferDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Pattern.PatternDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Payment.PaymentDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.PaymentOption.PaymentOptionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrder.PurchaseOrderDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Receipt.ReceiptDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ReceiptInformation.ReceiptInformationDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptPositionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.RedeemedCoupon.RedeemedCouponDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Sale.SaleDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Season.SeasonDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Selection.SelectionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Shape.ShapeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Shipment.ShipmentDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.ShipmentOption.ShipmentOptionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Shop.ShopDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Size.SizeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.SizeGroup.SizeGroupDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.SizeRange.SizeRangeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.SpecialPrice.SpecialPriceDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Staff.StaffDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.StocktakingInstruction.StocktakingInstructionCreateDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Supplier.SupplierDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.SupplierReturn.SupplierReturnDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.SupplierReturnReason.SupplierReturnReasonDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.TargetGroup.TargetGroupDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.UnionCategory.UnionCategoryDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.Voucher.VoucherDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.VoucherReservation.VoucherReservationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.VoucherReservation.VoucherReservationDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebArticle.WebArticleDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebArticleImage.WebArticleImageDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebArticleProperty.WebArticlePropertyDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebArticleSize.WebArticleSizeDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebPaymentOption.WebPaymentOptionDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.SingleResultModel`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/api.Contract.WebStock.WebStockDTO"
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[PromotionSelectionCustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionCustomerDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionCustomerDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionCustomerDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[PromotionSelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PromotionSelectionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Article.ArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Article.ArticleDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Article.ArticleDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Article.ArticleDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ArticleSize.ArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ArticleSize.ArticleSizeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ArticleSize.ArticleSizeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ArticleSize.ArticleSizeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Branch.BranchDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Branch.BranchDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Brand.BrandDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Brand.BrandDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Brand.BrandDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Brand.BrandDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Category.CategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Category.CategoryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Category.CategoryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Category.CategoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Color.ColorDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Color.ColorDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Color.ColorDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Color.ColorDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Country.CountryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Country.CountryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Country.CountryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Country.CountryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Coupon.CouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Coupon.CouponDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Coupon.CouponDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Coupon.CouponDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Credit.CreditDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Credit.CreditDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Credit.CreditDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Credit.CreditDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Currency.CurrencyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Currency.CurrencyDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Currency.CurrencyDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Currency.CurrencyDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Customer.CustomerDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Customer.CustomerDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Customer.CustomerDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Customer.CustomerDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.CustomerCard.CustomerCardDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerCard.CustomerCardDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerCard.CustomerCardDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerCard.CustomerCardDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.CustomerReturn.CustomerReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturn.CustomerReturnDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturn.CustomerReturnDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturn.CustomerReturnDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.CustomerReturnReason.CustomerReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturnReason.CustomerReturnReasonDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturnReason.CustomerReturnReasonDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.CustomerReturnReason.CustomerReturnReasonDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Department.DepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Department.DepartmentDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Department.DepartmentDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Department.DepartmentDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Deposit.DepositDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Deposit.DepositDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Deposit.DepositDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Deposit.DepositDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.DispatchAdvice.DispatchAdviceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.DispatchAdvice.DispatchAdviceDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.DispatchAdvice.DispatchAdviceDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.DispatchAdvice.DispatchAdviceDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Function.FunctionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Function.FunctionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Function.FunctionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Function.FunctionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.GeneralCategory.GeneralCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.GeneralCategory.GeneralCategoryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.GeneralCategory.GeneralCategoryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.GeneralCategory.GeneralCategoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.InboundIntake.InboundIntakeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundIntake.InboundIntakeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundIntake.InboundIntakeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundIntake.InboundIntakeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.InboundMisc.InboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundMisc.InboundMiscDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundMisc.InboundMiscDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundMisc.InboundMiscDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.InboundTransfer.InboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundTransfer.InboundTransferDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundTransfer.InboundTransferDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.InboundTransfer.InboundTransferDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Inventory.InventoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Inventory.InventoryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Inventory.InventoryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Inventory.InventoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Invoice.InvoiceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Invoice.InvoiceDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Invoice.InvoiceDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Invoice.InvoiceDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.LabelType.LabelTypeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.LabelType.LabelTypeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.LabelType.LabelTypeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.LabelType.LabelTypeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.MainCategory.MainCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainCategory.MainCategoryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainCategory.MainCategoryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainCategory.MainCategoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.MainDepartment.MainDepartmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainDepartment.MainDepartmentDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainDepartment.MainDepartmentDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MainDepartment.MainDepartmentDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Material.MaterialDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Material.MaterialDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Material.MaterialDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Material.MaterialDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.MinimumStock.MinimumStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MinimumStock.MinimumStockDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MinimumStock.MinimumStockDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.MinimumStock.MinimumStockDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundInventoryDifference.OutboundInventoryDifferenceDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.OutboundMisc.OutboundMiscDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundMisc.OutboundMiscDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundMisc.OutboundMiscDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundMisc.OutboundMiscDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundSupplierReturn.OutboundSupplierReturnDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.OutboundTransfer.OutboundTransferDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundTransfer.OutboundTransferDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundTransfer.OutboundTransferDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.OutboundTransfer.OutboundTransferDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ParkedSupplierReturn.ParkedSupplierReturnDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Pattern.PatternDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Pattern.PatternDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Pattern.PatternDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Pattern.PatternDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Payment.PaymentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Payment.PaymentDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Payment.PaymentDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Payment.PaymentDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.PaymentOption.PaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PaymentOption.PaymentOptionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PaymentOption.PaymentOptionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PaymentOption.PaymentOptionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrder.PurchaseOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrder.PurchaseOrderDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrder.PurchaseOrderDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrder.PurchaseOrderDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPosition.PurchaseOrderPositionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.PurchaseOrderPositionSize.PurchaseOrderPositionSizeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Receipt.ReceiptDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Receipt.ReceiptDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Receipt.ReceiptDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Receipt.ReceiptDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptInformation.ReceiptInformationDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptInformation.ReceiptInformationDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptInformation.ReceiptInformationDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptInformation.ReceiptInformationDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPaymentMethod.ReceiptPaymentMethodDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ReceiptPosition.ReceiptPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptPositionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptPositionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ReceiptPosition.ReceiptPositionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.RedeemedCoupon.RedeemedCouponDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedCoupon.RedeemedCouponDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedCoupon.RedeemedCouponDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedCoupon.RedeemedCouponDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.RedeemedVoucher.RedeemedVoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.RedeemedVoucher.RedeemedVoucherDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Sale.SaleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Sale.SaleDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Sale.SaleDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Sale.SaleDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Season.SeasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Season.SeasonDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Season.SeasonDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Season.SeasonDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Selection.SelectionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Selection.SelectionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Selection.SelectionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Selection.SelectionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Shape.ShapeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shape.ShapeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shape.ShapeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shape.ShapeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Shipment.ShipmentDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shipment.ShipmentDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shipment.ShipmentDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shipment.ShipmentDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.ShipmentOption.ShipmentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ShipmentOption.ShipmentOptionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ShipmentOption.ShipmentOptionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.ShipmentOption.ShipmentOptionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Shop.ShopDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shop.ShopDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shop.ShopDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Shop.ShopDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Size.SizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Size.SizeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Size.SizeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Size.SizeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.SizeGroup.SizeGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeGroup.SizeGroupDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeGroup.SizeGroupDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeGroup.SizeGroupDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.SizeRange.SizeRangeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeRange.SizeRangeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeRange.SizeRangeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SizeRange.SizeRangeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.SpecialPrice.SpecialPriceDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SpecialPrice.SpecialPriceDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SpecialPrice.SpecialPriceDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SpecialPrice.SpecialPriceDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Staff.StaffDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Staff.StaffDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Staff.StaffDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Staff.StaffDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Supplier.SupplierDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Supplier.SupplierDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Supplier.SupplierDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Supplier.SupplierDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.SupplierReturn.SupplierReturnDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturn.SupplierReturnDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturn.SupplierReturnDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturn.SupplierReturnDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.SupplierReturnReason.SupplierReturnReasonDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturnReason.SupplierReturnReasonDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturnReason.SupplierReturnReasonDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.SupplierReturnReason.SupplierReturnReasonDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.TargetGroup.TargetGroupDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.TargetGroup.TargetGroupDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.TargetGroup.TargetGroupDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.TargetGroup.TargetGroupDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.UnionCategory.UnionCategoryDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.UnionCategory.UnionCategoryDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.UnionCategory.UnionCategoryDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.UnionCategory.UnionCategoryDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.Voucher.VoucherDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Voucher.VoucherDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Voucher.VoucherDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.Voucher.VoucherDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebArticle.WebArticleDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticle.WebArticleDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticle.WebArticleDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticle.WebArticleDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleImage.WebArticleImageDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleImage.WebArticleImageDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleImage.WebArticleImageDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleImage.WebArticleImageDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleProperty.WebArticlePropertyDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleProperty.WebArticlePropertyDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleProperty.WebArticlePropertyDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleProperty.WebArticlePropertyDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticlePropertyDefinition.WebArticlePropertyDefinitionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebArticleSize.WebArticleSizeDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleSize.WebArticleSizeDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleSize.WebArticleSizeDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebArticleSize.WebArticleSizeDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebOrder.WebOrderDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrder.WebOrderDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebOrderPosition.WebOrderPositionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebOrderPosition.WebOrderPositionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebPaymentOption.WebPaymentOptionDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebPaymentOption.WebPaymentOptionDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebPaymentOption.WebPaymentOptionDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebPaymentOption.WebPaymentOptionDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Core.Models.TrackedChanges`1[[api.Contract.WebStock.WebStockDTO, api.Contract, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]": {
        "type": "object",
        "properties": {
          "created": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebStock.WebStockDTO"
            },
            "nullable": true
          },
          "updated": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebStock.WebStockDTO"
            },
            "nullable": true
          },
          "deleted": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/api.Contract.WebStock.WebStockDTO"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetByCategoryEndpoint+RequestModel": {
        "required": [
          "categoryNumber"
        ],
        "type": "object",
        "properties": {
          "categoryNumber": {
            "type": "integer",
            "description": "The category to filter articles by.",
            "format": "int32"
          },
          "includeNonSupplierArticles": {
            "type": "boolean",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetByFirstPurchaseEndpoint+RequestModel": {
        "required": [
          "firstPurchase"
        ],
        "type": "object",
        "properties": {
          "firstPurchase": {
            "minLength": 1,
            "type": "string",
            "description": "The date of first purchase to filter articles by.",
            "format": "date"
          },
          "includeNonSupplierArticles": {
            "type": "boolean",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the article to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetByLastSaleEndpoint+RequestModel": {
        "required": [
          "lastSale"
        ],
        "type": "object",
        "properties": {
          "lastSale": {
            "minLength": 1,
            "type": "string",
            "description": "The date of last sale to filter articles by.",
            "format": "date"
          },
          "includeNonSupplierArticles": {
            "type": "boolean",
            "description": "Set to true, if you want the results to include articles without a linked supplier.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the article. Can be found as number field in a article object or as articleNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetBySupplierEndpoint+RequestModel": {
        "required": [
          "supplierNumber"
        ],
        "type": "object",
        "properties": {
          "supplierNumber": {
            "type": "integer",
            "description": "The supplier to filter articles by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Article.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByArticleNumberEndpoint+RequestModel": {
        "required": [
          "articleNumber"
        ],
        "type": "object",
        "properties": {
          "articleNumber": {
            "type": "number",
            "description": "The article number of the article size.",
            "format": "double"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByBranchNumberAndArticleNumberEndpoint+RequestModel": {
        "required": [
          "articleNumber",
          "branchNumber"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "The branch number of the article size.",
            "format": "int32"
          },
          "articleNumber": {
            "type": "number",
            "description": "The article number of the article size.",
            "format": "double"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByBranchNumberAndNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "number"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "The branch number of the article size to return.",
            "format": "int32"
          },
          "number": {
            "type": "number",
            "description": "The number of the article size to return.",
            "format": "double"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "The branch number of the article size.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByEANEndpoint+RequestModel": {
        "required": [
          "ean"
        ],
        "type": "object",
        "properties": {
          "ean": {
            "maximum": 999999999999999,
            "minimum": 111111111111,
            "type": "number",
            "description": "The EAN of the article size.",
            "format": "double"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByFirstPurchaseDateEndpoint+RequestModel": {
        "required": [
          "firstPurchaseDate"
        ],
        "type": "object",
        "properties": {
          "firstPurchaseDate": {
            "minLength": 1,
            "type": "string",
            "description": "The first purchase date of the article size.",
            "format": "date"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the article size to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetByLastSaleDateEndpoint+RequestModel": {
        "required": [
          "lastSaleDate"
        ],
        "type": "object",
        "properties": {
          "lastSaleDate": {
            "minLength": 1,
            "type": "string",
            "description": "The last sale date of the article size.",
            "format": "date"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "The branch number of the article size.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetChangedGroupedByEANEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetGroupedByEANEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ArticleSize.GetWithMinimumStockEndpoint+RequestModel": {
        "required": [
          "minimumStock"
        ],
        "type": "object",
        "properties": {
          "minimumStock": {
            "type": "number",
            "description": "The minimum stock the article size has to have.",
            "format": "double"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the branch to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the branch. Can be found as number field in a branch object or as branchNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Branch.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the brand to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the brand. Can be found as number field in a brand object or as BrandNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Brand.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the category to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the category. Can be found as number field in a category object or as CategoryNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Category.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ChangeId.GetEndpoint+RequestModel": {
        "type": "object",
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the color to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the color. Can be found as number field in a color object or as colorNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Color.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the country to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetByKeyKeyEndpoint+RequestModel": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string",
            "description": "The key of the country. Can be found as key field in a country object or as CountryKey if referenced from another entity."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Country.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the coupon.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the coupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the coupon charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetByInternetCodeEndpoint+RequestModel": {
        "required": [
          "internetCode"
        ],
        "type": "object",
        "properties": {
          "internetCode": {
            "minLength": 1,
            "type": "string",
            "description": "The redeemable code of the coupon charge to return."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the coupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the coupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Coupon.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the credit.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the credit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the credit charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the credit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the credit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Credit.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the currency to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetByKeyEndpoint+RequestModel": {
        "required": [
          "key"
        ],
        "type": "object",
        "properties": {
          "key": {
            "minLength": 1,
            "type": "string",
            "description": "The key of the currency. Can be found as key field in a currency object or as CurrencyKey if referenced from another entity."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Currency.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.DeleteEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the customer",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetByCustomerCardEndpoint+RequestModel": {
        "required": [
          "customerCardNumber"
        ],
        "type": "object",
        "properties": {
          "customerCardNumber": {
            "type": "integer",
            "description": "The customer card number to filter customers by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetByEmailEndpoint+RequestModel": {
        "required": [
          "email"
        ],
        "type": "object",
        "properties": {
          "email": {
            "maxLength": 60,
            "minLength": 1,
            "type": "string",
            "description": "The email address to filter customers by.",
            "format": "email"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the customer. Can be found as number field in a customer object or as customerNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Customer.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetByCustomerNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the customer card.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer card to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerCard.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetByBranchEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The number of the branch to return customer orders for.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetByExternalOrderNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "minLength": 1,
            "type": "string",
            "description": "The number of the customer order. Can be found as number field in a customer order object or as CustomerOrderNumber if referenced from another entity."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer order to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 1000,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrder.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetByCustomerOrderIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "customerOrderId": {
            "type": "string",
            "description": "Id of the customer order.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetByCustomerOrderNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "customerOrderNumber": {
            "type": "integer",
            "description": "Number of the customer order.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer order position to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerOrderPosition.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetByCustomerNumberEndpoint+RequestModel": {
        "required": [
          "customerNumber"
        ],
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "integer",
            "description": "The customer number to filter customer returns by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer return to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetByReceiptNumberEndpoint+RequestModel": {
        "required": [
          "receiptNumber"
        ],
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "The receipt number to filter customer returns by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturn.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the customer return reason to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the customer return reason. Can be found as number field in a customer return reason object or as customerReturnReasonNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.CustomerReturnReason.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the department to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the department. Can be found as number field in a department object or as departmentNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Department.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the deposit.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the deposit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the deposit charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the deposit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the deposit.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Deposit.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.DispatchAdvice.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the dispatch advice to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.DispatchAdvice.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.DispatchAdvice.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.DispatchAdvice.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.DispatchAdvice.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the function to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the function. Can be found as number field in a function object or as functionNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Function.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the general category to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the general category. Can be found as number field in a general category object or as GeneralCategoryNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.GeneralCategory.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the inbound intake to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the inbound intake.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundIntake.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the inbound misc to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the inbound misc.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundMisc.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the inbound transfer to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the inbound transfer.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.InboundTransfer.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetByActiveActiveEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "Active flag value to be filtered by."
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the inventory to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Inventory.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the invoice to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the invoice. Can be found as number field in a invoice object or as InvoiceNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Invoice.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the labelType to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the labelType. Can be found as number field in a labelType object or as labelTypeNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.LabelType.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the main category to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the category. Can be found as number field in a category object or as MainCategoryNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainCategory.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the main department to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the main department. Can be found as number field in a main department object or as MainDepartmentNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MainDepartment.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the material to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the material. Can be found as number field in a material object or as MaterialNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Material.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MinimumStock.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the minimum stock to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MinimumStock.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MinimumStock.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MinimumStock.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.MinimumStock.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the outbound inventory difference to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the outbound inventory difference.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundInventoryDifference.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the outbound misc to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the outbound misc.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundMisc.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the outbound supplier return to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the outbound supplier return.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundSupplierReturn.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the outbound transfer to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "Number of the outbound transfer.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.OutboundTransfer.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ParkedSupplierReturn.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the parked supplier return to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ParkedSupplierReturn.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ParkedSupplierReturn.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ParkedSupplierReturn.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ParkedSupplierReturn.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the pattern to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the pattern. Can be found as number field in a pattern object or as PatternNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Pattern.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the payment to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetByInvoiceEndpoint+RequestModel": {
        "required": [
          "invoiceNumber"
        ],
        "type": "object",
        "properties": {
          "invoiceNumber": {
            "type": "integer",
            "description": "The number of the invoice to filter payments by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Payment.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the payment option to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the payment option. Can be found as number field in a payment option object or as PaymentOptionNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PaymentOption.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the promotion selection to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetByNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "number": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The promotion selection number to retrieve.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelection.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the promotion selection customer to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetByPromotionNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "promotionNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Number of the promotion selection.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PromotionSelectionCustomer.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the purchase order to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the purchase order. Can be found as number field in a purchase order object or as PurchaseOrderNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrder.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the purchase order position to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetByPurchaseOrderIdEndpoint+RequestModel": {
        "required": [
          "purchaseOrderId"
        ],
        "type": "object",
        "properties": {
          "purchaseOrderId": {
            "minLength": 1,
            "type": "string",
            "description": "Purchase order id to filter the results.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetByPurchaseOrderNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "purchaseOrderNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Purchase order number to filter the results.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetByPurchaseOrderPositionIdEndpoint+RequestModel": {
        "required": [
          "purchaseOrderPositionId"
        ],
        "type": "object",
        "properties": {
          "purchaseOrderPositionId": {
            "minLength": 1,
            "type": "string",
            "description": "Purchase order position id to filter the results.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPosition.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPositionSize.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the purchase order position size to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPositionSize.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPositionSize.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPositionSize.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.PurchaseOrderPositionSize.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetByCustomerNumberEndpoint+RequestModel": {
        "required": [
          "customerNumber"
        ],
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "integer",
            "description": "The customer number to filter receipts by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the receipt to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the receipt. Can be found as number field in a receipt object or as receiptNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Receipt.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptInformation.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the receipt information to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptInformation.GetByReceiptNumberEndpoint+RequestModel": {
        "required": [
          "receiptNumber"
        ],
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "The receipt number to filter receipt information by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptInformation.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptInformation.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the receipt payment method to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetByReceiptNumberEndpoint+RequestModel": {
        "required": [
          "receiptNumber"
        ],
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "The receipt number to filter receipt payment methods by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPaymentMethod.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the receipt position to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetByReceiptNumberEndpoint+RequestModel": {
        "required": [
          "receiptNumber"
        ],
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "The receipt number to filter receipt positions by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ReceiptPosition.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the redeemedCoupon.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the redeemedCoupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the redeemedCoupon charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the redeemedCoupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the redeemedCoupon.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedCoupon.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the redeemedVoucher.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the redeemedVoucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the redeemedVoucher charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the redeemedVoucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the redeemedVoucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RedeemedVoucher.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to download",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetByCustomerNumberEndpoint+RequestModel": {
        "required": [
          "customerNumber"
        ],
        "type": "object",
        "properties": {
          "customerNumber": {
            "type": "integer",
            "description": "The customer number to filter sales by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the sale to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetByReceiptNumberEndpoint+RequestModel": {
        "required": [
          "receiptNumber"
        ],
        "type": "object",
        "properties": {
          "receiptNumber": {
            "type": "integer",
            "description": "The receipt number to filter sales by.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Sale.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the season to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the season. Can be found as number field in a season object or as SeasonNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Season.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the selection to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetByStatusAndArticleSizeNumberEndpoint+RequestModel": {
        "required": [
          "articleSizeNumber",
          "status"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "description": "The status of the selection.",
            "format": "int32"
          },
          "articleSizeNumber": {
            "type": "number",
            "description": "The articleSizeNumber of the selection.",
            "format": "double"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Selection.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the shape to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the shape. Can be found as number field in a shape object or as shapeNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shape.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the shipment to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetByWebOrderExternalOrderNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "externalOrderNumber": {
            "type": "string",
            "description": "External order number of a web order.",
            "nullable": true
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shipment.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the shipment option to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the shipment option. Can be found as number field in a shipment option object or as ShipmentOptionNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.ShipmentOption.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the shop to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the shop. Can be found as number field in a shop object or as ShopNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Shop.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the size to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetBySizeRangeNumberEndpoint+RequestModel": {
        "required": [
          "sizeRangeNumber"
        ],
        "type": "object",
        "properties": {
          "sizeRangeNumber": {
            "type": "integer",
            "description": "The number of the sizerange to filter by. Can be found as number field in a sizerange object or as sizeRangeNumber if referenced from another entity.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Size.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the sizeGroup to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the sizeGroup. Can be found as number field in a sizeGroup object or as sizeGroupNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeGroup.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the sizeRange to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the sizeRange. Can be found as number field in a sizeRange object or as sizeRangeNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SizeRange.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByArticleSizeIdEndpoint+RequestModel": {
        "required": [
          "articleSizeId"
        ],
        "type": "object",
        "properties": {
          "articleSizeId": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the article size to return special prices for.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByArticleSizeNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "articleSizeNumber": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The number of the article size to return special prices for.",
            "format": "int64"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByBranchEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branch": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Number of the branch to return special prices for.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the special price to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByWebArticleEndpoint+RequestModel": {
        "required": [
          "webArticleId"
        ],
        "type": "object",
        "properties": {
          "webArticleId": {
            "minLength": 1,
            "type": "string",
            "description": "Id of the web article to return special prices for.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetByWebArticleSizeEndpoint+RequestModel": {
        "required": [
          "webArticleSizeId"
        ],
        "type": "object",
        "properties": {
          "webArticleSizeId": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article size to return special prices for.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SpecialPrice.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the staff to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the staff. Can be found as number field in a staff object or as StaffNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Staff.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the supplier to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the supplier. Can be found as number field in a supplier object or as SupplierNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Supplier.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturn.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the supplier return to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturn.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturn.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturn.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturn.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the supplier return reason to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the supplier return reason. Can be found as number field in a supplier return reason object or as supplierReturnReasonNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.SupplierReturnReason.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the target group to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the target group. Can be found as number field in a target group object or as targetGroupNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.TargetGroup.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the union category to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the union category. Can be found as number field in a union category object or as UnionCategoryNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.UnionCategory.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetByCustomerNumberAndStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the voucher.",
            "format": "int32"
          },
          "customerNumber": {
            "maximum": 99999999,
            "minimum": 0,
            "type": "integer",
            "description": "The customerNumber of the voucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the voucher charge to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetByInternetCodeEndpoint+RequestModel": {
        "required": [
          "internetCode"
        ],
        "type": "object",
        "properties": {
          "internetCode": {
            "minLength": 1,
            "type": "string",
            "description": "The redeemable code of the voucher charge to return."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the voucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetByStatusEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "status": {
            "maximum": 1,
            "minimum": 0,
            "type": "integer",
            "description": "The status of the voucher.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.Voucher.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.VoucherReservation.DeleteEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "Unique id of the voucherReservation",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.VoucherReservation.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the voucherReservation to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.VoucherReservation.GetByVoucherIdEndpoint+RequestModel": {
        "required": [
          "voucherId"
        ],
        "type": "object",
        "properties": {
          "voucherId": {
            "minLength": 1,
            "type": "string",
            "description": "The id of the voucher.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.VoucherReservation.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.VoucherReservation.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticle.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticle.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticle.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticle.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticle.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web article images.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article image to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetByWebArticleIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "webArticleId": {
            "type": "string",
            "description": "Id of the web article.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web article images.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleImage.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web article properties.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article property to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetByWebArticleIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "webArticleId": {
            "type": "string",
            "description": "Id of the web article.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web article properties.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleProperty.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticlePropertyDefinition.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web article property definitions.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticlePropertyDefinition.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article property definition to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticlePropertyDefinition.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web article property definitions.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticlePropertyDefinition.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticlePropertyDefinition.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web article sizes.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article size to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetByWebArticleIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "webArticleId": {
            "type": "string",
            "description": "Id of the web article.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web article sizes.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebArticleSize.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetByBranchEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "The number of the branch to return web orders for.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetByExternalOrderNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "minLength": 1,
            "type": "string",
            "description": "The number of the web order. Can be found as number field in a web order object or as WebOrderNumber if referenced from another entity."
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web order to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrder.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web shop order position to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetByWebOrderIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "webOrderId": {
            "type": "string",
            "description": "Id of the web order.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetByWebOrderNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "webOrderNumber": {
            "type": "integer",
            "description": "Number of the web order.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebOrderPosition.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web payment option to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetByNumberEndpoint+RequestModel": {
        "required": [
          "number"
        ],
        "type": "object",
        "properties": {
          "number": {
            "type": "integer",
            "description": "The number of the web payment option. Can be found as number field in a web payment option object or as WebPaymentOptionNumber if referenced from another entity.",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetChangedEndpoint+RequestModel": {
        "required": [
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetExportByIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the export to return.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebPaymentOption.GetExportEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebStock.GetByBranchNumberByWebArticleIdEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "id": {
            "type": "string",
            "description": "The GUID of the web article to return stock for.",
            "format": "uuid"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebStock.GetByBranchNumberByWebArticleSizeIdEndpoint+RequestModel": {
        "required": [
          "id"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "id": {
            "minLength": 1,
            "type": "string",
            "description": "The GUID of the web article size to return stock for.",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebStock.GetByBranchNumberEndpoint+RequestModel": {
        "type": "object",
        "properties": {
          "branchNumber": {
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "api.Module.Entities.WebStock.GetChangedByBranchNumberEndpoint+RequestModel": {
        "required": [
          "branchNumber",
          "from",
          "to"
        ],
        "type": "object",
        "properties": {
          "branchNumber": {
            "maximum": 99999999,
            "minimum": 1,
            "type": "integer",
            "description": "Branch number of the web articles.",
            "format": "int32"
          },
          "from": {
            "minimum": 0,
            "exclusiveMinimum": true,
            "type": "integer",
            "description": "Start of the change ID range (excluding from). Use the range end of the previous synchronization run as the start for the next.",
            "format": "int64"
          },
          "to": {
            "type": "integer",
            "description": "End of the change ID range. The current maximum change ID per database can be retrieved through an endpoint.",
            "format": "int64"
          },
          "continuationToken": {
            "type": "string",
            "description": "Set the continuation token to from the previous request result to return the next page of results.",
            "format": "continuationToken",
            "nullable": true
          },
          "resultsPerPage": {
            "maximum": 100,
            "minimum": 1,
            "type": "integer",
            "description": "Configures the amount of records returned per page (Default if ommitted: 10).",
            "format": "int32"
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "description": "To obtain a token, send a POST request to the endpoint `https://auth.prohandel.cloud/api/v4/token`. The request body should include the login credentials provided by prohandel in JSON format. Ensure that the `apiKey` field contains the user's API key and the `secret` field contains the password.\r\n\r\n```json\r\n{\r\n  \"apiKey\": \"MaxMustermann\",\r\n  \"secret\": \"xxx\"\r\n}\r\n```\r\n\r\nUpon successful authentication, the server responds with a status code of 200 and provides the requested tokens. The response format includes the validity period in seconds.\r\n\r\n```json\r\n{\r\n  \"token\": {\r\n      \"value\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImU1MGEwYjB...\",\r\n      \"name\": \"token\",\r\n      \"expiresIn\": 1800\r\n  },\r\n  \"refreshToken\": {\r\n      \"value\": \"eyJhbGciOiJSUzI1NiIsImtpZCI6ImU1MGEwYjB...\",\r\n      \"name\": \"refreshToken\",\r\n      \"expiresIn\": 86400\r\n  }\r\n},\r\n\"serverUrl\": \"https://api.prohandel.de\",\r\n\"requiredActions\": []\r\n```\r\n\r\n## Token lifetime\r\n\r\nEach token's validity period is determined by the `expiresIn` field in the token response. You may renew a token once at least half its lifetime has elapsed. **Excessive token renewal requests will result in access revocation.**\r\n\r\n## Token refresh\r\n\r\nA new token can be obtained either by using the login credentials or by utilizing the refresh token provided during the initial login. To refresh a token using the refresh token, send a POST request to `https://auth.prohandel.cloud/api/v4/token/refresh`, with the `refreshToken` sent in the Authorization header.\r\n\r\n```http\r\nAuthorization: Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6ImU1MGEwYjB...\r\n```\r\n\r\n## Accessing Data\r\n\r\nWith the acquired access token, the third-party API can be accessed. The token must be included in the Authorization header field for each API request in the format `Bearer <token>`. If authorization fails, the server responds with a status code of 401, usually accompanied by a detailed error message in the `www-authenticate` header of the response.\r\n\r\n## Permissions\r\n\r\nDeveloper accounts include minimal permissions tailored to the individual use case. Permissions for each resource are categorized into create, read, update, and delete. Additional permissions can only be assigned by prohandel. Insufficient permissions for an endpoint query result in a server response with a status code of `403 - Forbidden`.",
        "scheme": "Bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}